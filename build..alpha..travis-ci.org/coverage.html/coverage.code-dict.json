{"/home/travis/build/npmtest/node-npmtest-react-templates/test.js":"/* istanbul instrument in package npmtest_react_templates */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        switch (local.modeJs) {\n        // re-init local from window.local\n        case 'browser':\n            local = local.global.utility2.objectSetDefault(\n                local.global.utility2_rollup || local.global.local,\n                local.global.utility2\n            );\n            break;\n        // re-init local from example.js\n        case 'node':\n            local = (local.global.utility2_rollup || require('utility2'))\n                .requireReadme();\n            break;\n        }\n        // export local\n        local.global.local = local;\n    }());\n\n\n\n    // run shared js-env code - function\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - function\n    case 'browser':\n        break;\n\n\n\n    // run node js-env code - function\n    case 'node':\n        break;\n    }\n\n\n\n    // run shared js-env code - post-init\n    (function () {\n        return;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // run browser js-env code - post-init\n    case 'browser':\n        local.testCase_browser_nullCase = local.testCase_browser_nullCase || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test browsers's null-case handling-behavior-behavior\n         */\n            onError(null, options);\n        };\n\n        // run tests\n        local.nop(local.modeTest &&\n            document.querySelector('#testRunButton1') &&\n            document.querySelector('#testRunButton1').click());\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        local.testCase_buildApidoc_default = local.testCase_buildApidoc_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApidoc's default handling-behavior-behavior\n         */\n            options = { modulePathList: module.paths };\n            local.buildApidoc(options, onError);\n        };\n\n        local.testCase_buildApp_default = local.testCase_buildApp_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildApp's default handling-behavior-behavior\n         */\n            local.testCase_buildReadme_default(options, local.onErrorThrow);\n            local.testCase_buildLib_default(options, local.onErrorThrow);\n            local.testCase_buildTest_default(options, local.onErrorThrow);\n            local.testCase_buildCustomOrg_default(options, local.onErrorThrow);\n            options = [];\n            local.buildApp(options, onError);\n        };\n\n        local.testCase_buildCustomOrg_default = local.testCase_buildCustomOrg_default ||\n            function (options, onError) {\n            /*\n             * this function will test buildCustomOrg's default handling-behavior\n             */\n                options = {};\n                local.buildCustomOrg(options, onError);\n            };\n\n        local.testCase_buildLib_default = local.testCase_buildLib_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildLib's default handling-behavior\n         */\n            options = {};\n            local.buildLib(options, onError);\n        };\n\n        local.testCase_buildReadme_default = local.testCase_buildReadme_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildReadme's default handling-behavior-behavior\n         */\n            options = {};\n            local.buildReadme(options, onError);\n        };\n\n        local.testCase_buildTest_default = local.testCase_buildTest_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test buildTest's default handling-behavior\n         */\n            options = {};\n            local.buildTest(options, onError);\n        };\n\n        local.testCase_webpage_default = local.testCase_webpage_default || function (\n            options,\n            onError\n        ) {\n        /*\n         * this function will test webpage's default handling-behavior\n         */\n            options = { modeCoverageMerge: true, url: local.serverLocalHost + '?modeTest=1' };\n            local.browserTest(options, onError);\n        };\n\n        // run test-server\n        local.testRunServer(local);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-react-templates/lib.npmtest_react_templates.js":"/* istanbul instrument in package npmtest_react_templates */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || local;\n        // init lib\n        local.local = local.npmtest_react_templates = local;\n        // init exports\n        if (local.modeJs === 'browser') {\n            local.global.utility2_npmtest_react_templates = local;\n        } else {\n            module.exports = local;\n            module.exports.__dirname = __dirname;\n            module.exports.module = module;\n        }\n    }());\n}());\n","/home/travis/build/npmtest/node-npmtest-react-templates/example.js":"/*\nexample.js\n\nquickstart example\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install npmtest-react-templates && PORT=8081 node example.js\n    3. play with the browser-demo on http://127.0.0.1:8081\n*/\n\n\n\n/* istanbul instrument in package npmtest_react_templates */\n/*jslint\n    bitwise: true,\n    browser: true,\n    maxerr: 8,\n    maxlen: 96,\n    node: true,\n    nomen: true,\n    regexp: true,\n    stupid: true\n*/\n(function () {\n    'use strict';\n    var local;\n\n\n\n    // run shared js-env code - pre-init\n    (function () {\n        // init local\n        local = {};\n        // init modeJs\n        local.modeJs = (function () {\n            try {\n                return typeof navigator.userAgent === 'string' &&\n                    typeof document.querySelector('body') === 'object' &&\n                    typeof XMLHttpRequest.prototype.open === 'function' &&\n                    'browser';\n            } catch (errorCaughtBrowser) {\n                return module.exports &&\n                    typeof process.versions.node === 'string' &&\n                    typeof require('http').createServer === 'function' &&\n                    'node';\n            }\n        }());\n        // init global\n        local.global = local.modeJs === 'browser'\n            ? window\n            : global;\n        // init utility2_rollup\n        local = local.global.utility2_rollup || (local.modeJs === 'browser'\n            ? local.global.utility2_npmtest_react_templates\n            : global.utility2_moduleExports);\n        // export local\n        local.global.local = local;\n    }());\n    switch (local.modeJs) {\n\n\n\n    // post-init\n    // run browser js-env code - post-init\n    /* istanbul ignore next */\n    case 'browser':\n        local.testRunBrowser = function (event) {\n            if (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('onreset'))) {\n                // reset output\n                Array.from(\n                    document.querySelectorAll('body > .resettable')\n                ).forEach(function (element) {\n                    switch (element.tagName) {\n                    case 'INPUT':\n                    case 'TEXTAREA':\n                        element.value = '';\n                        break;\n                    default:\n                        element.textContent = '';\n                    }\n                });\n            }\n            switch (event && event.currentTarget && event.currentTarget.id) {\n            case 'testRunButton1':\n                // show tests\n                if (document.querySelector('#testReportDiv1').style.display === 'none') {\n                    document.querySelector('#testReportDiv1').style.display = 'block';\n                    document.querySelector('#testRunButton1').textContent =\n                        'hide internal test';\n                    local.modeTest = true;\n                    local.testRunDefault(local);\n                // hide tests\n                } else {\n                    document.querySelector('#testReportDiv1').style.display = 'none';\n                    document.querySelector('#testRunButton1').textContent = 'run internal test';\n                }\n                break;\n            // custom-case\n            default:\n                break;\n            }\n            if (document.querySelector('#inputTextareaEval1') && (!event || (event &&\n                    event.currentTarget &&\n                    event.currentTarget.className &&\n                    event.currentTarget.className.includes &&\n                    event.currentTarget.className.includes('oneval')))) {\n                // try to eval input-code\n                try {\n                    /*jslint evil: true*/\n                    eval(document.querySelector('#inputTextareaEval1').value);\n                } catch (errorCaught) {\n                    console.error(errorCaught);\n                }\n            }\n        };\n        // log stderr and stdout to #outputTextareaStdout1\n        ['error', 'log'].forEach(function (key) {\n            console[key + '_original'] = console[key];\n            console[key] = function () {\n                var element;\n                console[key + '_original'].apply(console, arguments);\n                element = document.querySelector('#outputTextareaStdout1');\n                if (!element) {\n                    return;\n                }\n                // append text to #outputTextareaStdout1\n                element.value += Array.from(arguments).map(function (arg) {\n                    return typeof arg === 'string'\n                        ? arg\n                        : JSON.stringify(arg, null, 4);\n                }).join(' ') + '\\n';\n                // scroll textarea to bottom\n                element.scrollTop = element.scrollHeight;\n            };\n        });\n        // init event-handling\n        ['change', 'click', 'keyup'].forEach(function (event) {\n            Array.from(document.querySelectorAll('.on' + event)).forEach(function (element) {\n                element.addEventListener(event, local.testRunBrowser);\n            });\n        });\n        // run tests\n        local.testRunBrowser();\n        break;\n\n\n\n    // run node js-env code - post-init\n    /* istanbul ignore next */\n    case 'node':\n        // export local\n        module.exports = local;\n        // require modules\n        local.fs = require('fs');\n        local.http = require('http');\n        local.url = require('url');\n        // init assets\n        local.assetsDict = local.assetsDict || {};\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.index.template.html'] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"UTF-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<title>{{env.npm_package_name}} (v{{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n    box-sizing: false,\\n\\\n    universal-selector: false\\n\\\n*/\\n\\\n* {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #dde;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    margin: 2rem;\\n\\\n}\\n\\\nbody > * {\\n\\\n    margin-bottom: 1rem;\\n\\\n}\\n\\\n.utility2FooterDiv {\\n\\\n    margin-top: 20px;\\n\\\n    text-align: center;\\n\\\n}\\n\\\n</style>\\n\\\n<style>\\n\\\n/*csslint\\n\\\n*/\\n\\\ntextarea {\\n\\\n    font-family: monospace;\\n\\\n    height: 10rem;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ntextarea[readonly] {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<!-- utility2-comment\\n\\\n<div id=\"ajaxProgressDiv1\" style=\"background: #d00; height: 2px; left: 0; margin: 0; padding: 0; position: fixed; top: 0; transition: background 0.5s, width 1.5s; width: 25%;\"></div>\\n\\\nutility2-comment -->\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n    <a\\n\\\n        {{#if env.npm_package_homepage}}\\n\\\n        href=\"{{env.npm_package_homepage}}\"\\n\\\n        {{/if env.npm_package_homepage}}\\n\\\n        target=\"_blank\"\\n\\\n    >\\n\\\nutility2-comment -->\\n\\\n        {{env.npm_package_name}} (v{{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n    </a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<h4><a download href=\"assets.app.js\">download standalone app</a></h4>\\n\\\n<button class=\"onclick onreset\" id=\"testRunButton1\">run internal test</button><br>\\n\\\n<div id=\"testReportDiv1\" style=\"display: none;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"resettable\" id=\"outputTextareaStdout1\" readonly></textarea>\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.rollup.js\"></script>\\n\\\n<script src=\"jsonp.utility2._stateInit?callback=window.utility2._stateInit\"></script>\\n\\\n<script src=\"assets.npmtest_react_templates.rollup.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div class=\"utility2FooterDiv\">\\n\\\n    [ this app was created with\\n\\\n    <a href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\">utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n        /* jslint-ignore-end */\n        if (local.templateRender) {\n            local.assetsDict['/'] = local.templateRender(\n                local.assetsDict['/assets.index.template.html'],\n                {\n                    env: local.objectSetDefault(local.env, {\n                        npm_package_description: 'the greatest app in the world!',\n                        npm_package_name: 'my-app',\n                        npm_package_nameAlias: 'my_app',\n                        npm_package_version: '0.0.1'\n                    })\n                }\n            );\n        } else {\n            local.assetsDict['/'] = local.assetsDict['/assets.index.template.html']\n                .replace((/\\{\\{env\\.(\\w+?)\\}\\}/g), function (match0, match1) {\n                    // jslint-hack\n                    String(match0);\n                    switch (match1) {\n                    case 'npm_package_description':\n                        return 'the greatest app in the world!';\n                    case 'npm_package_name':\n                        return 'my-app';\n                    case 'npm_package_nameAlias':\n                        return 'my_app';\n                    case 'npm_package_version':\n                        return '0.0.1';\n                    }\n                });\n        }\n        // run the cli\n        if (local.global.utility2_rollup || module !== require.main) {\n            break;\n        }\n        local.assetsDict['/assets.example.js'] =\n            local.assetsDict['/assets.example.js'] ||\n            local.fs.readFileSync(__filename, 'utf8');\n        // bug-workaround - long $npm_package_buildCustomOrg\n        /* jslint-ignore-begin */\n        local.assetsDict['/assets.npmtest_react_templates.rollup.js'] =\n            local.assetsDict['/assets.npmtest_react_templates.rollup.js'] ||\n            local.fs.readFileSync(\n                local.npmtest_react_templates.__dirname + '/lib.npmtest_react_templates.js',\n                'utf8'\n            ).replace((/^#!/), '//');\n        /* jslint-ignore-end */\n        local.assetsDict['/favicon.ico'] = local.assetsDict['/favicon.ico'] || '';\n        // if $npm_config_timeout_exit exists,\n        // then exit this process after $npm_config_timeout_exit ms\n        if (Number(process.env.npm_config_timeout_exit)) {\n            setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n        }\n        // start server\n        if (local.global.utility2_serverHttp1) {\n            break;\n        }\n        process.env.PORT = process.env.PORT || '8081';\n        console.error('server starting on port ' + process.env.PORT);\n        local.http.createServer(function (request, response) {\n            request.urlParsed = local.url.parse(request.url);\n            if (local.assetsDict[request.urlParsed.pathname] !== undefined) {\n                response.end(local.assetsDict[request.urlParsed.pathname]);\n                return;\n            }\n            response.statusCode = 404;\n            response.end();\n        }).listen(process.env.PORT);\n        break;\n    }\n}());\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/dist/cli.js":"#!/usr/bin/env node\n\n'use strict';\n\nvar _ = require('lodash');\nvar path = require('path');\n// const fs = require('fs');\nvar api = require('./api');\nvar context = require('./context');\nvar shell = require('./shell');\nvar pkg = require('../package.json');\nvar options = require('./options');\nvar reactDOMSupport = require('./reactDOMSupport');\nvar reactTemplates = require('./reactTemplates');\nvar rtStyle = require('./rtStyle');\nvar glob = require('glob');\n\n/**\n * @param {Options} currentOptions\n * @return {number}\n */\nfunction executeOptions(currentOptions) {\n    var ret = 0;\n    var files = currentOptions._;\n    context.options.format = currentOptions.format || 'stylish';\n\n    if (currentOptions.version) {\n        console.log('v' + pkg.version);\n    } else if (currentOptions.help) {\n        if (files.length) {\n            console.log(options.generateHelpForOption(files[0]));\n        } else {\n            console.log(options.generateHelp());\n        }\n    } else if (currentOptions.listTargetVersion) {\n        printVersions(currentOptions);\n    } else if (files.length) {\n        // console.log(files);\n        // console.log(files.length);\n        // const allFiles = _.flatMap(files, f => {\n        //     const fp = path.resolve(context.cwd, f);\n        //     if (fs.statSync(fp).isDirectory()) {\n        //         // TODO: consider removing glob and simply walk the directory\n        //         return glob.sync(`${fp}/**/*.rt`, {cwd: context.cwd});\n        //     }\n        //     return fp;\n        // });\n        var allFiles = _.flatMap(files, function (f) {\n            return glob.sync(f, { cwd: context.cwd });\n        });\n        // console.log(allFiles.length);\n        _.forEach(allFiles, handleSingleFile.bind(this, currentOptions));\n        ret = shell.printResults(context);\n    } else {\n        console.log(options.generateHelp());\n    }\n    return ret;\n}\n\nfunction printVersions(currentOptions) {\n    var ret = Object.keys(reactDOMSupport);\n    if (currentOptions.format === 'json') {\n        console.log(JSON.stringify(ret, undefined, 2));\n    } else {\n        console.log(ret.join(', '));\n    }\n}\n\n/**\n * @param {Options} currentOptions\n * @param {string} filename file name to process\n */\nfunction handleSingleFile(currentOptions, filename) {\n    try {\n        var sourceExt = path.extname(filename);\n        var outputFilename = void 0;\n        if (sourceExt === '.rt') {\n            outputFilename = filename + (currentOptions.modules === 'typescript' ? '.ts' : '.js');\n        } else if (sourceExt === '.jsrt') {\n            outputFilename = filename.replace(/\\.jsrt$/, '.js');\n            currentOptions = _.assign({}, currentOptions, { modules: 'jsrt' });\n        } else if (sourceExt === '.rts') {\n            outputFilename = filename + '.js';\n            currentOptions = _.assign({}, currentOptions, { modules: 'rts' });\n        } else {\n            context.error('invalid file, only handle rt/jsrt files', filename);\n            return;\n        }\n        api.convertFile(filename, outputFilename, currentOptions, context);\n    } catch (e) {\n        context.error(e.message, filename, e.line, e.column, e.startOffset, e.endOffset);\n    }\n}\n\n/**\n * Executes the CLI based on an array of arguments that is passed in.\n * @param {string|Array|Object} args The arguments to process.\n * @returns {int} The exit code for the operation.\n */\nfunction execute(args) {\n    try {\n        var currentOptions = options.parse(args);\n        return executeOptions(currentOptions);\n    } catch (error) {\n        console.error(error.message);\n        return 1;\n    }\n}\n\nmodule.exports = {\n    context: context,\n    execute: execute,\n    executeOptions: executeOptions,\n    handleSingleFile: handleSingleFile,\n    convertTemplateToReact: reactTemplates.convertTemplateToReact,\n    convertStyle: rtStyle.convert\n};","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/dist/api.js":"'use strict';\n\nvar fs = require('fs');\nvar path = require('path');\nvar chalk = require('chalk');\nvar reactTemplates = require('./reactTemplates');\nvar fsUtil = require('./fsUtil');\nvar convertRT = reactTemplates.convertRT;\nvar convertJSRTToJS = reactTemplates.convertJSRTToJS;\n\n/**\n * @param {string} source\n * @param {string} target\n * @param {Options} options\n * @param {CONTEXT} context\n */\nfunction convertFile(source, target, options, context) {\n    options = options || {};\n    options.fileName = source;\n\n    if (!options.force && !fsUtil.isStale(source, target)) {\n        context.verbose('target file ' + chalk.cyan(target) + ' is up to date, skipping');\n        return;\n    }\n\n    var html = fs.readFileSync(source).toString();\n    if (path.extname(source) === '.rts') {\n        var rtStyle = require('./rtStyle');\n        var out = rtStyle.convert(html);\n        if (!options.dryRun) {\n            fs.writeFileSync(target, out);\n        }\n        return;\n    }\n    var modules = options.modules || 'none';\n    var shouldAddName = modules === 'none' && !options.name;\n    if (shouldAddName) {\n        options.name = reactTemplates.normalizeName(path.basename(source, path.extname(source))) + 'RT';\n    }\n    options.readFileSync = fsUtil.createRelativeReadFileSync(source);\n    var js = modules === 'jsrt' ? convertJSRTToJS(html, context, options) : convertRT(html, context, options);\n    if (!options.dryRun) {\n        fs.writeFileSync(target, js);\n    }\n    if (shouldAddName) {\n        delete options.name;\n    }\n}\n\nmodule.exports = {\n    convertFile: convertFile,\n    context: require('./context'),\n    _test: {}\n};","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/dist/reactTemplates.js":"'use strict';\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) { return typeof obj; } : function (obj) { return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj; };\n\nvar cheerio = require('cheerio');\nvar _ = require('lodash');\nvar esprima = require('esprima');\nvar escodegen = require('escodegen');\nvar reactDOMSupport = require('./reactDOMSupport');\nvar reactNativeSupport = require('./reactNativeSupport');\nvar reactPropTemplates = require('./reactPropTemplates');\nvar rtError = require('./RTCodeError');\nvar reactSupport = require('./reactSupport');\nvar templates = reactSupport.templates;\nvar utils = require('./utils');\nvar validateJS = utils.validateJS;\nvar RTCodeError = rtError.RTCodeError;\n\nvar repeatTemplate = _.template('_.map(<%= collection %>,<%= repeatFunction %>.bind(<%= repeatBinds %>))');\nvar ifTemplate = _.template('((<%= condition %>)?(<%= body %>):null)');\nvar propsTemplateSimple = _.template('_.assign({}, <%= generatedProps %>, <%= rtProps %>)');\nvar propsTemplate = _.template('mergeProps( <%= generatedProps %>, <%= rtProps %>)');\n\nvar propsMergeFunction = 'function mergeProps(inline,external) {\\n    var res = _.assign({},inline,external)\\n    if (inline.hasOwnProperty(\\'style\\')) {\\n        res.style = _.defaults(res.style, inline.style);\\n    }\\n    if (inline.hasOwnProperty(\\'className\\') && external.hasOwnProperty(\\'className\\')) {\\n        res.className = external.className + \\' \\' + inline.className;\\n    }\\n    return res;\\n}\\n';\n\nvar classSetTemplate = _.template('_.transform(<%= classSet %>, function(res, value, key){ if(value){ res.push(key); } }, []).join(\" \")');\n\nfunction getTagTemplateString(simpleTagTemplate, shouldCreateElement) {\n    if (simpleTagTemplate) {\n        return shouldCreateElement ? 'React.createElement(<%= name %>,<%= props %><%= children %>)' : '<%= name %>(<%= props %><%= children %>)';\n    }\n    return shouldCreateElement ? 'React.createElement.apply(this, [<%= name %>,<%= props %><%= children %>])' : '<%= name %>.apply(this, [<%= props %><%= children %>])';\n}\n\nvar commentTemplate = _.template(' /* <%= data %> */ ');\n\nvar repeatAttr = 'rt-repeat';\nvar ifAttr = 'rt-if';\nvar classSetAttr = 'rt-class';\nvar classAttr = 'class';\nvar scopeAttr = 'rt-scope';\nvar propsAttr = 'rt-props';\nvar templateNode = 'rt-template';\nvar virtualNode = 'rt-virtual';\nvar includeNode = 'rt-include';\nvar includeSrcAttr = 'src';\nvar requireAttr = 'rt-require';\nvar importAttr = 'rt-import';\nvar statelessAttr = 'rt-stateless';\nvar preAttr = 'rt-pre';\n\nvar reactTemplatesSelfClosingTags = [includeNode];\n\n/**\n * @param {Options} options\n * @return {Options}\n */\nfunction getOptions(options) {\n    options = options || {};\n    var defaultOptions = {\n        version: false,\n        force: false,\n        format: 'stylish',\n        targetVersion: reactDOMSupport.default,\n        lodashImportPath: 'lodash',\n        native: false,\n        nativeTargetVersion: reactNativeSupport.default\n    };\n\n    var finalOptions = _.defaults({}, options, defaultOptions);\n    finalOptions.reactImportPath = reactImport(finalOptions);\n    finalOptions.modules = finalOptions.modules || (finalOptions.native ? 'commonjs' : 'none');\n\n    var defaultPropTemplates = finalOptions.native ? reactPropTemplates.native[finalOptions.nativeTargetVersion] : reactPropTemplates.dom[finalOptions.targetVersion];\n\n    finalOptions.propTemplates = _.defaults({}, options.propTemplates, defaultPropTemplates);\n    return finalOptions;\n}\n\nfunction reactImport(options) {\n    if (options.native) {\n        return reactNativeSupport[options.nativeTargetVersion].react.module;\n    }\n    if (!options.reactImportPath) {\n        var isNewReact = _.includes(['0.14.0', '0.15.0', '15.0.0', '15.0.1'], options.targetVersion);\n        return isNewReact ? 'react' : 'react/addons';\n    }\n    return options.reactImportPath;\n}\n\n/**\n * @param {Context} context\n * @param {string} namePrefix\n * @param {string} body\n * @param {*?} params\n * @return {string}\n */\nfunction generateInjectedFunc(context, namePrefix, body, params) {\n    params = params || context.boundParams;\n    var funcName = namePrefix.replace(',', '') + (context.injectedFunctions.length + 1);\n    var funcText = 'function ' + funcName + '(' + params.join(',') + ') {\\n        ' + body + '\\n        }\\n        ';\n    context.injectedFunctions.push(funcText);\n    return funcName;\n}\n\nfunction generateTemplateProps(node, context) {\n    var templatePropCount = 0;\n    var propTemplateDefinition = context.options.propTemplates[node.name];\n    var propertiesTemplates = _(node.children).map(function (child, index) {\n        var templateProp = null;\n        if (child.name === templateNode) {\n            // Generic explicit template tag\n            if (!_.has(child.attribs, 'prop')) {\n                throw RTCodeError.build(context, child, 'rt-template must have a prop attribute');\n            }\n            if (_.filter(child.children, { type: 'tag' }).length !== 1) {\n                throw RTCodeError.build(context, child, \"'rt-template' should have a single non-text element as direct child\");\n            }\n\n            var childTemplate = _.find(context.options.propTemplates, { prop: child.attribs.prop }) || { arguments: [] };\n            templateProp = {\n                prop: child.attribs.prop,\n                arguments: (child.attribs.arguments ? child.attribs.arguments.split(',') : childTemplate.arguments) || []\n            };\n        } else if (propTemplateDefinition && propTemplateDefinition[child.name]) {\n            // Implicit child template from configuration\n            templateProp = {\n                prop: propTemplateDefinition[child.name].prop,\n                arguments: child.attribs.arguments ? child.attribs.arguments.split(',') : propTemplateDefinition[child.name].arguments\n            };\n        }\n\n        if (templateProp) {\n            _.assign(templateProp, { childIndex: index - templatePropCount++, content: _.find(child.children, { type: 'tag' }) });\n        }\n\n        return templateProp;\n    }).compact().value();\n\n    return _.transform(propertiesTemplates, function (props, templateProp) {\n        var functionParams = _.values(context.boundParams).concat(templateProp.arguments);\n\n        var oldBoundParams = context.boundParams;\n        context.boundParams = context.boundParams.concat(templateProp.arguments);\n\n        var functionBody = 'return ' + convertHtmlToReact(templateProp.content, context);\n        context.boundParams = oldBoundParams;\n\n        var generatedFuncName = generateInjectedFunc(context, templateProp.prop, functionBody, functionParams);\n        props[templateProp.prop] = genBind(generatedFuncName, _.values(context.boundParams));\n\n        // Remove the template child from the children definition.\n        node.children.splice(templateProp.childIndex, 1);\n    }, {});\n}\n\n/**\n * @param node\n * @param {Context} context\n * @return {string}\n */\nfunction generateProps(node, context) {\n    var props = {};\n    _.forOwn(node.attribs, function (val, key) {\n        var propKey = reactSupport.attributesMapping[key.toLowerCase()] || key;\n        if (props.hasOwnProperty(propKey) && propKey !== reactSupport.classNameProp) {\n            throw RTCodeError.build(context, node, 'duplicate definition of ' + propKey + ' ' + JSON.stringify(node.attribs));\n        }\n        if (_.startsWith(key, 'on') && !utils.isStringOnlyCode(val)) {\n            props[propKey] = handleEventHandler(val, context, node, key);\n        } else if (key === 'style' && !utils.isStringOnlyCode(val)) {\n            props[propKey] = handleStyleProp(val, node, context);\n        } else if (propKey === reactSupport.classNameProp) {\n            // Processing for both class and rt-class conveniently return strings that\n            // represent JS expressions, each evaluating to a space-separated set of class names.\n            // We can just join them with another space here.\n            var existing = props[propKey] ? props[propKey] + ' + \" \" + ' : '';\n            if (key === classSetAttr) {\n                props[propKey] = existing + classSetTemplate({ classSet: val });\n            } else if (key === classAttr || key === reactSupport.classNameProp) {\n                props[propKey] = existing + utils.convertText(node, context, val.trim());\n            }\n        } else if (!_.startsWith(key, 'rt-')) {\n            props[propKey] = utils.convertText(node, context, val.trim());\n        }\n    });\n    _.assign(props, generateTemplateProps(node, context));\n\n    // map 'className' back into 'class' for custom elements\n    if (props[reactSupport.classNameProp] && isCustomElement(node.name)) {\n        props[classAttr] = props[reactSupport.classNameProp];\n        delete props[reactSupport.classNameProp];\n    }\n\n    var propStr = _.map(props, function (v, k) {\n        return JSON.stringify(k) + ' : ' + v;\n    }).join(',');\n    return '{' + propStr + '}';\n}\n\nfunction handleEventHandler(val, context, node, key) {\n    var funcParts = val.split('=>');\n    if (funcParts.length !== 2) {\n        throw RTCodeError.build(context, node, 'when using \\'on\\' events, use lambda \\'(p1,p2)=>body\\' notation or use {} to return a callback function. error: [' + key + '=\\'' + val + '\\']');\n    }\n    var evtParams = funcParts[0].replace('(', '').replace(')', '').trim();\n    var funcBody = funcParts[1].trim();\n    var params = context.boundParams;\n    if (evtParams.trim() !== '') {\n        params = params.concat([evtParams.trim()]);\n    }\n    var generatedFuncName = generateInjectedFunc(context, key, funcBody, params);\n    return genBind(generatedFuncName, context.boundParams);\n}\n\nfunction genBind(func, args) {\n    var bindArgs = ['this'].concat(args);\n    return func + '.bind(' + bindArgs.join(',') + ')';\n}\n\nfunction handleStyleProp(val, node, context) {\n    var styleStr = _(val).split(';').map(_.trim).filter(function (i) {\n        return _.includes(i, ':');\n    }).map(function (i) {\n        var pair = i.split(':');\n        var key = pair[0].trim();\n        if (/\\{|}/g.test(key)) {\n            throw RTCodeError.build(context, node, 'style attribute keys cannot contain { } expressions');\n        }\n        var value = pair.slice(1).join(':').trim();\n        var parsedKey = /(^-moz-)|(^-o-)|(^-webkit-)/ig.test(key) ? _.upperFirst(_.camelCase(key)) : _.camelCase(key);\n        return parsedKey + ' : ' + utils.convertText(node, context, value.trim());\n    }).join(',');\n    return '{' + styleStr + '}';\n}\n\n/**\n * @param {string} tagName\n * @param context\n * @return {string}\n */\nfunction convertTagNameToConstructor(tagName, context) {\n    if (context.options.native) {\n        var targetSupport = reactNativeSupport[context.options.nativeTargetVersion];\n        return _.includes(targetSupport.components, tagName) ? targetSupport.reactNative.name + '.' + tagName : tagName;\n    }\n    var isHtmlTag = _.includes(reactDOMSupport[context.options.targetVersion], tagName) || isCustomElement(tagName);\n    if (reactSupport.shouldUseCreateElement(context)) {\n        isHtmlTag = isHtmlTag || tagName.match(/^\\w+(-\\w+)+$/);\n        return isHtmlTag ? '\\'' + tagName + '\\'' : tagName;\n    }\n    return isHtmlTag ? 'React.DOM.' + tagName : tagName;\n}\n\nfunction isCustomElement(tagName) {\n    return tagName.match(/^\\w+(-\\w+)+$/);\n}\n\n/**\n * @param {string} html\n * @param options\n * @param reportContext\n * @return {Context}\n */\nfunction defaultContext(html, options, reportContext) {\n    var defaultDefines = [{ moduleName: options.reactImportPath, alias: 'React', member: '*' }, { moduleName: options.lodashImportPath, alias: '_', member: '*' }];\n    if (options.native) {\n        var targetSupport = reactNativeSupport[options.nativeTargetVersion];\n        if (targetSupport.reactNative.module !== targetSupport.react.module) {\n            defaultDefines.splice(0, 0, { moduleName: targetSupport.reactNative.module, alias: targetSupport.reactNative.name, member: '*' });\n        }\n    }\n    return {\n        boundParams: [],\n        injectedFunctions: [],\n        html: html,\n        options: options,\n        defines: options.defines ? _.clone(options.defines) : defaultDefines,\n        reportContext: reportContext\n    };\n}\n\n/**\n * @param node\n * @return {boolean}\n */\nfunction hasNonSimpleChildren(node) {\n    return _.some(node.children, function (child) {\n        return child.type === 'tag' && child.attribs[repeatAttr];\n    });\n}\n\n/**\n * Trims a string the same way as String.prototype.trim(), but preserving all non breaking spaces ('\\xA0')\n * @param {string} text\n * @return {string}\n */\nfunction trimHtmlText(text) {\n    return text.replace(/^[ \\f\\n\\r\\t\\v\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]+|[ \\f\\n\\r\\t\\v\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]+$/g, '');\n}\n\n/**\n * @param node\n * @param {Context} context\n * @return {string}\n */\nfunction convertHtmlToReact(node, context) {\n    if (node.type === 'tag' || node.type === 'style') {\n        var _ret = function () {\n            context = _.defaults({\n                boundParams: _.clone(context.boundParams)\n            }, context);\n\n            if (node.type === 'tag' && node.name === importAttr) {\n                throw RTCodeError.build(context, node, \"'rt-import' must be a toplevel node\");\n            }\n\n            if (node.type === 'tag' && node.name === includeNode) {\n                var srcFile = node.attribs[includeSrcAttr];\n                if (!srcFile) {\n                    throw RTCodeError.build(context, node, 'rt-include must supply a source attribute');\n                }\n                if (!context.options.readFileSync) {\n                    throw RTCodeError.build(context, node, 'rt-include needs a readFileSync polyfill on options');\n                }\n                try {\n                    context.html = context.options.readFileSync(srcFile);\n                } catch (e) {\n                    console.error(e);\n                    throw RTCodeError.build(context, node, 'rt-include failed to read file \\'' + srcFile + '\\'');\n                }\n                return {\n                    v: parseAndConvertHtmlToReact(context.html, context)\n                };\n            }\n\n            var data = { name: convertTagNameToConstructor(node.name, context) };\n\n            // Order matters. We need to add the item and itemIndex to context.boundParams before\n            // the rt-scope directive is processed, lest they are not passed to the child scopes\n            if (node.attribs[repeatAttr]) {\n                var arr = node.attribs[repeatAttr].split(' in ');\n                if (arr.length !== 2) {\n                    throw RTCodeError.build(context, node, 'rt-repeat invalid \\'in\\' expression \\'' + node.attribs[repeatAttr] + '\\'');\n                }\n                var repeaterParams = arr[0].split(',').map(function (s) {\n                    return s.trim();\n                });\n                data.item = repeaterParams[0];\n                data.index = repeaterParams[1] || data.item + 'Index';\n                data.collection = arr[1].trim();\n                var bindParams = [data.item, data.index];\n                _.forEach(bindParams, function (param) {\n                    validateJS(param, node, context);\n                });\n                validateJS('(' + data.collection + ')', node, context);\n                _.forEach(bindParams, function (param) {\n                    if (!_.includes(context.boundParams, param)) {\n                        context.boundParams.push(param);\n                    }\n                });\n            }\n\n            if (node.attribs[scopeAttr]) {\n                handleScopeAttribute(node, context, data);\n            }\n\n            if (node.attribs[ifAttr]) {\n                validateIfAttribute(node, context, data);\n                data.condition = node.attribs[ifAttr].trim();\n                if (!node.attribs.key && node.name !== virtualNode) {\n                    _.set(node, ['attribs', 'key'], '' + node.startIndex);\n                }\n            }\n\n            data.props = generateProps(node, context);\n            if (node.attribs[propsAttr]) {\n                if (data.props === '{}') {\n                    data.props = node.attribs[propsAttr];\n                } else if (!node.attribs.style && !node.attribs.class) {\n                    data.props = propsTemplateSimple({ generatedProps: data.props, rtProps: node.attribs[propsAttr] });\n                } else {\n                    data.props = propsTemplate({ generatedProps: data.props, rtProps: node.attribs[propsAttr] });\n                    if (!_.includes(context.injectedFunctions, propsMergeFunction)) {\n                        context.injectedFunctions.push(propsMergeFunction);\n                    }\n                }\n            }\n\n            if (node.name === virtualNode) {\n                var invalidAttributes = _.without(_.keys(node.attribs), scopeAttr, ifAttr, repeatAttr);\n                if (invalidAttributes.length > 0) {\n                    throw RTCodeError.build(context, node, \"<rt-virtual> may not contain attributes other than 'rt-scope', 'rt-if' and 'rt-repeat'\");\n                }\n\n                // provide a key to virtual node children if missing\n                if (node.children.length > 1) {\n                    _(node.children).reject('attribs.key').forEach(function (child, i) {\n                        if (child.type === 'tag' && child.name !== virtualNode) {\n                            _.set(child, ['attribs', 'key'], '' + node.startIndex + i);\n                        }\n                    });\n                }\n            }\n\n            var children = _.map(node.children, function (child) {\n                var code = convertHtmlToReact(child, context);\n                validateJS(code, child, context);\n                return code;\n            });\n\n            data.children = utils.concatChildren(children);\n\n            if (node.name === virtualNode) {\n                //eslint-disable-line wix-editor/prefer-ternary\n                data.body = '[' + _.compact(children).join(',') + ']';\n            } else {\n                data.body = _.template(getTagTemplateString(!hasNonSimpleChildren(node), reactSupport.shouldUseCreateElement(context)))(data);\n            }\n\n            if (node.attribs[scopeAttr]) {\n                var functionBody = _.values(data.innerScope.innerMapping).join('\\n') + ('return ' + data.body);\n                var generatedFuncName = generateInjectedFunc(context, 'scope' + data.innerScope.scopeName, functionBody, _.keys(data.innerScope.outerMapping));\n                data.body = generatedFuncName + '.apply(this, [' + _.values(data.innerScope.outerMapping).join(',') + '])';\n            }\n\n            // Order matters here. Each rt-repeat iteration wraps over the rt-scope, so\n            // the scope variables are evaluated in context of the current iteration.\n            if (node.attribs[repeatAttr]) {\n                data.repeatFunction = generateInjectedFunc(context, 'repeat' + _.upperFirst(data.item), 'return ' + data.body);\n                data.repeatBinds = ['this'].concat(_.reject(context.boundParams, function (p) {\n                    return p === data.item || p === data.index || data.innerScope && p in data.innerScope.innerMapping;\n                }));\n                data.body = repeatTemplate(data);\n            }\n            if (node.attribs[ifAttr]) {\n                data.body = ifTemplate(data);\n            }\n            return {\n                v: data.body\n            };\n        }();\n\n        if ((typeof _ret === 'undefined' ? 'undefined' : _typeof(_ret)) === \"object\") return _ret.v;\n    } else if (node.type === 'comment') {\n        var sanitizedComment = node.data.split('*/').join('* /');\n        return commentTemplate({ data: sanitizedComment });\n    } else if (node.type === 'text') {\n        var parentNode = node.parent;\n        var overrideNormalize = parentNode !== undefined && (parentNode.name === 'pre' || parentNode.name === 'textarea' || _.has(parentNode.attribs, preAttr));\n        var normalizeWhitespaces = context.options.normalizeHtmlWhitespace && !overrideNormalize;\n        var text = node.data;\n        return trimHtmlText(text) ? utils.convertText(node, context, text, normalizeWhitespaces) : '';\n    }\n}\n\n/**\n * Parses the rt-scope attribute returning an array of parsed sections\n *\n * @param {String} scope The scope attribute to parse\n * @returns {Array} an array of {expression,identifier}\n * @throws {String} the part of the string that failed to parse\n */\nfunction parseScopeSyntax(text) {\n    // the regex below was built using the following pseudo-code:\n    // double_quoted_string = `\"[^\"\\\\\\\\]*(?:\\\\\\\\.[^\"\\\\\\\\]*)*\"`\n    // single_quoted_string = `'[^'\\\\\\\\]*(?:\\\\\\\\.[^'\\\\\\\\]*)*'`\n    // text_out_of_quotes = `[^\"']*?`\n    // expr_parts = double_quoted_string + \"|\" + single_quoted_string + \"|\" + text_out_of_quotes\n    // expression = zeroOrMore(nonCapture(expr_parts)) + \"?\"\n    // id = \"[$_a-zA-Z]+[$_a-zA-Z0-9]*\"\n    // as = \" as\" + OneOrMore(\" \")\n    // optional_spaces = zeroOrMore(\" \")\n    // semicolon = nonCapture(or(text(\";\"), \"$\"))\n    //\n    // regex = capture(expression) + as + capture(id) + optional_spaces + semicolon + optional_spaces\n\n    var regex = RegExp(\"((?:(?:\\\"[^\\\"\\\\\\\\]*(?:\\\\\\\\.[^\\\"\\\\\\\\]*)*\\\"|'[^'\\\\\\\\]*(?:\\\\\\\\.[^'\\\\\\\\]*)*'|[^\\\"']*?))*?) as(?: )+([$_a-zA-Z]+[$_a-zA-Z0-9]*)(?: )*(?:;|$)(?: )*\", 'g');\n    var res = [];\n    do {\n        var idx = regex.lastIndex;\n        var match = regex.exec(text);\n        if (regex.lastIndex === idx || match === null) {\n            throw text.substr(idx);\n        }\n        if (match.index === regex.lastIndex) {\n            regex.lastIndex++;\n        }\n        res.push({ expression: match[1].trim(), identifier: match[2] });\n    } while (regex.lastIndex < text.length);\n\n    return res;\n}\n\nfunction handleScopeAttribute(node, context, data) {\n    data.innerScope = {\n        scopeName: '',\n        innerMapping: {},\n        outerMapping: {}\n    };\n\n    data.innerScope.outerMapping = _.zipObject(context.boundParams, context.boundParams);\n\n    var scopes = void 0;\n    try {\n        scopes = parseScopeSyntax(node.attribs[scopeAttr]);\n    } catch (scopePart) {\n        throw RTCodeError.build(context, node, 'invalid scope part \\'' + scopePart + '\\'');\n    }\n\n    scopes.forEach(function (_ref) {\n        var expression = _ref.expression,\n            identifier = _ref.identifier;\n\n        validateJS(identifier, node, context);\n\n        // this adds both parameters to the list of parameters passed further down\n        // the scope chain, as well as variables that are locally bound before any\n        // function call, as with the ones we generate for rt-scope.\n        if (!_.includes(context.boundParams, identifier)) {\n            context.boundParams.push(identifier);\n        }\n\n        data.innerScope.scopeName += _.upperFirst(identifier);\n        data.innerScope.innerMapping[identifier] = 'var ' + identifier + ' = ' + expression + ';';\n        validateJS(data.innerScope.innerMapping[identifier], node, context);\n    });\n}\n\nfunction validateIfAttribute(node, context, data) {\n    var innerMappingKeys = _.keys(data.innerScope && data.innerScope.innerMapping || {});\n    var ifAttributeTree = null;\n    try {\n        ifAttributeTree = esprima.parse(node.attribs[ifAttr]);\n    } catch (e) {\n        throw new RTCodeError(e.message, e.index, -1);\n    }\n    if (ifAttributeTree && ifAttributeTree.body && ifAttributeTree.body.length === 1 && ifAttributeTree.body[0].type === 'ExpressionStatement') {\n        // make sure that rt-if does not use an inner mapping\n        if (ifAttributeTree.body[0].expression && utils.usesScopeName(innerMappingKeys, ifAttributeTree.body[0].expression)) {\n            throw RTCodeError.buildFormat(context, node, \"invalid scope mapping used in if part '%s'\", node.attribs[ifAttr]);\n        }\n    } else {\n        throw RTCodeError.buildFormat(context, node, \"invalid if part '%s'\", node.attribs[ifAttr]);\n    }\n}\n\nfunction handleSelfClosingHtmlTags(nodes) {\n    return _.flatMap(nodes, function (node) {\n        var externalNodes = [];\n        node.children = handleSelfClosingHtmlTags(node.children);\n        if (node.type === 'tag' && (_.includes(reactSupport.htmlSelfClosingTags, node.name) || _.includes(reactTemplatesSelfClosingTags, node.name))) {\n            externalNodes = _.filter(node.children, { type: 'tag' });\n            _.forEach(externalNodes, function (i) {\n                i.parent = node;\n            });\n            node.children = _.reject(node.children, { type: 'tag' });\n        }\n        return [node].concat(externalNodes);\n    });\n}\n\nfunction handleRequire(tag, context) {\n    var moduleName = void 0;\n    var alias = void 0;\n    var member = void 0;\n    if (tag.children.length) {\n        throw RTCodeError.build(context, tag, '\\'' + requireAttr + '\\' may have no children');\n    } else if (tag.attribs.dependency && tag.attribs.as) {\n        moduleName = tag.attribs.dependency;\n        member = '*';\n        alias = tag.attribs.as;\n    }\n    if (!moduleName) {\n        throw RTCodeError.build(context, tag, '\\'' + requireAttr + '\\' needs \\'dependency\\' and \\'as\\' attributes');\n    }\n    context.defines.push({ moduleName: moduleName, member: member, alias: alias });\n}\n\nfunction handleImport(tag, context) {\n    var moduleName = void 0;\n    var alias = void 0;\n    var member = void 0;\n    if (tag.children.length) {\n        throw RTCodeError.build(context, tag, '\\'' + importAttr + '\\' may have no children');\n    } else if (tag.attribs.name && tag.attribs.from) {\n        moduleName = tag.attribs.from;\n        member = tag.attribs.name;\n        alias = tag.attribs.as;\n        if (!alias) {\n            if (member === '*') {\n                throw RTCodeError.build(context, tag, \"'*' imports must have an 'as' attribute\");\n            } else if (member === 'default') {\n                throw RTCodeError.build(context, tag, \"default imports must have an 'as' attribute\");\n            }\n            alias = member;\n        }\n    }\n    if (!moduleName) {\n        throw RTCodeError.build(context, tag, '\\'' + importAttr + '\\' needs \\'name\\' and \\'from\\' attributes');\n    }\n    context.defines.push({ moduleName: moduleName, member: member, alias: alias });\n}\n\nfunction convertTemplateToReact(html, options) {\n    var context = require('./context');\n    return convertRT(html, context, options);\n}\n\nfunction parseAndConvertHtmlToReact(html, context) {\n    var rootNode = cheerio.load(html, {\n        lowerCaseTags: false,\n        lowerCaseAttributeNames: false,\n        xmlMode: true,\n        withStartIndices: true\n    });\n    utils.validate(context.options, context, context.reportContext, rootNode.root()[0]);\n    var rootTags = _.filter(rootNode.root()[0].children, { type: 'tag' });\n    rootTags = handleSelfClosingHtmlTags(rootTags);\n    if (!rootTags || rootTags.length === 0) {\n        throw new RTCodeError('Document should have a root element');\n    }\n    var firstTag = null;\n    _.forEach(rootTags, function (tag) {\n        if (tag.name === requireAttr) {\n            handleRequire(tag, context);\n        } else if (tag.name === importAttr) {\n            handleImport(tag, context);\n        } else if (firstTag === null) {\n            firstTag = tag;\n            if (_.hasIn(tag, ['attribs', statelessAttr])) {\n                context.stateless = true;\n            }\n        } else {\n            throw RTCodeError.build(context, tag, 'Document should have no more than a single root element');\n        }\n    });\n    if (firstTag === null) {\n        throw RTCodeError.build(context, rootNode.root()[0], 'Document should have a single root element');\n    } else if (firstTag.name === virtualNode) {\n        throw RTCodeError.build(context, firstTag, 'Document should not have <' + virtualNode + '> as root element');\n    } else if (_.includes(_.keys(firstTag.attribs), repeatAttr)) {\n        throw RTCodeError.build(context, firstTag, \"root element may not have a 'rt-repeat' attribute\");\n    }\n    return convertHtmlToReact(firstTag, context);\n}\n\n/**\n * @param {string} html\n * @param {CONTEXT} reportContext\n * @param {Options?} options\n * @return {string}\n */\nfunction convertRT(html, reportContext, options) {\n    options = getOptions(options);\n\n    var context = defaultContext(html, options, reportContext);\n    var body = parseAndConvertHtmlToReact(html, context);\n    var injectedFunctions = context.injectedFunctions.join('\\n');\n    var statelessParams = context.stateless ? 'props, context' : '';\n    var renderFunction = 'function(' + statelessParams + ') { ' + injectedFunctions + 'return ' + body + ' }';\n\n    var requirePaths = _.map(context.defines, function (d) {\n        return '\"' + d.moduleName + '\"';\n    }).join(',');\n    var requireNames = _.map(context.defines, function (d) {\n        return '' + d.alias;\n    }).join(',');\n    var AMDArguments = _.map(context.defines, function (d, i) {\n        return d.member === '*' ? '' + d.alias : '$' + i;\n    }).join(','); //eslint-disable-line\n    var AMDSubstitutions = _.map(context.defines, function (d, i) {\n        return d.member === '*' ? null : 'var ' + d.alias + ' = $' + i + '.' + d.member + ';';\n    }).join('\\n'); //eslint-disable-line\n    var buildImport = reactSupport.buildImport[options.modules] || reactSupport.buildImport.commonjs;\n    var requires = _.map(context.defines, buildImport).join('\\n');\n    var header = options.flow ? '/* @flow */\\n' : '';\n    var vars = header + requires;\n    var data = {\n        renderFunction: renderFunction,\n        requireNames: requireNames,\n        requirePaths: requirePaths,\n        AMDArguments: AMDArguments,\n        AMDSubstitutions: AMDSubstitutions,\n        vars: vars,\n        name: options.name\n    };\n    var code = templates[options.modules](data);\n    if (options.modules !== 'typescript' && options.modules !== 'jsrt') {\n        code = parseJS(code, options);\n    }\n    return code;\n}\n\nfunction parseJS(code, options) {\n    try {\n        var tree = esprima.parse(code, { range: true, tokens: true, comment: true, sourceType: 'module' });\n        // fix for https://github.com/wix/react-templates/issues/157\n        // do not include comments for es6 modules due to bug in dependency \"escodegen\"\n        // to be removed when https://github.com/estools/escodegen/issues/263 will be fixed\n        // remove also its test case \"test/data/comment.rt.es6.js\"\n        if (options.modules !== 'es6') {\n            tree = escodegen.attachComments(tree, tree.comments, tree.tokens);\n        }\n        return escodegen.generate(tree, { comment: true });\n    } catch (e) {\n        throw new RTCodeError(e.message, e.index, -1);\n    }\n}\n\nfunction convertJSRTToJS(text, reportContext, options) {\n    options = getOptions(options);\n    options.modules = 'jsrt';\n    var templateMatcherJSRT = /<template>([^]*?)<\\/template>/gm;\n    var code = text.replace(templateMatcherJSRT, function (template, html) {\n        return convertRT(html, reportContext, options).replace(/;$/, '');\n    });\n\n    return parseJS(code, options);\n}\n\nmodule.exports = {\n    convertTemplateToReact: convertTemplateToReact,\n    convertRT: convertRT,\n    convertJSRTToJS: convertJSRTToJS,\n    RTCodeError: RTCodeError,\n    normalizeName: utils.normalizeName\n};","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/dist/reactDOMSupport.js":"'use strict';\n\nvar ver0_12_0 = ['a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'big', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'main', 'map', 'mark', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr', 'circle', 'defs', 'ellipse', 'g', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'text', 'tspan'];\nvar ver0_11_2 = ['a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'big', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'main', 'map', 'mark', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr', 'circle', 'defs', 'ellipse', 'g', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'text', 'tspan', 'injection'];\nvar ver0_11_0 = ['a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'big', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'main', 'map', 'mark', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr', 'circle', 'defs', 'ellipse', 'g', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'text', 'tspan', 'injection'];\nvar ver0_10_0 = ['a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'big', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'main', 'map', 'mark', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr', 'circle', 'defs', 'g', 'line', 'linearGradient', 'path', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'text', 'injection'];\nvar svg = ['a', 'altGlyph', 'altGlyphDef', 'altGlyphItem', 'animate', 'animateMotion', 'animateTransform', 'circle', 'clipPath', 'color-profile', 'cursor', 'defs', 'desc', 'ellipse', 'feBlend', 'g', 'image', 'line', 'linearGradient', 'marker', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'text', 'tref', 'tspan', 'use'];\nvar v12_svg = ver0_12_0.concat(svg);\n\nvar versions = {\n    '15.0.1': v12_svg,\n    '15.0.0': v12_svg,\n    '0.14.0': v12_svg,\n    '0.13.1': v12_svg,\n    '0.12.2': v12_svg,\n    '0.12.1': v12_svg,\n    '0.12.0': v12_svg,\n    '0.11.2': ver0_11_2,\n    '0.11.1': ver0_11_0,\n    '0.11.0': ver0_11_0,\n    '0.10.0': ver0_10_0,\n    default: '0.14.0'\n};\nmodule.exports = versions;","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/dist/reactNativeSupport.js":"'use strict';\n\nvar ver0_9_0 = ['ActivityIndicatorIOS', 'DatePickerIOS', 'Image', 'ListView', 'MapView', 'Navigator', 'NavigatorIOS', 'PickerIOS', 'ScrollView', 'SliderIOS', 'SwitchIOS', 'TabBarIOS', 'Text', 'TextInput', 'TouchableHighlight', 'TouchableOpacity', 'TouchableWithoutFeedback', 'View', 'WebView'];\n\nvar versions = {\n    '0.9.0': {\n        react: { name: 'React', module: 'react-native' },\n        reactNative: { name: 'React', module: 'react-native' },\n        components: ver0_9_0\n    },\n    '0.29.0': {\n        react: { name: 'React', module: 'react' },\n        reactNative: { name: 'ReactNative', module: 'react-native' },\n        components: ver0_9_0\n    },\n    default: '0.9.0'\n};\n\nmodule.exports = versions;","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/dist/reactPropTemplates.js":"'use strict';\n\nvar native = {\n    '0.9.0': {\n        ListView: {\n            Row: { prop: 'renderRow', arguments: ['rowData', 'sectionID', 'rowID', 'highlightRow'] },\n            Footer: { prop: 'renderFooter', arguments: [] },\n            Header: { prop: 'renderHeader', arguments: [] },\n            ScrollComponent: { prop: 'renderScrollComponent', arguments: ['props'] },\n            SectionHeader: { prop: 'renderSectionHeader', arguments: ['sectionData', 'sectionID'] },\n            Separator: { prop: 'renderSeparator', arguments: ['sectionID', 'rowID', 'adjacentRowHighlighted'] }\n        }\n    },\n    '0.29.0': {\n        ListView: {\n            Row: { prop: 'renderRow', arguments: ['rowData', 'sectionID', 'rowID', 'highlightRow'] },\n            Footer: { prop: 'renderFooter', arguments: [] },\n            Header: { prop: 'renderHeader', arguments: [] },\n            ScrollComponent: { prop: 'renderScrollComponent', arguments: ['props'] },\n            SectionHeader: { prop: 'renderSectionHeader', arguments: ['sectionData', 'sectionID'] },\n            Separator: { prop: 'renderSeparator', arguments: ['sectionID', 'rowID', 'adjacentRowHighlighted'] }\n        }\n    }\n};\n\nmodule.exports = {\n    native: native,\n    dom: {}\n};","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/dist/RTCodeError.js":"'use strict';\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar util = require('util');\nvar _ = require('lodash');\n\n/**\n * @typedef {{line: number, col: number}} Pos\n */\n\n/**\n * @param {string} html\n * @param node\n * @return {Pos}\n */\nfunction getLine(html, node) {\n    if (!node) {\n        return { line: 1, col: 1 };\n    }\n    var linesUntil = html.substring(0, node.startIndex).split('\\n');\n    return { line: linesUntil.length, col: linesUntil[linesUntil.length - 1].length + 1 };\n}\n\nfunction norm(n) {\n    return n === undefined ? -1 : n;\n}\n\n/**\n * @param {string} message\n * @param {number=} startOffset\n * @param {number=} endOffset\n * @param {number=} line\n * @param {number=} column\n * @constructor\n */\n\nvar RTCodeError = function (_Error) {\n    _inherits(RTCodeError, _Error);\n\n    function RTCodeError(message, startOffset, endOffset, line, column) {\n        _classCallCheck(this, RTCodeError);\n\n        var _this = _possibleConstructorReturn(this, (RTCodeError.__proto__ || Object.getPrototypeOf(RTCodeError)).call(this));\n\n        Error.captureStackTrace(_this, RTCodeError);\n        _this.name = 'RTCodeError';\n        _this.message = message || '';\n        _this.index = norm(startOffset);\n        _this.startOffset = norm(startOffset);\n        _this.endOffset = norm(endOffset);\n        _this.line = norm(line);\n        _this.column = norm(column);\n        return _this;\n    }\n\n    return RTCodeError;\n}(Error);\n\n/**\n * @type {buildError}\n */\n\n\nRTCodeError.build = buildError;\nRTCodeError.norm = norm;\n\n/**\n * @param {*} context\n * @param {*} node\n * @param {string} msg\n * @param args\n * @return {RTCodeError}\n */\nfunction buildFormat(context, node, msg, args) {\n    return buildError(context, node, util.format.apply(this, [msg].concat(args)));\n}\n\n/**\n * @param {*} context\n * @param {*} node\n * @param {string} msg\n * @param {Array.<string>} args\n * @return {RTCodeError}\n */\nRTCodeError.buildFormat = _.rest(buildFormat, 3);\n\n/**\n * @param {*} context\n * @param {*} node\n * @param {string} msg\n * @return {RTCodeError}\n */\nfunction buildError(context, node, msg) {\n    var loc = getNodeLoc(context, node);\n    return new RTCodeError(msg, loc.start, loc.end, loc.pos.line, loc.pos.col);\n}\n\n/**\n * @param context\n * @param node\n * @return {{pos:Pos, start:number, end:number}}\n */\nfunction getNodeLoc(context, node) {\n    var start = node.startIndex;\n    var pos = getLine(context.html, node);\n    var end = void 0;\n    if (node.data) {\n        end = start + node.data.length;\n    } else if (node.next) {\n        // eslint-disable-line\n        end = node.next.startIndex;\n    } else {\n        end = context.html.length;\n    }\n    return {\n        pos: pos,\n        start: start,\n        end: end\n    };\n}\n\nmodule.exports = {\n    RTCodeError: RTCodeError,\n    getNodeLoc: getNodeLoc\n};","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/dist/reactSupport.js":"'use strict';\n\nvar _ = require('lodash');\n\n/**\n * @param {Context} context\n * @return {boolean}\n */\nfunction shouldUseCreateElement(context) {\n    switch (context.options.targetVersion) {\n        case '0.11.2':\n        case '0.11.1':\n        case '0.11.0':\n        case '0.10.0':\n            return false;\n        default:\n            return true;\n    }\n}\n\nvar reactSupportedAttributes = ['accept', 'acceptCharset', 'accessKey', 'action', 'allowFullScreen', 'allowTransparency', 'alt', 'async', 'autoComplete', 'autoPlay', 'cellPadding', 'cellSpacing', 'charSet', 'checked', 'classID', 'className', 'cols', 'colSpan', 'content', 'contentEditable', 'contextMenu', 'controls', 'coords', 'crossOrigin', 'data', 'dateTime', 'defer', 'dir', 'disabled', 'download', 'draggable', 'encType', 'form', 'formNoValidate', 'frameBorder', 'height', 'hidden', 'href', 'hrefLang', 'htmlFor', 'httpEquiv', 'icon', 'id', 'label', 'lang', 'list', 'loop', 'manifest', 'max', 'maxLength', 'media', 'mediaGroup', 'method', 'min', 'multiple', 'muted', 'name', 'noValidate', 'open', 'pattern', 'placeholder', 'poster', 'preload', 'radioGroup', 'readOnly', 'rel', 'required', 'role', 'rows', 'rowSpan', 'sandbox', 'scope', 'scrolling', 'seamless', 'selected', 'shape', 'size', 'sizes', 'span', 'spellCheck', 'src', 'srcDoc', 'srcSet', 'start', 'step', 'style', 'tabIndex', 'target', 'title', 'type', 'useMap', 'value', 'width', 'wmode'];\nvar classNameProp = 'className';\nvar attributesMapping = { 'class': classNameProp, 'rt-class': classNameProp, 'for': 'htmlFor' }; //eslint-disable-line quote-props\n\n_.forEach(reactSupportedAttributes, function (attributeReactName) {\n    if (attributeReactName !== attributeReactName.toLowerCase()) {\n        attributesMapping[attributeReactName.toLowerCase()] = attributeReactName;\n    }\n});\n\nvar htmlSelfClosingTags = ['area', 'base', 'br', 'col', 'command', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'meta', 'param', 'source', 'track', 'wbr'];\n\nvar templateAMDTemplate = _.template(\"define(<%= name ? '\\\"'+name + '\\\", ' : '' %>[<%= requirePaths %>], function (<%= AMDArguments %>) {\\n'use strict';\\n<%= AMDSubstitutions %>return <%= renderFunction %>;\\n});\");\nvar templateCommonJSTemplate = _.template(\"'use strict';\\n<%= vars %>\\nmodule.exports = <%= renderFunction %>;\\n\");\nvar templateES6Template = _.template('<%= vars %>\\nexport default <%= renderFunction %>\\n');\nvar templatePJSTemplate = _.template('var <%= name %> = <%= renderFunction %>');\nvar templateTypescriptTemplate = _.template('<%= vars %>\\nexport = <%= renderFunction %>;\\n');\nvar templateJSRTTemplate = _.template('<%= renderFunction %>');\n\nvar templates = {\n    amd: templateAMDTemplate,\n    commonjs: templateCommonJSTemplate,\n    typescript: templateTypescriptTemplate,\n    es6: templateES6Template,\n    none: templatePJSTemplate,\n    jsrt: templateJSRTTemplate\n};\n\nvar isImportAsterisk = _.matches({ member: '*' });\nvar defaultCase = _.constant(true);\n\nvar buildImportTypeScript = _.cond([[isImportAsterisk, function (d) {\n    return 'import ' + d.alias + ' = require(\\'' + d.moduleName + '\\');';\n}], [_.matches({ member: 'default' }), function (d) {\n    return 'import ' + d.alias + ' from \\'' + d.moduleName + '\\';';\n}], [defaultCase, function (d) {\n    return 'import { ' + d.member + ' as ' + d.alias + ' } from \\'' + d.moduleName + '\\';';\n}]]);\n\nvar buildImportES6 = _.cond([[isImportAsterisk, function (d) {\n    return 'import * as ' + d.alias + ' from \\'' + d.moduleName + '\\';';\n}], [_.matches({ member: 'default' }), function (d) {\n    return 'import ' + d.alias + ' from \\'' + d.moduleName + '\\';';\n}], [defaultCase, function (d) {\n    return 'import { ' + d.member + ' as ' + d.alias + ' } from \\'' + d.moduleName + '\\';';\n}]]);\n\nvar buildImportCommonJS = _.cond([[isImportAsterisk, function (d) {\n    return 'var ' + d.alias + ' = require(\\'' + d.moduleName + '\\');';\n}], [defaultCase, function (d) {\n    return 'var ' + d.alias + ' = require(\\'' + d.moduleName + '\\').' + d.member + ';';\n}]]);\n\nvar buildImport = {\n    typescript: buildImportTypeScript,\n    es6: buildImportES6,\n    commonjs: buildImportCommonJS,\n    amd: buildImportCommonJS,\n    none: buildImportCommonJS,\n    jsrt: buildImportCommonJS\n};\n\nmodule.exports = {\n    htmlSelfClosingTags: htmlSelfClosingTags,\n    attributesMapping: attributesMapping,\n    classNameProp: classNameProp,\n    shouldUseCreateElement: shouldUseCreateElement,\n    templates: templates,\n    buildImport: buildImport\n};","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/dist/utils.js":"'use strict';\n\nvar _ = require('lodash');\nvar esprima = require('esprima');\nvar normalizeHtmlWhitespace = require('normalize-html-whitespace');\nvar rtError = require('./RTCodeError');\nvar RTCodeError = rtError.RTCodeError;\n\n/**\n * @param {string} code\n * @param node\n * @param {Context} context\n */\nfunction validateJS(code, node, context) {\n    try {\n        esprima.parse(code);\n    } catch (e) {\n        throw RTCodeError.build(context, node, e.description);\n    }\n}\n\n/**\n * @param {string} name\n * @return {string}\n */\nfunction normalizeName(name) {\n    return name.replace(/-/g, '_');\n}\n\n/**\n * @param {string} txt\n * @return {boolean}\n */\nfunction isStringOnlyCode(txt) {\n    return (/^\\s*\\{.*}\\s*$/g.test(txt)\n    );\n    //txt = txt.trim();\n    //return txt.length && txt.charAt(0) === '{' && txt.charAt(txt.length - 1) === '}';\n}\n\n/**\n * @param {Array.<*>} array\n * @param {*} obj\n */\nfunction addIfMissing(array, obj) {\n    if (!_.includes(array, obj)) {\n        array.push(obj);\n    }\n}\n\n/**\n * @param {Array.<string>} children\n * @return {string}\n */\nfunction concatChildren(children) {\n    var res = '';\n    _.forEach(children, function (child) {\n        if (child && !_.startsWith(child, ' /*')) {\n            res += ',';\n        }\n        res += child;\n    });\n    return res;\n}\n\n/**\n * validate rt\n * @param options\n * @param {*} context\n * @param {CONTEXT} reportContext\n * @param node\n */\nfunction validate(options, context, reportContext, node) {\n    if (node.type === 'tag' && node.attribs['rt-if'] && !node.attribs.key) {\n        var loc = rtError.getNodeLoc(context, node);\n        reportContext.warn('rt-if without a key', options.fileName, loc.pos.line, loc.pos.col, loc.start, loc.end);\n    }\n    if (node.type === 'tag' && node.attribs['rt-require'] && (node.attribs.dependency || node.attribs.as)) {\n        var _loc = rtError.getNodeLoc(context, node);\n        reportContext.warn(\"'rt-require' is obsolete, use 'rt-import' instead\", options.fileName, _loc.pos.line, _loc.pos.col, _loc.start, _loc.end);\n    }\n    if (node.children) {\n        node.children.forEach(validate.bind(this, options, context, reportContext));\n    }\n}\n\n/**\n * return true if any node in the given tree uses a scope name from the given set, false - otherwise.\n * @param scopeNames a set of scope names to find\n * @param node root of a syntax tree generated from an ExpressionStatement or one of its children.\n */\nfunction usesScopeName(scopeNames, node) {\n    function usesScope(root) {\n        return usesScopeName(scopeNames, root);\n    }\n    if (_.isEmpty(scopeNames)) {\n        return false;\n    }\n    // rt-if=\"x\"\n    if (node.type === 'Identifier') {\n        return _.includes(scopeNames, node.name);\n    }\n    // rt-if=\"e({key1: value1})\"\n    if (node.type === 'Property') {\n        return usesScope(node.value);\n    }\n    // rt-if=\"e.x\" or rt-if=\"e1[e2]\"\n    if (node.type === 'MemberExpression') {\n        return node.computed ? usesScope(node.object) || usesScope(node.property) : usesScope(node.object);\n    }\n    // rt-if=\"!e\"\n    if (node.type === 'UnaryExpression') {\n        return usesScope(node.argument);\n    }\n    // rt-if=\"e1 || e2\" or rt-if=\"e1 | e2\"\n    if (node.type === 'LogicalExpression' || node.type === 'BinaryExpression') {\n        return usesScope(node.left) || usesScope(node.right);\n    }\n    // rt-if=\"e1(e2, ... eN)\"\n    if (node.type === 'CallExpression') {\n        return usesScope(node.callee) || _.some(node.arguments, usesScope);\n    }\n    // rt-if=\"f({e1: e2})\"\n    if (node.type === 'ObjectExpression') {\n        return _.some(node.properties, usesScope);\n    }\n    // rt-if=\"e1[e2]\"\n    if (node.type === 'ArrayExpression') {\n        return _.some(node.elements, usesScope);\n    }\n    return false;\n}\n\n/**\n * @const\n */\nvar curlyMap = { '{': 1, '}': -1 };\n\n/**\n * @typedef {{boundParams: Array.<string>, injectedFunctions: Array.<string>, html: string, options: *}} Context\n */\n\n/**\n * @typedef {{fileName:string,force:boolean,modules:string,defines:*,reactImportPath:string=,lodashImportPath:string=,flow:boolean,name:string,native:boolean,propTemplates:*,format:string,_:*,version:boolean,help:boolean,listTargetVersion:boolean,modules:string, dryRun:boolean}} Options\n */\n\n/**\n * @param node\n * @param {Context} context\n * @param {string} txt\n * @param {boolean} [normalizeWhitespaces]\n * @return {string}\n */\nfunction convertText(node, context, txt, normalizeWhitespaces) {\n    function jsonText(text) {\n        return JSON.stringify(normalizeWhitespaces ? normalizeHtmlWhitespace(text) : text);\n    }\n    var res = '';\n    var first = true;\n    var concatChar = node.type === 'text' ? ',' : '+';\n    while (_.includes(txt, '{')) {\n        var start = txt.indexOf('{');\n        var pre = txt.substr(0, start);\n        if (pre) {\n            res += (first ? '' : concatChar) + jsonText(pre);\n            first = false;\n        }\n        var curlyCounter = 1;\n        var end = start;\n        while (++end < txt.length && curlyCounter > 0) {\n            curlyCounter += curlyMap[txt.charAt(end)] || 0;\n        }\n        if (curlyCounter === 0) {\n            var needsParens = start !== 0 || end !== txt.length - 1;\n            res += (first ? '' : concatChar) + (needsParens ? '(' : '') + txt.substr(start + 1, end - start - 2) + (needsParens ? ')' : '');\n            first = false;\n            txt = txt.substr(end);\n        } else {\n            throw RTCodeError.build(context, node, 'Failed to parse text \\'' + txt + '\\'');\n        }\n    }\n    if (txt) {\n        res += (first ? '' : concatChar) + jsonText(txt);\n    }\n    if (res === '') {\n        res = 'true';\n    }\n    return res;\n}\n\nmodule.exports = {\n    usesScopeName: usesScopeName,\n    normalizeName: normalizeName,\n    validateJS: validateJS,\n    isStringOnlyCode: isStringOnlyCode,\n    concatChildren: concatChildren,\n    validate: validate,\n    addIfMissing: addIfMissing,\n    convertText: convertText\n};","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/dist/fsUtil.js":"'use strict';\n\nvar fs = require('fs');\nvar path = require('path');\n\n/**\n * @param {string} source\n * @param {string} target\n * @return {boolean}\n */\nfunction isStale(source, target) {\n    if (!fs.existsSync(target)) {\n        return true;\n    }\n    var sourceTime = fs.statSync(source).mtime;\n    var targetTime = fs.statSync(target).mtime;\n    return sourceTime.getTime() > targetTime.getTime();\n}\n\nfunction createRelativeReadFileSync(baseFile) {\n    var basePath = path.dirname(baseFile);\n    return function (filename) {\n        return fs.readFileSync(path.resolve(basePath, filename));\n    };\n}\n\nmodule.exports = {\n    isStale: isStale,\n    createRelativeReadFileSync: createRelativeReadFileSync\n};","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/dist/context.js":"'use strict';\n/**\n * @typedef {{color: boolean, cwd: string, report: function(string), issue: function(string, string,string,number,number,number=,number=), warn: function(string), verbose: function(string), getMessages: function():Array.<MESSAGE>, options:Options, messages: Array.<MESSAGE>}} CONTEXT\n */\n/**\n * @typedef {{msg: string, level: MESSAGE_LEVEL, file: string,line:number,column:number,startOffset:number,endOffset:number}} MESSAGE\n */\n\n/**\n * Enum for tri-state values.\n * @enum {string}\n */\n\nvar MESSAGE_LEVEL = {\n    ERROR: 'ERROR',\n    WARN: 'WARN',\n    INFO: 'INFO'\n};\n\nvar _ = require('lodash');\nvar err = require('./RTCodeError');\nvar norm = err.RTCodeError.norm;\n\n/**\n * @type {CONTEXT}\n */\nvar context = {\n    /** @type {Array.<MESSAGE>} */\n    messages: [],\n    /** @type {boolean} */\n    color: true,\n    /** @type {string} */\n    cwd: process.cwd(),\n    report: function report(msg) {\n        console.log(msg);\n    },\n    verbose: function verbose(msg) {\n        if (context.options.verbose) {\n            console.log(msg);\n        }\n    },\n    info: function info(msg, file, line, column) {\n        context.issue(MESSAGE_LEVEL.INFO, msg, file, line, column);\n    },\n    warn: function warn(msg, file, line, column, startOffset, endOffset) {\n        context.issue(MESSAGE_LEVEL.WARN, msg, file, line, column, startOffset, endOffset);\n    },\n    error: function error(msg, file, line, column, startOffset, endOffset) {\n        context.issue(MESSAGE_LEVEL.ERROR, msg, file, line, column, startOffset, endOffset);\n    },\n\n    /**\n     * @param {MESSAGE_LEVEL} level\n     * @param {string} msg\n     * @param {string} file\n     * @param {number} line\n     * @param {number} column\n     * @param {number=} startOffset\n     * @param {number=} endOffset\n     */\n    issue: function issue(level, msg, file, line, column, startOffset, endOffset) {\n        context.messages.push({ level: level, msg: msg, file: file || null, line: norm(line), column: norm(column), index: norm(startOffset), startOffset: norm(startOffset), endOffset: norm(endOffset) });\n    },\n    getMessages: function getMessages() {\n        return context.messages;\n    },\n    clear: function clear() {\n        context.messages = [];\n    },\n    hasErrors: function hasErrors() {\n        return _.some(context.messages, { level: MESSAGE_LEVEL.ERROR });\n    },\n\n    options: {\n        verbose: false,\n        outFile: null,\n        format: 'stylish'\n    },\n    MESSAGE_LEVEL: MESSAGE_LEVEL\n};\n\nmodule.exports = context;","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/dist/shell.js":"'use strict';\n\nvar _ = require('lodash');\n\n/**\n * @param {CONTEXT} context\n * @return {number}\n */\nfunction printResults(context) {\n    var warnings = context.getMessages();\n    var out = require('./formatters/' + context.options.format)(warnings);\n    context.report(out);\n    var grouped = _.groupBy(warnings, 'level');\n    return grouped.ERROR ? grouped.ERROR.length : 0;\n}\n\nmodule.exports = { printResults: printResults };","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/dist/options.js":"/**\n * @fileoverview Options configuration for optionator.\n * @author idok\n */\n'use strict';\n\n//------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nvar optionator = require('optionator');\nvar pkg = require('../package.json');\nvar reactDOMSupport = require('./reactDOMSupport');\nvar reactNativeSupport = require('./reactNativeSupport');\n\n//------------------------------------------------------------------------------\n// Initialization and Public Interface\n//------------------------------------------------------------------------------\n\n// exports 'parse(args)', 'generateHelp()', and 'generateHelpForOption(optionName)'\nmodule.exports = optionator({\n    prepend: pkg.name + '  v' + pkg.version + '\\n' + pkg.description + '\\n\\nUsage:\\n$ rt <filename|glob> [<filename|glob> ...] [<args>]',\n    concatRepeatedArrays: true,\n    mergeRepeatedObjects: true,\n    options: [{\n        heading: 'Options'\n    }, {\n        option: 'help',\n        alias: 'h',\n        type: 'Boolean',\n        description: 'Show help.'\n    }, {\n        option: 'color',\n        alias: 'c',\n        default: 'true',\n        type: 'Boolean',\n        description: 'Use colors in output.'\n    }, {\n        option: 'modules',\n        alias: 'm',\n        type: 'String',\n        enum: ['amd', 'commonjs', 'none', 'es6', 'typescript', 'jsrt'],\n        description: 'Use output modules. (amd|commonjs|none|es6|typescript|jsrt)'\n    }, {\n        option: 'name',\n        alias: 'n',\n        type: 'String',\n        description: 'When using globals, the name for the variable. The default is the [file name]RT, when using amd, the name of the module'\n    }, {\n        option: 'dry-run',\n        alias: 'd',\n        default: 'false',\n        type: 'Boolean',\n        description: 'Run compilation without creating an output file, used to check if the file is valid'\n    }, {\n        option: 'force',\n        alias: 'r',\n        default: 'false',\n        type: 'Boolean',\n        description: 'Force creation of output. skip file check.'\n    }, {\n        option: 'format',\n        alias: 'f',\n        type: 'String',\n        default: 'stylish',\n        //enum: ['stylish', 'json'],\n        description: 'Use a specific output format. (stylish|json)'\n    }, {\n        option: 'target-version',\n        alias: 't',\n        type: 'String',\n        default: reactDOMSupport.default,\n        description: '\\'React version to generate code for (' + Object.keys(reactDOMSupport).join(', ') + ')\\''\n    }, {\n        option: 'list-target-version',\n        type: 'Boolean',\n        default: 'false',\n        description: 'Show list of target versions'\n    }, {\n        option: 'version',\n        alias: 'v',\n        type: 'Boolean',\n        description: 'Outputs the version number.'\n    }, {\n        option: 'stack',\n        alias: 'k',\n        type: 'Boolean',\n        description: 'Show stack trace on errors.'\n    }, {\n        option: 'react-import-path',\n        type: 'String',\n        description: 'Dependency path for importing React.'\n    }, {\n        option: 'lodash-import-path',\n        default: 'lodash',\n        type: 'String',\n        description: 'Dependency path for importing lodash.'\n    }, {\n        option: 'native',\n        alias: 'rn',\n        type: 'Boolean',\n        description: 'Renders react native templates.'\n    }, {\n        option: 'flow',\n        type: 'Boolean',\n        description: 'Add /* @flow */ to the top of the generated file'\n    }, {\n        option: 'native-target-version',\n        alias: 'rnv',\n        type: 'String',\n        enum: Object.keys(reactNativeSupport),\n        default: reactNativeSupport.default,\n        description: 'React native version to generate code for (' + Object.keys(reactNativeSupport).join(', ') + ')'\n    }, {\n        option: 'normalize-html-whitespace',\n        type: 'Boolean',\n        default: 'false',\n        description: 'Remove repeating whitespace from HTML text.'\n    }]\n});","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/dist/rtStyle.js":"'use strict';\n\nvar css = require('css');\nvar _ = require('lodash');\nvar rtnData = require('./rt-style-support-data.js');\n\nvar templateCommonJSTemplate = _.template('\\'use strict\\';\\nvar style = <%= body %>;\\nmodule.exports = style;\\n');\n\nfunction convert(text) {\n    return templateCommonJSTemplate({ body: convertBody(text) });\n}\n\nfunction convertBody(text) {\n    //source\n    var obj = css.parse(text, { silent: false });\n    var result = _.reduce(obj.stylesheet.rules, processRule2, {});\n    return JSON.stringify(result, undefined, 2);\n}\n\nfunction processRule2(result, rule) {\n    var name = rule.selectors[0].substring(1);\n    result[name] = _.reduce(rule.declarations, processDeclaration, {});\n    return result;\n}\n\nfunction processDeclaration(result, dec) {\n    var prop = _.camelCase(dec.property);\n    result[prop] = convertValue(prop, dec.value);\n    return result;\n}\n\nfunction convertValue(p, v) {\n    if (rtnData[p] === 'string') {\n        return v;\n    }\n    // TODO remove units\n    return parseInt(v.match(/(\\d+)/g)[0], 10);\n}\n\nmodule.exports = {\n    convert: convert,\n    convertBody: convertBody\n};","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/dist/rt-style-support-data.js":"'use strict';\n\nvar map = {\n    /*flex*/\n    alignItems: 'string', //  \"enum('flex-start', 'flex-end', 'center', 'stretch')\",\n    alignSelf: 'string', //  \"enum('auto', 'flex-start', 'flex-end', 'center', 'stretch')\",\n    borderBottomWidth: 'number',\n    borderLeftWidth: 'number',\n    borderRightWidth: 'number',\n    borderTopWidth: 'number',\n    borderWidth: 'number',\n    bottom: 'number',\n    flex: 'number',\n    flexDirection: 'string', // enum('row', 'column')\n    flexWrap: 'string', //  enum('wrap', 'nowrap')\n    height: 'number',\n    justifyContent: 'string', //  enum('flex-start', 'flex-end', 'center', 'space-between', 'space-around')\n    left: 'number',\n    margin: 'number',\n    marginBottom: 'number',\n    marginHorizontal: 'number',\n    marginLeft: 'number',\n    marginRight: 'number',\n    marginTop: 'number',\n    marginVertical: 'number',\n    padding: 'number',\n    paddingBottom: 'number',\n    paddingHorizontal: 'number',\n    paddingLeft: 'number',\n    paddingRight: 'number',\n    paddingTop: 'number',\n    paddingVertical: 'number',\n    position: 'string', //  enum('absolute', 'relative')\n    right: 'number',\n    top: 'number',\n    width: 'number',\n\n    /*image*/\n    resizeMode: 'string', // Object.keys(ImageResizeMode)\n    backgroundColor: 'string',\n    borderColor: 'string',\n    borderRadius: 'number',\n    overflow: 'string', // enum('visible', 'hidden')\n    tintColor: 'string',\n    opacity: 'number'\n};\n\nmodule.exports = map;","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/Gruntfile.js":"'use strict';\nmodule.exports = function (grunt) {\n    grunt.initConfig({\n        clean: {\n            main: {\n                src: ['coverage', 'playground/**/*.rt.js']\n            }\n        },\n        eslint: {\n            all: {\n                src: [\n                    'src/**/*.js', 'playground/**/*.js',\n                    'test/src/**/*.js',\n                    '!playground/libs/**/*.js',\n                    '!playground/dist/**/*.js',\n                    '!playground/**/*.rt.js'\n                ]\n            }\n        },\n        jasmine_node: {\n            options: {\n                forceExit: true,\n                match: '.',\n                matchall: false,\n                specNameMatcher: 'spec',\n                extensions: 'js'\n            },\n            all: ['server/test'],\n            grunt: ['conf/tasks/test']\n        },\n        browserify: {\n            rt: {\n                files: {\n                    'playground/dist/rt-main.browser.js': ['playground/rt-main.js']\n                },\n                options: {\n                    transform: ['brfs'],\n                    alias: ['react:react/addons']\n                }\n            }\n        },\n        tape: {\n            options: {\n                pretty: true,\n                output: 'console'\n            },\n            files: ['test/src/*.js']\n        },\n        watch: {\n            rt: {\n                files: [\n                    'playground/*.rt'\n                ],\n                tasks: ['rt'],\n                options: {\n                    spawn: false\n                }\n            },\n            test: {\n                files: [\n                    'src/**/*.*', 'test/**/*.*'\n                ],\n                tasks: ['test'],\n                options: {\n                    spawn: false\n                }\n            }\n        },\n        uglify: {\n            my_target: {\n                //options: {\n                //    sourceMap: true,\n                //    sourceMapIncludeSources: true,\n                //    sourceMapIn: 'example/coffeescript-sourcemap.js', // input sourcemap from a previous compilation\n                //},\n                files: {\n                    'playground/dist/rt-main.browser.min.js': ['playground/dist/rt-main.browser.js'],\n                    'playground/libs/requirejs-plugins/text.min.js': ['playground/libs/requirejs-plugins/text.js'],\n                    'playground/libs/requirejs-plugins/json.min.js': ['playground/libs/requirejs-plugins/json.js']\n                }\n            }\n        },\n        requirejs: {\n            compile: {\n                options: readConfig('./home.config.js')\n            },\n            playground: {\n                options: readConfig('./playground.config.js')\n            }\n        }\n    });\n\n    function readConfig(file) {\n        return eval(require('fs').readFileSync(file).toString()); // eslint-disable-line no-eval\n    }\n\n    grunt.loadNpmTasks('grunt-tape');\n    grunt.loadNpmTasks('grunt-browserify');\n    grunt.loadNpmTasks('grunt-contrib-watch');\n    grunt.loadNpmTasks('grunt-contrib-requirejs');\n    grunt.loadNpmTasks('grunt-eslint');\n    grunt.loadNpmTasks('grunt-contrib-uglify');\n\n    grunt.registerTask('default', ['eslint:all']);\n    grunt.registerTask('lint', ['eslint:all']);\n    grunt.registerTask('test', ['tape']);\n\n    grunt.registerTask('rt', () => {\n        const reactTemplates = require('./src/cli');\n        const files = grunt.file.expand('playground/*.rt');\n        const ret = reactTemplates.execute({modules: 'amd', force: true, _: files});\n        return ret === 0;\n    });\n\n    grunt.registerTask('build', ['rt', 'browserify:pg']);\n    grunt.registerTask('home', ['rt', 'browserify:home']);\n    grunt.registerTask('pgall', ['rt', 'browserify', 'uglify', 'requirejs']);\n\n    grunt.registerTask('all', ['default', 'test']);\n};\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/home.config.js":"/*eslint semi:0,no-unused-expressions:0,no-extra-parens:0,strict:0*/\n({\n    baseUrl: 'playground',\n    //name: 'node_modules/almond/almond.js', // assumes a production build using almond\n    out: 'playground/dist/home.min.js',\n    include: ['home-main.js'],\n    paths: {\n        lodash: '//cdnjs.cloudflare.com/ajax/libs/lodash.js/2.4.1/lodash',\n        jquery: '//code.jquery.com/jquery-1.11.0.min',\n        firebase: '//cdn.firebase.com/js/client/2.0.5/firebase',\n        react: '//cdnjs.cloudflare.com/ajax/libs/react/15.1.0/react-with-addons',\n        'react-dom': '//cdnjs.cloudflare.com/ajax/libs/react/15.1.0/react-dom',\n        //ace: '../ace-builds-1.1.8/src-min/ace',\n        fiddle: './fiddle',\n        text: 'libs/requirejs-plugins/text',\n        json: 'libs/requirejs-plugins/json'\n    },\n    shim: {\n        lodash: {exports: '_'},\n        firebase: {exports: 'Firebase'},\n        jquery: {exports: '$'},\n        react: {exports: 'React'},\n        'react-dom': {exports: 'ReactDOM'}\n    },\n    map: {\n        '*': {\n            'react/addons': 'react'\n        }\n    }\n})\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground.config.js":"({\n    baseUrl: 'playground',\n    //name: 'node_modules/almond/almond.js', // assumes a production build using almond\n    out: 'playground/dist/fiddle.min.js',\n    include: ['fiddle-main.js'],\n    paths: {\n        lodash: '//cdnjs.cloudflare.com/ajax/libs/lodash.js/2.4.1/lodash',\n        jquery: '//code.jquery.com/jquery-2.1.4.min',\n        firebase: '//cdn.firebase.com/js/client/2.0.5/firebase',\n        react: '//cdnjs.cloudflare.com/ajax/libs/react/15.1.0/react-with-addons',\n        'react-dom': '//cdnjs.cloudflare.com/ajax/libs/react/15.1.0/react-dom',\n        //ace: '../ace-builds-1.1.8/src-min/ace',\n        fiddle: './fiddle',\n        text: 'libs/requirejs-plugins/text',\n        json: 'libs/requirejs-plugins/json',\n        bootstrap: 'libs/bootstrap/bootstrap.min'\n    },\n    shim: {\n        lodash: {exports: '_'},\n        firebase: {exports: 'Firebase'},\n        jquery: {exports: '$'},\n        react: {exports: 'React'},\n        'react-dom': {exports: 'ReactDOM'}\n    },\n    map: {\n        '*': {\n            'react/addons': 'react'\n        }\n    }\n})\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/r.js":"/*eslint semi:[2,\"never\"]*/\n'use strict'\nconst recast = require('recast')\nconst esprima = require('esprima-fb')\nconst escodegen = require('escodegen')\n//var code = \"import _ from 'a'\"\n\nconst code = `import React from 'react/addons';\nimport _ from 'lodash';\n\n\nexport default function(){ return React.createElement('div',{})}`\n\n\n/*eslint no-unused-vars:0*/\nfunction recast1() {\n    const tree = recast.parse(code)\n    const s = recast.print(tree).code //escodegen.generate(tree, {comment: true})\n    console.log(s)\n}\n\nfunction escodegenTest() {\n    //var tree = esprima.parse(code)\n    //var tree = esprima.parse(code, {sourceType: 'module'})\n    const tree = esprima.parse(code, {attachComment: true, loc: false, range: false, sourceType: 'module', tokens: true})\n    const s = escodegen.generate(tree)\n    //var s = escodegen.generate(tree, {comment: true})\n    console.log(s)\n}\n\n//recast1()\nescodegenTest()\n\n\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/bin/rt.js":"#!/usr/bin/env node\n'use strict';\nconst cli = require('../dist/cli');\nconst exitCode = cli.execute(process.argv);\n/*eslint no-process-exit:0*/\nprocess.exit(exitCode);\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground3/server.js":"'use strict';\n//var webpack = require('webpack');\n//var WebpackDevServer = require('webpack-dev-server');\n//var config = require('./webpack.config');\n//\n//new WebpackDevServer(webpack(config), {\n//    publicPath: config.output.publicPath,\n//    hot: true,\n//    historyApiFallback: true\n//}).listen(3000, 'localhost', function (err, result) {\n//        if (err) {\n//            console.log(err);\n//        }\n//        console.log('Listening at localhost:3000');\n//    });\n\nvar path = require('path');\nvar express = require('express');\nvar webpack = require('webpack');\nvar config = require('./webpack.config');\n\nvar app = express();\nvar compiler = webpack(config);\n\napp.use(require('webpack-dev-middleware')(compiler, {\n    noInfo: true,\n    publicPath: config.output.publicPath\n}));\n\napp.use(require('webpack-hot-middleware')(compiler));\n\napp.get('/', function(req, res) {\n    res.sendFile(path.join(__dirname, 'index.html'));\n});\n\napp.get('/fiddle.html', (req, res) => res.sendFile(path.join(__dirname, 'fiddle.html')));\n\napp.use('/src', express.static('src'));\napp.use('/libs', express.static('libs'));\napp.use('/css', express.static('css'));\napp.use('/dist', express.static('dist'));\n\napp.listen(3000, 'localhost', function(err) {\n    if (err) {\n        console.log(err);\n        return;\n    }\n\n    console.log('Listening at http://localhost:3000');\n});\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground3/webpack2.config.js":"/*eslint no-path-concat:0*/\n'use strict';\n\nvar path = require('path');\nvar webpack = require('webpack');\nvar commonsPlugin = new webpack.optimize.CommonsChunkPlugin('commons.js');\n\nmodule.exports = {\n    //devtool: 'eval',\n    devtool: 'source-map',\n    context: __dirname,\n    entry: {\n        fiddle: ['webpack-dev-server/client?http://localhost:3000',\n                 'webpack/hot/only-dev-server',\n                 './src/fiddle-main.js'],\n        home: ['webpack-dev-server/client?http://localhost:3000',\n                 'webpack/hot/only-dev-server',\n                 './src/home-main.js']\n    },\n    output: {\n        filename: '[name].js',\n        path: path.join(__dirname, 'dist'),\n        publicPath: '/static/'\n    },\n    plugins: [\n        commonsPlugin, new webpack.HotModuleReplacementPlugin()\n    ],\n    externals: {\n        // require(\"jquery\") is external and available on the global var jQuery\n        jquery: 'jQuery',\n        react: 'React',\n        //'react/addons': 'React',\n        'react-dom': 'ReactDOM',\n        lodash: '_',\n        bootstrap: 'bootstrap',\n        firebase: 'Firebase',\n        codemirror: 'CodeMirror',\n        '../libs/codemirror-4.8/lib/codemirror': 'CodeMirror'\n        //'./libs/codemirror-4.8/mode/javascript/javascript',\n        //'./libs/codemirror-4.8/addon/hint/html-hint',\n        //'./libs/codemirror-4.8/addon/hint/show-hint',\n        //'./libs/codemirror-4.8/addon/hint/xml-hint',\n        //'./libs/codemirror-4.8/addon/hint/html-hint',\n        ////'./libs/codemirror-4.8/addon/display/panel',\n        //'./libs/codemirror-4.8/mode/xml/xml',\n        ////'./libs/codemirror-4.8/mode/css/css',\n        //'./libs/codemirror-4.8/addon/runmode/runmode'\n    },\n    resolve: {\n        // you can now require('file') instead of require('file.coffee')\n        extensions: ['', '.js', '.json'],\n        alias: {\n            //bootstrap: 'empty'\n        },\n    },\n    module: {\n        loaders: [\n            {test: /\\.js$/, exclude: /node_modules/, loaders: ['react-hot', 'babel-loader']},\n            {test: /\\.jsx$/, loaders: ['babel-loader']},\n            {test: /\\.html$/, loader: 'file?name=[name].[ext]'},\n            {test: /\\.json$/, loader: 'json-loader'},\n            {test: /\\.less$/, loader: 'style-loader!css-loader!less-loader'}, // use ! to chain loaders\n            {test: /\\.css$/, loader: 'style-loader!css-loader'},\n            {test: /\\.(png|jpg)$/, loader: 'url-loader?limit=8192'}, // inline base64 URLs for <=8k images, direct URLs for the rest\n            {test: /\\.rt/, exclude: /samples/, loaders: ['react-hot', 'react-templates-loader?targetVersion=0.14.0']},\n            {test: /\\.text/, loaders: ['raw-loader']}\n            //\"md|markdown\": [\"html-loader\", \"markdown-loader\"]\n        ]\n    }\n};\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground3/webpack.config3.js":"/*eslint no-path-concat:0*/\n'use strict';\n\nvar path = require('path');\nvar webpack = require('webpack');\nvar commonsPlugin = new webpack.optimize.CommonsChunkPlugin('commons.js');\n\nmodule.exports = {\n    //devtool: 'eval',\n    devtool: 'source-map',\n    context: __dirname,\n    entry: {\n        //fiddle: ['webpack-hot-middleware/client',\n        //         './src/fiddle-main.js'],\n        home: ['webpack-hot-middleware/client',\n                 './src/home-main.js']\n    },\n    output: {\n        filename: '[name].js',\n        path: path.join(__dirname, 'dist'),\n        publicPath: '/static/'\n    },\n    plugins: [\n        /*commonsPlugin, */\n        new webpack.HotModuleReplacementPlugin(),\n        new webpack.NoErrorsPlugin()\n    ],\n    externals: {\n        // require(\"jquery\") is external and available on the global var jQuery\n        jquery: 'jQuery',\n        //react: 'React',\n        //'react/addons': 'React',\n        //'react-dom': 'ReactDOM',\n        lodash: '_',\n        bootstrap: 'bootstrap',\n        firebase: 'Firebase',\n        codemirror: 'CodeMirror',\n        '../libs/codemirror-4.8/lib/codemirror': 'CodeMirror'\n        //'./libs/codemirror-4.8/mode/javascript/javascript',\n        //'./libs/codemirror-4.8/addon/hint/html-hint',\n        //'./libs/codemirror-4.8/addon/hint/show-hint',\n        //'./libs/codemirror-4.8/addon/hint/xml-hint',\n        //'./libs/codemirror-4.8/addon/hint/html-hint',\n        ////'./libs/codemirror-4.8/addon/display/panel',\n        //'./libs/codemirror-4.8/mode/xml/xml',\n        ////'./libs/codemirror-4.8/mode/css/css',\n        //'./libs/codemirror-4.8/addon/runmode/runmode'\n    },\n    resolve: {\n        // you can now require('file') instead of require('file.coffee')\n        extensions: ['', '.js', '.json'],\n        alias: {\n            //bootstrap: 'empty'\n        }\n    },\n    module: {\n        loaders: [\n            {test: /\\.js$/, exclude: /node_modules/, loaders: ['babel']},\n            {test: /\\.jsx$/, loaders: ['babel-loader']},\n            {test: /\\.html$/, loader: 'file?name=[name].[ext]'},\n            {test: /\\.json$/, loader: 'json-loader'},\n            {test: /\\.less$/, loader: 'style-loader!css-loader!less-loader'}, // use ! to chain loaders\n            {test: /\\.css$/, loader: 'style-loader!css-loader'},\n            {test: /\\.(png|jpg)$/, loader: 'url-loader?limit=8192'}, // inline base64 URLs for <=8k images, direct URLs for the rest\n            {test: /\\.rt/, exclude: /node_modules|samples/, loaders: ['react-templates-loader?targetVersion=0.14.0']},\n            {test: /\\.text/, loaders: ['raw-loader']}\n            //\"md|markdown\": [\"html-loader\", \"markdown-loader\"]\n        ]\n    }\n};\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground3/webpack.config.js":"/*eslint no-path-concat:0*/\n'use strict'\n\nconst path = require('path')\nconst webpack = require('webpack')\nconst commonsPlugin = new webpack.optimize.CommonsChunkPlugin('commons.js')\nconst CopyWebpackPlugin = require('copy-webpack-plugin')\n\nmodule.exports = {\n    //devtool: 'eval',\n    devtool: 'source-map',\n    context: __dirname,\n    entry: {\n        //fiddle: ['webpack-hot-middleware/client',\n        //         './src/fiddle-main.js'],\n        // home2: ['webpack-dev-server/client?http://localhost:8080/',\n        //        'webpack/hot/only-dev-server',\n        //        './src/a/home-main.js'],\n        fiddle: ['webpack-dev-server/client?http://localhost:8080/',\n               'webpack/hot/only-dev-server',\n               './src/fiddle-main.js'],\n        home: ['webpack-dev-server/client?http://localhost:8080/',\n               'webpack/hot/only-dev-server',\n                 './src/home-main.js']\n    },\n    output: {\n        filename: '[name].js',\n        path: path.join(__dirname, 'dist'),\n        // publicPath: '/static/'\n        publicPath: 'http://localhost:8080/dist'\n    },\n    plugins: [\n        /*commonsPlugin, */\n        new webpack.HotModuleReplacementPlugin(),\n        new webpack.NoErrorsPlugin(),\n        new CopyWebpackPlugin([{from: './index.html'}])\n    ],\n    externals: {\n        // require(\"jquery\") is external and available on the global var jQuery\n        jquery: 'jQuery',\n        react: 'React',\n        'react-dom': 'ReactDOM',\n        //'react/addons': 'React',\n        lodash: '_',\n        bootstrap: 'bootstrap',\n        firebase: 'Firebase',\n        codemirror: 'CodeMirror',\n        '../libs/codemirror-4.8/lib/codemirror': 'CodeMirror'\n        //'./libs/codemirror-4.8/mode/javascript/javascript',\n        //'./libs/codemirror-4.8/addon/hint/html-hint',\n        //'./libs/codemirror-4.8/addon/hint/show-hint',\n        //'./libs/codemirror-4.8/addon/hint/xml-hint',\n        //'./libs/codemirror-4.8/addon/hint/html-hint',\n        ////'./libs/codemirror-4.8/addon/display/panel',\n        //'./libs/codemirror-4.8/mode/xml/xml',\n        ////'./libs/codemirror-4.8/mode/css/css',\n        //'./libs/codemirror-4.8/addon/runmode/runmode'\n    },\n    resolve: {\n        // you can now require('file') instead of require('file.coffee')\n        extensions: ['', '.js', '.json'],\n        alias: {\n            //bootstrap: 'empty'\n        }\n    },\n    module: {\n        loaders: [\n            {test: /\\.js$/, exclude: /node_modules/, loaders: ['babel']},\n            {test: /\\.jsx$/, loaders: ['babel-loader']},\n            {test: /\\.html$/, loader: 'file?name=[name].[ext]'},\n            {test: /\\.json$/, loader: 'json-loader'},\n            {test: /\\.less$/, loader: 'style-loader!css-loader!less-loader'}, // use ! to chain loaders\n            {test: /\\.css$/, loader: 'style-loader!css-loader'},\n            {test: /\\.(png|jpg)$/, loader: 'url-loader?limit=8192'}, // inline base64 URLs for <=8k images, direct URLs for the rest\n\n            //-m commonjs --target-version 0.14.0 --react-import-path react\n            {test: /\\.rt/, exclude: /node_modules|samples/, loaders: ['react-templates-loader?target-version=0.14.0&modules=commonjs&react-import-path=react']},\n            {test: /\\.text/, loaders: ['raw-loader']}\n            //\"md|markdown\": [\"html-loader\", \"markdown-loader\"]\n        ]\n    }\n};\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground3/webpack.config.rt2.js":"'use strict';\nvar path = require('path');\nvar webpack = require('webpack');\n\nmodule.exports = {\n    context: __dirname,\n    entry: {\n        rtBrowser: ['./src/rt-main.js']\n    },\n    output: {\n        filename: '[name].js',\n        path: path.join(__dirname, 'dist'),\n        publicPath: '/static/',\n        // export itself to a global var\n        libraryTarget: 'var',\n        // name of the global var: \"Foo\"\n        library: 'reactTemplates'\n    },\n    plugins: [],\n    externals: {\n        // require(\"jquery\") is external and available on the global var jQuery\n        lodash: '_'\n    },\n    resolve: {\n        // you can now require('file') instead of require('file.coffee')\n        extensions: ['', '.js', '.json']\n    },\n    module: {\n        loaders: [\n            {test: /\\.js$/, exclude: /node_modules/, loaders: ['babel']},\n            {test: /\\.json$/, loader: 'json'}\n        ]\n    }\n};\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground3/webpack.prod.config.js":"'use strict';\nmodule.exports = [\n    require('./conf/webpack-make-config')({\n        // commonsChunk: true,\n        longTermCaching: true,\n        separateStylesheet: true,\n        minimize: true\n        // devtool: 'source-map'\n    }),\n    require('./conf/webpack-make-config')({\n        prerender: true,\n        minimize: true\n    })\n];","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground3/conf/webpack-make-config.js":"'use strict';\n\nvar path = require('path');\nvar webpack = require('webpack');\nvar commonsPlugin = new webpack.optimize.CommonsChunkPlugin('commons.js');\n\nvar root = path.resolve(__dirname, '..');\n\nmodule.exports = function (options) {\n    var ret = {\n        //devtool: 'eval',\n        devtool: 'source-map',\n        context: root,\n        entry: {\n            fiddle: ['webpack-dev-server/client?http://localhost:3000',\n                     'webpack/hot/only-dev-server',\n                     './src/fiddle-main.js'],\n            home: ['webpack-dev-server/client?http://localhost:3000',\n                   'webpack/hot/only-dev-server',\n                   './src/home-main.js']\n        },\n        output: {\n            filename: '[name].js',\n            path: path.join(root, 'dist'),\n            publicPath: '/static/'\n        },\n        plugins: [\n            commonsPlugin\n        ],\n        externals: {\n            // require(\"jquery\") is external and available on the global var jQuery\n            jquery: 'jQuery',\n            react: 'React',\n            'react/addons': 'React',\n            lodash: '_',\n            bootstrap: 'bootstrap',\n            firebase: 'Firebase',\n            codemirror: 'CodeMirror',\n            '../libs/codemirror-4.8/lib/codemirror': 'CodeMirror'\n            //'./libs/codemirror-4.8/mode/javascript/javascript',\n            //'./libs/codemirror-4.8/addon/hint/html-hint',\n            //'./libs/codemirror-4.8/addon/hint/show-hint',\n            //'./libs/codemirror-4.8/addon/hint/xml-hint',\n            //'./libs/codemirror-4.8/addon/hint/html-hint',\n            ////'./libs/codemirror-4.8/addon/display/panel',\n            //'./libs/codemirror-4.8/mode/xml/xml',\n            ////'./libs/codemirror-4.8/mode/css/css',\n            //'./libs/codemirror-4.8/addon/runmode/runmode'\n\n            /*\n             babel-core babel-eslint babel-loader css-loader file-loader json-loader raw-loader react-templates-loader\n\n             */\n        },\n        resolve: {\n            // you can now require('file') instead of require('file.coffee')\n            extensions: ['', '.js', '.json'],\n            alias: {\n                //bootstrap: 'empty'\n            },\n        },\n        module: {\n            loaders: [\n                {test: /\\.js$/, exclude: /node_modules/, loaders: ['react-hot', 'babel-loader']},\n                {test: /\\.jsx$/, loaders: ['babel-loader']},\n                {test: /\\.html$/, loader: 'file?name=[name].[ext]'},\n                {test: /\\.json$/, loader: 'json-loader'},\n                {test: /\\.less$/, loader: 'style-loader!css-loader!less-loader'}, // use ! to chain loaders\n                {test: /\\.css$/, loader: 'style-loader!css-loader'},\n                {test: /\\.(png|jpg)$/, loader: 'url-loader?limit=8192'}, // inline base64 URLs for <=8k images, direct URLs for the rest\n                {test: /\\.rt/, exclude: /samples/, loaders: ['react-hot', 'react-templates-loader']},\n                {test: /\\.text/, loaders: ['raw-loader']}\n                //\"md|markdown\": [\"html-loader\", \"markdown-loader\"]\n            ]\n        }\n    };\n\n\n    if (options.minimize) {\n        ret.entry = {\n            fiddle: ['./src/fiddle-main.js'],\n            home: ['./src/home-main.js']\n        };\n        ret.plugins.push(\n            new webpack.optimize.UglifyJsPlugin({compressor: {warnings: false}}),\n            new webpack.optimize.DedupePlugin()\n        );\n    } else {\n        ret.entry = {\n            fiddle: ['webpack-dev-server/client?http://localhost:3000',\n                     'webpack/hot/only-dev-server',\n                     './src/fiddle-main.js'],\n            home: ['webpack-dev-server/client?http://localhost:3000',\n                   'webpack/hot/only-dev-server',\n                   './src/home-main.js']\n        };\n        ret.plugins.push(\n            new webpack.HotModuleReplacementPlugin()\n        );\n    }\n\n    return ret;\n};","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground3/webpack.rt.config.js":"/*eslint no-path-concat:0*/\n'use strict';\n\nvar path = require('path');\nvar webpack = require('webpack');\nvar commonsPlugin = new webpack.optimize.CommonsChunkPlugin('commons.js');\n\nmodule.exports = {\n    //devtool: 'eval',\n    devtool: 'source-map',\n    context: __dirname,\n    entry: {\n        rt: ['./src/rt-main.js']\n    },\n    output: {\n        filename: '[name].js',\n        path: path.join(__dirname, 'dist'),\n        publicPath: '/static/'\n    },\n    plugins: [\n        new webpack.optimize.UglifyJsPlugin({\n            compressor: {\n                warnings: false\n            }\n        }),\n        new webpack.optimize.DedupePlugin()\n    ],\n    externals: {\n        // require(\"jquery\") is external and available on the global var jQuery\n        jquery: 'jQuery',\n        react: 'React',\n        'react/addons': 'React',\n        lodash: '_'\n    },\n    resolve: {\n        // you can now require('file') instead of require('file.coffee')\n        extensions: ['', '.js', '.json'],\n        alias: {},\n    },\n    module: {\n        loaders: [\n            {test: /\\.js$/, exclude: /node_modules/, loaders: ['babel-loader']},\n            {test: /\\.json$/, loader: 'json-loader'},\n            {test: /\\.less$/, loader: 'style-loader!css-loader!less-loader'}, // use ! to chain loaders\n            {test: /\\.css$/, loader: 'style-loader!css-loader'},\n            {test: /\\.(png|jpg)$/, loader: 'url-loader?limit=8192'}, // inline base64 URLs for <=8k images, direct URLs for the rest\n            {test: /\\.rt/, exclude: /samples/, loaders: ['react-hot', 'react-templates-loader']},\n            {test: /\\.text/, loaders: ['raw-loader']}\n            //\"md|markdown\": [\"html-loader\", \"markdown-loader\"]\n        ]\n    }\n};","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground4/server.js":"'use strict';\nvar webpack = require('webpack');\nvar WebpackDevServer = require('webpack-dev-server');\nvar config = require('./webpack.config');\n\nnew WebpackDevServer(webpack(config), {\n  publicPath: config.output.publicPath,\n  hot: true,\n  historyApiFallback: true\n}).listen(3000, 'localhost', function (err, result) {\n  if (err) {\n    return console.log(err);\n  }\n\n  console.log('Listening at http://localhost:3000/');\n});\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground4/webpack.config.js":"/*eslint no-path-concat:0*/\n'use strict';\nvar path = require('path');\nvar webpack = require('webpack');\nvar commonsPlugin = new webpack.optimize.CommonsChunkPlugin('commons.js');\n\nmodule.exports = {\n    devtool: 'eval',\n    // devtool: 'source-map',\n    context: __dirname,\n    entry: {\n        home: ['webpack-dev-server/client?http://localhost:3000',\n               'webpack/hot/only-dev-server',\n                 './src/home-main.js'],\n        fiddle: ['webpack-dev-server/client?http://localhost:3000',\n               'webpack/hot/only-dev-server',\n               './src/fiddle-main.js'],\n    },\n    output: {\n        filename: '[name].js',\n        path: path.join(__dirname, 'dist'),\n        publicPath: '/static/'\n    },\n    plugins: [\n        new webpack.HotModuleReplacementPlugin(),\n    ],\n    externals: {\n        // require(\"jquery\") is external and available on the global var jQuery\n        jquery: 'jQuery',\n        //react: 'React',\n        //'react/addons': 'React',\n        //'react-dom': 'ReactDOM',\n        lodash: '_',\n        bootstrap: 'bootstrap',\n        firebase: 'Firebase',\n        codemirror: 'CodeMirror',\n        '../libs/codemirror-4.8/lib/codemirror': 'CodeMirror'\n        //'./libs/codemirror-4.8/mode/javascript/javascript',\n        //'./libs/codemirror-4.8/addon/hint/html-hint',\n        //'./libs/codemirror-4.8/addon/hint/show-hint',\n        //'./libs/codemirror-4.8/addon/hint/xml-hint',\n        //'./libs/codemirror-4.8/addon/hint/html-hint',\n        ////'./libs/codemirror-4.8/addon/display/panel',\n        //'./libs/codemirror-4.8/mode/xml/xml',\n        ////'./libs/codemirror-4.8/mode/css/css',\n        //'./libs/codemirror-4.8/addon/runmode/runmode'\n    },\n    resolve: {\n        // you can now require('file') instead of require('file.coffee')\n        extensions: ['', '.js', '.json'],\n        alias: {\n            //bootstrap: 'empty'\n        }\n    },\n    module: {\n        loaders: [\n            {test: /\\.js$/, exclude: /node_modules/, loaders: ['react-hot', 'babel']},\n            {test: /\\.jsx$/, loaders: ['babel-loader']},\n            {test: /\\.html$/, loader: 'file?name=[name].[ext]'},\n            {test: /\\.json$/, loader: 'json-loader'},\n            {test: /\\.less$/, loader: 'style-loader!css-loader!less-loader'}, // use ! to chain loaders\n            {test: /\\.css$/, loader: 'style-loader!css-loader'},\n            {test: /\\.(png|jpg)$/, loader: 'url-loader?limit=8192'}, // inline base64 URLs for <=8k images, direct URLs for the rest\n            {test: /\\.rt/, exclude: /samples/, loaders: ['react-templates-loader?targetVersion=0.14.0']},\n            {test: /\\.text/, loaders: ['raw-loader']}\n            //\"md|markdown\": [\"html-loader\", \"markdown-loader\"]\n        ]\n    }\n};\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/sample/ImageSearch.js":"define([\n    'lodash',\n    'jquery',\n    'react',\n    'ImageSearch.rt'\n], function (_, $, React, template) {\n    'use strict';\n\n    var ImageSearch = React.createClass({\n\n        displayName: 'ImageSearch',\n        mixins: [React.addons.LinkedStateMixin],\n\n        seq: 0,\n        total: 0,\n        hasMore: true,\n        heights: [0, 0, 0],\n        realTerm: 'cats',\n\n        getInitialState: function () {\n            setTimeout(this.search, 0);\n            return {\n                searchTerm: this.realTerm,\n                items: [[], [], []]\n            };\n        },\n\n        search: function () {\n            this.state.items = [[], [], []];\n            this.total = 0;\n            this.heights = [0, 0, 0];\n            this.hasMore = true;\n            this.realTerm = this.state.searchTerm;\n            this.loadMore();\n        },\n\n        indexOfMin: function (array) {\n            var indexAndMin = _.reduce(array, function (accum, height, index) {\n                /*eslint no-extra-parens:0*/\n                return (height < accum.min) ? {i: index, min: height} : accum;\n            }, {i: -1, min: Number.MAX_VALUE});\n            return indexAndMin.i;\n        },\n\n        loadMore: function (done) {\n            done = done || _.noop;\n            if (!this.hasMore) {\n                done();\n                return;\n            }\n            var url = 'https://ajax.googleapis.com/ajax/services/search/images?v=1.0&rsz=8&start=' + this.total + '&q=' + this.realTerm + '&callback=?';\n\n            var self = this;\n            $.ajax({url: url, dataType: 'jsonp'})\n                .done(function (data) {\n                    if (!data.responseData) {\n                        self.hasMore = false;\n                        done();\n                        return;\n                    }\n                    var results = data.responseData.results;\n                    var items = _.cloneDeep(self.state.items);\n                    results.forEach(function (result) {\n                        var minHeightIndex = self.indexOfMin(self.heights);\n\n                        items[minHeightIndex].push({\n                            id: self.seq + 1,\n                            title: result.titleNoFormatting,\n                            url: result.url,\n                            ratio: result.width / result.height,\n                            originalContext: result.originalContextUrl\n                        });\n\n                        self.heights[minHeightIndex] += result.height / result.width;\n                        self.total++;\n                        self.seq++;\n                    });\n\n                    self.setState({items: items});\n                    done();\n                });\n        },\n\n        shouldComponentUpdate: function (nextProps, nextState) {\n            return !_.isEqual(this.state, nextState);\n        },\n\n        render: function () {\n            return template.apply(this);\n        }\n    });\n\n    return ImageSearch;\n});\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/sample/ImageSearch.rt.js":"/*eslint new-cap:0,no-unused-vars:0*/\ndefine([\n    'react',\n    'lodash',\n    'InfiniteScroll'\n], function (React, _, InfiniteScroll) {\n    'use strict';\n    function onKeyDown1(e) {\n        if (e.keyCode == 13) {\n            this.search();\n            return false;\n        }\n    }\n    function onClick2() {\n        this.search();\n        return false;\n    }\n    function repeatI3(row, rowIndex, i, iIndex) {\n        return React.DOM.a({\n            'href': i.originalContext,\n            'target': 'blank',\n            'className': 'container fadeInDown',\n            'key': i.id\n        }, React.DOM.div({\n            'style': {\n                paddingTop: Math.floor(100 / i.ratio) + '%',\n                backgroundColor: 'grey'\n            }\n        }), React.DOM.div({ 'className': 'imgContainer' }, React.DOM.img({\n            'width': '100%',\n            'src': i.url\n        }), React.DOM.div({ 'className': 'title' }, i.title)));\n    }\n    function repeatRow4(row, rowIndex) {\n        return React.DOM.div.apply(this, _.flatten([\n            { 'key': row },\n            _.map(this.state.items[row], repeatI3.bind(this, row, rowIndex))\n        ]));\n    }\n    return function () {\n        return React.DOM.div({ 'className': 'innerContainer' }, React.DOM.div({ 'className': 'searchbox' }, React.DOM.input({\n            'type': 'text',\n            'valueLink': this.linkState('searchTerm'),\n            'onKeyDown': onKeyDown1.bind(this)\n        }), React.DOM.button({ 'onClick': onClick2.bind(this) }, 'Search')), InfiniteScroll.apply(this, _.flatten([\n            {\n                'className': 'fixed',\n                'onLoadMore': this.loadMore,\n                'threshold': 150\n            },\n            _.map([\n                0,\n                1,\n                2\n            ], repeatRow4.bind(this))\n        ])));\n    };\n});","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/sample/InfiniteScroll.js":"define([\n    'lodash',\n    'jquery',\n    'react'\n], function (_, $, React) {\n    'use strict';\n\n    var InfiniteScroll = React.createClass({\n\n        displayName: 'InfiniteScroll',\n        gettingMore: false,\n\n        onLoadMoreFinished: function () {\n            this.gettingMore = false;\n        },\n\n        onScroll: function (evt) {\n            if (!this.props.onLoadMore || this.gettingMore) {\n                return;\n            }\n            var threshold = this.props.threshold || 0;\n            var raw = evt.target;\n            if (raw.scrollTop + raw.offsetHeight + threshold >= raw.scrollHeight) {\n                this.gettingMore = true;\n                this.props.onLoadMore(this.onLoadMoreFinished);\n            }\n        },\n\n        render: function () {\n            var passedProps = _.omit(this.props, ['onLoadMore', 'threshold', 'children', 'onScroll']);\n            passedProps.onScroll = this.onScroll;\n            return React.DOM.div(passedProps, this.props.children);\n        }\n    });\n\n    return InfiniteScroll;\n});\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/sample/main.js":"requirejs.config({\n//    baseUrl: '/',\n    paths: {\n        lodash: '//cdnjs.cloudflare.com/ajax/libs/lodash.js/2.4.1/lodash',\n        jquery: '//code.jquery.com/jquery-1.11.0.min',\n        react: '//cdnjs.cloudflare.com/ajax/libs/react/0.13.3/react-with-addons'\n    },\n    shim: {\n        lodash: {exports: '_'},\n        jquery: {exports: '$'},\n        react: {exports: 'React'}\n    }\n});\n\nrequirejs(['jquery', 'react', 'ImageSearch'], function ($, React, ImageSearch) {\n    'use strict';\n    React.renderComponent(ImageSearch(), $('#main').get(0)); //eslint-disable-line new-cap\n});\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/src/api.js":"'use strict';\n\nconst fs = require('fs');\nconst path = require('path');\nconst chalk = require('chalk');\nconst reactTemplates = require('./reactTemplates');\nconst fsUtil = require('./fsUtil');\nconst convertRT = reactTemplates.convertRT;\nconst convertJSRTToJS = reactTemplates.convertJSRTToJS;\n\n/**\n * @param {string} source\n * @param {string} target\n * @param {Options} options\n * @param {CONTEXT} context\n */\nfunction convertFile(source, target, options, context) {\n    options = options || {};\n    options.fileName = source;\n\n    if (!options.force && !fsUtil.isStale(source, target)) {\n        context.verbose(`target file ${chalk.cyan(target)} is up to date, skipping`);\n        return;\n    }\n\n    const html = fs.readFileSync(source).toString();\n    if (path.extname(source) === '.rts') {\n        const rtStyle = require('./rtStyle');\n        const out = rtStyle.convert(html);\n        if (!options.dryRun) {\n            fs.writeFileSync(target, out);\n        }\n        return;\n    }\n    const modules = options.modules || 'none';\n    const shouldAddName = modules === 'none' && !options.name;\n    if (shouldAddName) {\n        options.name = reactTemplates.normalizeName(path.basename(source, path.extname(source))) + 'RT';\n    }\n    options.readFileSync = fsUtil.createRelativeReadFileSync(source);\n    const js = modules === 'jsrt' ? convertJSRTToJS(html, context, options) : convertRT(html, context, options);\n    if (!options.dryRun) {\n        fs.writeFileSync(target, js);\n    }\n    if (shouldAddName) {\n        delete options.name;\n    }\n}\n\nmodule.exports = {\n    convertFile,\n    context: require('./context'),\n    _test: {}\n};\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/src/reactTemplates.js":"'use strict';\nconst cheerio = require('cheerio');\nconst _ = require('lodash');\nconst esprima = require('esprima');\nconst escodegen = require('escodegen');\nconst reactDOMSupport = require('./reactDOMSupport');\nconst reactNativeSupport = require('./reactNativeSupport');\nconst reactPropTemplates = require('./reactPropTemplates');\nconst rtError = require('./RTCodeError');\nconst reactSupport = require('./reactSupport');\nconst templates = reactSupport.templates;\nconst utils = require('./utils');\nconst validateJS = utils.validateJS;\nconst RTCodeError = rtError.RTCodeError;\n\nconst repeatTemplate = _.template('_.map(<%= collection %>,<%= repeatFunction %>.bind(<%= repeatBinds %>))');\nconst ifTemplate = _.template('((<%= condition %>)?(<%= body %>):null)');\nconst propsTemplateSimple = _.template('_.assign({}, <%= generatedProps %>, <%= rtProps %>)');\nconst propsTemplate = _.template('mergeProps( <%= generatedProps %>, <%= rtProps %>)');\n\nconst propsMergeFunction = `function mergeProps(inline,external) {\n    var res = _.assign({},inline,external)\n    if (inline.hasOwnProperty('style')) {\n        res.style = _.defaults(res.style, inline.style);\n    }\n    if (inline.hasOwnProperty('className') && external.hasOwnProperty('className')) {\n        res.className = external.className + ' ' + inline.className;\n    }\n    return res;\n}\n`;\n\nconst classSetTemplate = _.template('_.transform(<%= classSet %>, function(res, value, key){ if(value){ res.push(key); } }, []).join(\" \")');\n\nfunction getTagTemplateString(simpleTagTemplate, shouldCreateElement) {\n    if (simpleTagTemplate) {\n        return shouldCreateElement ? 'React.createElement(<%= name %>,<%= props %><%= children %>)' : '<%= name %>(<%= props %><%= children %>)';\n    }\n    return shouldCreateElement ? 'React.createElement.apply(this, [<%= name %>,<%= props %><%= children %>])' : '<%= name %>.apply(this, [<%= props %><%= children %>])';\n}\n\n\nconst commentTemplate = _.template(' /* <%= data %> */ ');\n\nconst repeatAttr = 'rt-repeat';\nconst ifAttr = 'rt-if';\nconst classSetAttr = 'rt-class';\nconst classAttr = 'class';\nconst scopeAttr = 'rt-scope';\nconst propsAttr = 'rt-props';\nconst templateNode = 'rt-template';\nconst virtualNode = 'rt-virtual';\nconst includeNode = 'rt-include';\nconst includeSrcAttr = 'src';\nconst requireAttr = 'rt-require';\nconst importAttr = 'rt-import';\nconst statelessAttr = 'rt-stateless';\nconst preAttr = 'rt-pre';\n\nconst reactTemplatesSelfClosingTags = [includeNode];\n\n/**\n * @param {Options} options\n * @return {Options}\n */\nfunction getOptions(options) {\n    options = options || {};\n    const defaultOptions = {\n        version: false,\n        force: false,\n        format: 'stylish',\n        targetVersion: reactDOMSupport.default,\n        lodashImportPath: 'lodash',\n        native: false,\n        nativeTargetVersion: reactNativeSupport.default\n    };\n\n    const finalOptions = _.defaults({}, options, defaultOptions);\n    finalOptions.reactImportPath = reactImport(finalOptions);\n    finalOptions.modules = finalOptions.modules || (finalOptions.native ? 'commonjs' : 'none');\n\n    const defaultPropTemplates = finalOptions.native ?\n        reactPropTemplates.native[finalOptions.nativeTargetVersion] :\n        reactPropTemplates.dom[finalOptions.targetVersion];\n\n    finalOptions.propTemplates = _.defaults({}, options.propTemplates, defaultPropTemplates);\n    return finalOptions;\n}\n\nfunction reactImport(options) {\n    if (options.native) {\n        return reactNativeSupport[options.nativeTargetVersion].react.module;\n    }\n    if (!options.reactImportPath) {\n        const isNewReact = _.includes(['0.14.0', '0.15.0', '15.0.0', '15.0.1'], options.targetVersion);\n        return isNewReact ? 'react' : 'react/addons';\n    }\n    return options.reactImportPath;\n}\n\n/**\n * @param {Context} context\n * @param {string} namePrefix\n * @param {string} body\n * @param {*?} params\n * @return {string}\n */\nfunction generateInjectedFunc(context, namePrefix, body, params) {\n    params = params || context.boundParams;\n    const funcName = namePrefix.replace(',', '') + (context.injectedFunctions.length + 1);\n    const funcText = `function ${funcName}(${params.join(',')}) {\n        ${body}\n        }\n        `;\n    context.injectedFunctions.push(funcText);\n    return funcName;\n}\n\nfunction generateTemplateProps(node, context) {\n    let templatePropCount = 0;\n    const propTemplateDefinition = context.options.propTemplates[node.name];\n    const propertiesTemplates = _(node.children)\n        .map((child, index) => {\n            let templateProp = null;\n            if (child.name === templateNode) { // Generic explicit template tag\n                if (!_.has(child.attribs, 'prop')) {\n                    throw RTCodeError.build(context, child, 'rt-template must have a prop attribute');\n                }\n                if (_.filter(child.children, {type: 'tag'}).length !== 1) {\n                    throw RTCodeError.build(context, child, \"'rt-template' should have a single non-text element as direct child\");\n                }\n\n                const childTemplate = _.find(context.options.propTemplates, {prop: child.attribs.prop}) || {arguments: []};\n                templateProp = {\n                    prop: child.attribs.prop,\n                    arguments: (child.attribs.arguments ? child.attribs.arguments.split(',') : childTemplate.arguments) || []\n                };\n            } else if (propTemplateDefinition && propTemplateDefinition[child.name]) { // Implicit child template from configuration\n                templateProp = {\n                    prop: propTemplateDefinition[child.name].prop,\n                    arguments: child.attribs.arguments ? child.attribs.arguments.split(',') : propTemplateDefinition[child.name].arguments\n                };\n            }\n\n            if (templateProp) {\n                _.assign(templateProp, {childIndex: index - templatePropCount++, content: _.find(child.children, {type: 'tag'})});\n            }\n\n            return templateProp;\n        })\n        .compact()\n        .value();\n\n    return _.transform(propertiesTemplates, (props, templateProp) => {\n        const functionParams = _.values(context.boundParams).concat(templateProp.arguments);\n\n        const oldBoundParams = context.boundParams;\n        context.boundParams = context.boundParams.concat(templateProp.arguments);\n\n        const functionBody = 'return ' + convertHtmlToReact(templateProp.content, context);\n        context.boundParams = oldBoundParams;\n\n        const generatedFuncName = generateInjectedFunc(context, templateProp.prop, functionBody, functionParams);\n        props[templateProp.prop] = genBind(generatedFuncName, _.values(context.boundParams));\n\n        // Remove the template child from the children definition.\n        node.children.splice(templateProp.childIndex, 1);\n    }, {});\n}\n\n/**\n * @param node\n * @param {Context} context\n * @return {string}\n */\nfunction generateProps(node, context) {\n    const props = {};\n    _.forOwn(node.attribs, (val, key) => {\n        const propKey = reactSupport.attributesMapping[key.toLowerCase()] || key;\n        if (props.hasOwnProperty(propKey) && propKey !== reactSupport.classNameProp) {\n            throw RTCodeError.build(context, node, `duplicate definition of ${propKey} ${JSON.stringify(node.attribs)}`);\n        }\n        if (_.startsWith(key, 'on') && !utils.isStringOnlyCode(val)) {\n            props[propKey] = handleEventHandler(val, context, node, key);\n        } else if (key === 'style' && !utils.isStringOnlyCode(val)) {\n            props[propKey] = handleStyleProp(val, node, context);\n        } else if (propKey === reactSupport.classNameProp) {\n            // Processing for both class and rt-class conveniently return strings that\n            // represent JS expressions, each evaluating to a space-separated set of class names.\n            // We can just join them with another space here.\n            const existing = props[propKey] ? `${props[propKey]} + \" \" + ` : '';\n            if (key === classSetAttr) {\n                props[propKey] = existing + classSetTemplate({classSet: val});\n            } else if (key === classAttr || key === reactSupport.classNameProp) {\n                props[propKey] = existing + utils.convertText(node, context, val.trim());\n            }\n        } else if (!_.startsWith(key, 'rt-')) {\n            props[propKey] = utils.convertText(node, context, val.trim());\n        }\n    });\n    _.assign(props, generateTemplateProps(node, context));\n\n    // map 'className' back into 'class' for custom elements\n    if (props[reactSupport.classNameProp] && isCustomElement(node.name)) {\n        props[classAttr] = props[reactSupport.classNameProp];\n        delete props[reactSupport.classNameProp];\n    }\n\n    const propStr = _.map(props, (v, k) => `${JSON.stringify(k)} : ${v}`).join(',');\n    return `{${propStr}}`;\n}\n\nfunction handleEventHandler(val, context, node, key) {\n    const funcParts = val.split('=>');\n    if (funcParts.length !== 2) {\n        throw RTCodeError.build(context, node, `when using 'on' events, use lambda '(p1,p2)=>body' notation or use {} to return a callback function. error: [${key}='${val}']`);\n    }\n    const evtParams = funcParts[0].replace('(', '').replace(')', '').trim();\n    const funcBody = funcParts[1].trim();\n    let params = context.boundParams;\n    if (evtParams.trim() !== '') {\n        params = params.concat([evtParams.trim()]);\n    }\n    const generatedFuncName = generateInjectedFunc(context, key, funcBody, params);\n    return genBind(generatedFuncName, context.boundParams);\n}\n\nfunction genBind(func, args) {\n    const bindArgs = ['this'].concat(args);\n    return `${func}.bind(${bindArgs.join(',')})`;\n}\n\nfunction handleStyleProp(val, node, context) {\n    const styleStr = _(val)\n        .split(';')\n        .map(_.trim)\n        .filter(i => _.includes(i, ':'))\n        .map(i => {\n            const pair = i.split(':');\n            const key = pair[0].trim();\n            if (/\\{|}/g.test(key)) {\n                throw RTCodeError.build(context, node, 'style attribute keys cannot contain { } expressions');\n            }\n            const value = pair.slice(1).join(':').trim();\n            const parsedKey = /(^-moz-)|(^-o-)|(^-webkit-)/ig.test(key) ? _.upperFirst(_.camelCase(key)) : _.camelCase(key);\n            return parsedKey + ' : ' + utils.convertText(node, context, value.trim());\n        })\n        .join(',');\n    return `{${styleStr}}`;\n}\n\n/**\n * @param {string} tagName\n * @param context\n * @return {string}\n */\nfunction convertTagNameToConstructor(tagName, context) {\n    if (context.options.native) {\n        const targetSupport = reactNativeSupport[context.options.nativeTargetVersion];\n        return _.includes(targetSupport.components, tagName) ? `${targetSupport.reactNative.name}.${tagName}` : tagName;\n    }\n    let isHtmlTag = _.includes(reactDOMSupport[context.options.targetVersion], tagName) || isCustomElement(tagName);\n    if (reactSupport.shouldUseCreateElement(context)) {\n        isHtmlTag = isHtmlTag || tagName.match(/^\\w+(-\\w+)+$/);\n        return isHtmlTag ? `'${tagName}'` : tagName;\n    }\n    return isHtmlTag ? `React.DOM.${tagName}` : tagName;\n}\n\nfunction isCustomElement(tagName) {\n    return tagName.match(/^\\w+(-\\w+)+$/);\n}\n\n/**\n * @param {string} html\n * @param options\n * @param reportContext\n * @return {Context}\n */\nfunction defaultContext(html, options, reportContext) {\n    const defaultDefines = [\n        {moduleName: options.reactImportPath, alias: 'React', member: '*'},\n        {moduleName: options.lodashImportPath, alias: '_', member: '*'}\n    ];\n    if (options.native) {\n        const targetSupport = reactNativeSupport[options.nativeTargetVersion];\n        if (targetSupport.reactNative.module !== targetSupport.react.module) {\n            defaultDefines.splice(0, 0, {moduleName: targetSupport.reactNative.module, alias: targetSupport.reactNative.name, member: '*'});\n        }\n    }\n    return {\n        boundParams: [],\n        injectedFunctions: [],\n        html,\n        options,\n        defines: options.defines ? _.clone(options.defines) : defaultDefines,\n        reportContext\n    };\n}\n\n/**\n * @param node\n * @return {boolean}\n */\nfunction hasNonSimpleChildren(node) {\n    return _.some(node.children, child => child.type === 'tag' && child.attribs[repeatAttr]);\n}\n\n/**\n * Trims a string the same way as String.prototype.trim(), but preserving all non breaking spaces ('\\xA0')\n * @param {string} text\n * @return {string}\n */\nfunction trimHtmlText(text) {\n    return text.replace(/^[ \\f\\n\\r\\t\\v\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]+|[ \\f\\n\\r\\t\\v\\u1680\\u180e\\u2000-\\u200a\\u2028\\u2029\\u202f\\u205f\\u3000\\ufeff]+$/g, '');\n}\n\n/**\n * @param node\n * @param {Context} context\n * @return {string}\n */\nfunction convertHtmlToReact(node, context) {\n    if (node.type === 'tag' || node.type === 'style') {\n        context = _.defaults({\n            boundParams: _.clone(context.boundParams)\n        }, context);\n\n        if (node.type === 'tag' && node.name === importAttr) {\n            throw RTCodeError.build(context, node, \"'rt-import' must be a toplevel node\");\n        }\n\n        if (node.type === 'tag' && node.name === includeNode) {\n            const srcFile = node.attribs[includeSrcAttr];\n            if (!srcFile) {\n                throw RTCodeError.build(context, node, 'rt-include must supply a source attribute');\n            }\n            if (!context.options.readFileSync) {\n                throw RTCodeError.build(context, node, 'rt-include needs a readFileSync polyfill on options');\n            }\n            try {\n                context.html = context.options.readFileSync(srcFile);\n            } catch (e) {\n                console.error(e);\n                throw RTCodeError.build(context, node, `rt-include failed to read file '${srcFile}'`);\n            }\n            return parseAndConvertHtmlToReact(context.html, context);\n        }\n\n        const data = {name: convertTagNameToConstructor(node.name, context)};\n\n        // Order matters. We need to add the item and itemIndex to context.boundParams before\n        // the rt-scope directive is processed, lest they are not passed to the child scopes\n        if (node.attribs[repeatAttr]) {\n            const arr = node.attribs[repeatAttr].split(' in ');\n            if (arr.length !== 2) {\n                throw RTCodeError.build(context, node, `rt-repeat invalid 'in' expression '${node.attribs[repeatAttr]}'`);\n            }\n            const repeaterParams = arr[0].split(',').map(s => s.trim());\n            data.item = repeaterParams[0];\n            data.index = repeaterParams[1] || `${data.item}Index`;\n            data.collection = arr[1].trim();\n            const bindParams = [data.item, data.index];\n            _.forEach(bindParams, param => {\n                validateJS(param, node, context);\n            });\n            validateJS(`(${data.collection})`, node, context);\n            _.forEach(bindParams, param => {\n                if (!_.includes(context.boundParams, param)) {\n                    context.boundParams.push(param);\n                }\n            });\n        }\n\n        if (node.attribs[scopeAttr]) {\n            handleScopeAttribute(node, context, data);\n        }\n\n        if (node.attribs[ifAttr]) {\n            validateIfAttribute(node, context, data);\n            data.condition = node.attribs[ifAttr].trim();\n            if (!node.attribs.key && node.name !== virtualNode) {\n                _.set(node, ['attribs', 'key'], `${node.startIndex}`);\n            }\n        }\n\n        data.props = generateProps(node, context);\n        if (node.attribs[propsAttr]) {\n            if (data.props === '{}') {\n                data.props = node.attribs[propsAttr];\n            } else if (!node.attribs.style && !node.attribs.class) {\n                data.props = propsTemplateSimple({generatedProps: data.props, rtProps: node.attribs[propsAttr]});\n            } else {\n                data.props = propsTemplate({generatedProps: data.props, rtProps: node.attribs[propsAttr]});\n                if (!_.includes(context.injectedFunctions, propsMergeFunction)) {\n                    context.injectedFunctions.push(propsMergeFunction);\n                }\n            }\n        }\n\n        if (node.name === virtualNode) {\n            const invalidAttributes = _.without(_.keys(node.attribs), scopeAttr, ifAttr, repeatAttr);\n            if (invalidAttributes.length > 0) {\n                throw RTCodeError.build(context, node, \"<rt-virtual> may not contain attributes other than 'rt-scope', 'rt-if' and 'rt-repeat'\");\n            }\n\n            // provide a key to virtual node children if missing\n            if (node.children.length > 1) {\n                _(node.children)\n                    .reject('attribs.key')\n                    .forEach((child, i) => {\n                        if (child.type === 'tag' && child.name !== virtualNode) {\n                            _.set(child, ['attribs', 'key'], `${node.startIndex}${i}`);\n                        }\n                    });\n            }\n        }\n\n        const children = _.map(node.children, child => {\n            const code = convertHtmlToReact(child, context);\n            validateJS(code, child, context);\n            return code;\n        });\n\n        data.children = utils.concatChildren(children);\n\n        if (node.name === virtualNode) { //eslint-disable-line wix-editor/prefer-ternary\n            data.body = `[${_.compact(children).join(',')}]`;\n        } else {\n            data.body = _.template(getTagTemplateString(!hasNonSimpleChildren(node), reactSupport.shouldUseCreateElement(context)))(data);\n        }\n\n        if (node.attribs[scopeAttr]) {\n            const functionBody = _.values(data.innerScope.innerMapping).join('\\n') + `return ${data.body}`;\n            const generatedFuncName = generateInjectedFunc(context, 'scope' + data.innerScope.scopeName, functionBody, _.keys(data.innerScope.outerMapping));\n            data.body = `${generatedFuncName}.apply(this, [${_.values(data.innerScope.outerMapping).join(',')}])`;\n        }\n\n        // Order matters here. Each rt-repeat iteration wraps over the rt-scope, so\n        // the scope variables are evaluated in context of the current iteration.\n        if (node.attribs[repeatAttr]) {\n            data.repeatFunction = generateInjectedFunc(context, 'repeat' + _.upperFirst(data.item), 'return ' + data.body);\n            data.repeatBinds = ['this'].concat(_.reject(context.boundParams, p => p === data.item || p === data.index || data.innerScope && p in data.innerScope.innerMapping));\n            data.body = repeatTemplate(data);\n        }\n        if (node.attribs[ifAttr]) {\n            data.body = ifTemplate(data);\n        }\n        return data.body;\n    } else if (node.type === 'comment') {\n        const sanitizedComment = node.data.split('*/').join('* /');\n        return commentTemplate({data: sanitizedComment});\n    } else if (node.type === 'text') {\n        const parentNode = node.parent;\n        const overrideNormalize = parentNode !== undefined && (parentNode.name === 'pre' || parentNode.name === 'textarea' || _.has(parentNode.attribs, preAttr));\n        const normalizeWhitespaces = context.options.normalizeHtmlWhitespace && !overrideNormalize;\n        const text = node.data;\n        return trimHtmlText(text) ? utils.convertText(node, context, text, normalizeWhitespaces) : '';\n    }\n}\n\n/**\n * Parses the rt-scope attribute returning an array of parsed sections\n *\n * @param {String} scope The scope attribute to parse\n * @returns {Array} an array of {expression,identifier}\n * @throws {String} the part of the string that failed to parse\n */\nfunction parseScopeSyntax(text) {\n    // the regex below was built using the following pseudo-code:\n    // double_quoted_string = `\"[^\"\\\\\\\\]*(?:\\\\\\\\.[^\"\\\\\\\\]*)*\"`\n    // single_quoted_string = `'[^'\\\\\\\\]*(?:\\\\\\\\.[^'\\\\\\\\]*)*'`\n    // text_out_of_quotes = `[^\"']*?`\n    // expr_parts = double_quoted_string + \"|\" + single_quoted_string + \"|\" + text_out_of_quotes\n    // expression = zeroOrMore(nonCapture(expr_parts)) + \"?\"\n    // id = \"[$_a-zA-Z]+[$_a-zA-Z0-9]*\"\n    // as = \" as\" + OneOrMore(\" \")\n    // optional_spaces = zeroOrMore(\" \")\n    // semicolon = nonCapture(or(text(\";\"), \"$\"))\n    //\n    // regex = capture(expression) + as + capture(id) + optional_spaces + semicolon + optional_spaces\n\n    const regex = RegExp(\"((?:(?:\\\"[^\\\"\\\\\\\\]*(?:\\\\\\\\.[^\\\"\\\\\\\\]*)*\\\"|'[^'\\\\\\\\]*(?:\\\\\\\\.[^'\\\\\\\\]*)*'|[^\\\"']*?))*?) as(?: )+([$_a-zA-Z]+[$_a-zA-Z0-9]*)(?: )*(?:;|$)(?: )*\", 'g');\n    const res = [];\n    do {\n        const idx = regex.lastIndex;\n        const match = regex.exec(text);\n        if (regex.lastIndex === idx || match === null) {\n            throw text.substr(idx);\n        }\n        if (match.index === regex.lastIndex) {\n            regex.lastIndex++;\n        }\n        res.push({expression: match[1].trim(), identifier: match[2]});\n    } while (regex.lastIndex < text.length);\n\n    return res;\n}\n\nfunction handleScopeAttribute(node, context, data) {\n    data.innerScope = {\n        scopeName: '',\n        innerMapping: {},\n        outerMapping: {}\n    };\n\n    data.innerScope.outerMapping = _.zipObject(context.boundParams, context.boundParams);\n\n    let scopes;\n    try {\n        scopes = parseScopeSyntax(node.attribs[scopeAttr]);\n    } catch (scopePart) {\n        throw RTCodeError.build(context, node, `invalid scope part '${scopePart}'`);\n    }\n\n    scopes.forEach(({expression, identifier}) => {\n        validateJS(identifier, node, context);\n\n        // this adds both parameters to the list of parameters passed further down\n        // the scope chain, as well as variables that are locally bound before any\n        // function call, as with the ones we generate for rt-scope.\n        if (!_.includes(context.boundParams, identifier)) {\n            context.boundParams.push(identifier);\n        }\n\n        data.innerScope.scopeName += _.upperFirst(identifier);\n        data.innerScope.innerMapping[identifier] = `var ${identifier} = ${expression};`;\n        validateJS(data.innerScope.innerMapping[identifier], node, context);\n    });\n}\n\nfunction validateIfAttribute(node, context, data) {\n    const innerMappingKeys = _.keys(data.innerScope && data.innerScope.innerMapping || {});\n    let ifAttributeTree = null;\n    try {\n        ifAttributeTree = esprima.parse(node.attribs[ifAttr]);\n    } catch (e) {\n        throw new RTCodeError(e.message, e.index, -1);\n    }\n    if (ifAttributeTree && ifAttributeTree.body && ifAttributeTree.body.length === 1 && ifAttributeTree.body[0].type === 'ExpressionStatement') {\n        // make sure that rt-if does not use an inner mapping\n        if (ifAttributeTree.body[0].expression && utils.usesScopeName(innerMappingKeys, ifAttributeTree.body[0].expression)) {\n            throw RTCodeError.buildFormat(context, node, \"invalid scope mapping used in if part '%s'\", node.attribs[ifAttr]);\n        }\n    } else {\n        throw RTCodeError.buildFormat(context, node, \"invalid if part '%s'\", node.attribs[ifAttr]);\n    }\n}\n\nfunction handleSelfClosingHtmlTags(nodes) {\n    return _.flatMap(nodes, node => {\n        let externalNodes = [];\n        node.children = handleSelfClosingHtmlTags(node.children);\n        if (node.type === 'tag' && (_.includes(reactSupport.htmlSelfClosingTags, node.name) ||\n            _.includes(reactTemplatesSelfClosingTags, node.name))) {\n            externalNodes = _.filter(node.children, {type: 'tag'});\n            _.forEach(externalNodes, i => {i.parent = node;});\n            node.children = _.reject(node.children, {type: 'tag'});\n        }\n        return [node].concat(externalNodes);\n    });\n}\n\nfunction handleRequire(tag, context) {\n    let moduleName;\n    let alias;\n    let member;\n    if (tag.children.length) {\n        throw RTCodeError.build(context, tag, `'${requireAttr}' may have no children`);\n    } else if (tag.attribs.dependency && tag.attribs.as) {\n        moduleName = tag.attribs.dependency;\n        member = '*';\n        alias = tag.attribs.as;\n    }\n    if (!moduleName) {\n        throw RTCodeError.build(context, tag, `'${requireAttr}' needs 'dependency' and 'as' attributes`);\n    }\n    context.defines.push({moduleName, member, alias});\n}\n\nfunction handleImport(tag, context) {\n    let moduleName;\n    let alias;\n    let member;\n    if (tag.children.length) {\n        throw RTCodeError.build(context, tag, `'${importAttr}' may have no children`);\n    } else if (tag.attribs.name && tag.attribs.from) {\n        moduleName = tag.attribs.from;\n        member = tag.attribs.name;\n        alias = tag.attribs.as;\n        if (!alias) {\n            if (member === '*') {\n                throw RTCodeError.build(context, tag, \"'*' imports must have an 'as' attribute\");\n            } else if (member === 'default') {\n                throw RTCodeError.build(context, tag, \"default imports must have an 'as' attribute\");\n            }\n            alias = member;\n        }\n    }\n    if (!moduleName) {\n        throw RTCodeError.build(context, tag, `'${importAttr}' needs 'name' and 'from' attributes`);\n    }\n    context.defines.push({moduleName, member, alias});\n}\n\nfunction convertTemplateToReact(html, options) {\n    const context = require('./context');\n    return convertRT(html, context, options);\n}\n\nfunction parseAndConvertHtmlToReact(html, context) {\n    const rootNode = cheerio.load(html, {\n        lowerCaseTags: false,\n        lowerCaseAttributeNames: false,\n        xmlMode: true,\n        withStartIndices: true\n    });\n    utils.validate(context.options, context, context.reportContext, rootNode.root()[0]);\n    let rootTags = _.filter(rootNode.root()[0].children, {type: 'tag'});\n    rootTags = handleSelfClosingHtmlTags(rootTags);\n    if (!rootTags || rootTags.length === 0) {\n        throw new RTCodeError('Document should have a root element');\n    }\n    let firstTag = null;\n    _.forEach(rootTags, tag => {\n        if (tag.name === requireAttr) {\n            handleRequire(tag, context);\n        } else if (tag.name === importAttr) {\n            handleImport(tag, context);\n        } else if (firstTag === null) {\n            firstTag = tag;\n            if (_.hasIn(tag, ['attribs', statelessAttr])) {\n                context.stateless = true;\n            }\n        } else {\n            throw RTCodeError.build(context, tag, 'Document should have no more than a single root element');\n        }\n    });\n    if (firstTag === null) {\n        throw RTCodeError.build(context, rootNode.root()[0], 'Document should have a single root element');\n    } else if (firstTag.name === virtualNode) {\n        throw RTCodeError.build(context, firstTag, `Document should not have <${virtualNode}> as root element`);\n    } else if (_.includes(_.keys(firstTag.attribs), repeatAttr)) {\n        throw RTCodeError.build(context, firstTag, \"root element may not have a 'rt-repeat' attribute\");\n    }\n    return convertHtmlToReact(firstTag, context);\n}\n\n/**\n * @param {string} html\n * @param {CONTEXT} reportContext\n * @param {Options?} options\n * @return {string}\n */\nfunction convertRT(html, reportContext, options) {\n    options = getOptions(options);\n\n    const context = defaultContext(html, options, reportContext);\n    const body = parseAndConvertHtmlToReact(html, context);\n    const injectedFunctions = context.injectedFunctions.join('\\n');\n    const statelessParams = context.stateless ? 'props, context' : '';\n    const renderFunction = `function(${statelessParams}) { ${injectedFunctions}return ${body} }`;\n\n    const requirePaths = _.map(context.defines, d => `\"${d.moduleName}\"`).join(',');\n    const requireNames = _.map(context.defines, d => `${d.alias}`).join(',');\n    const AMDArguments = _.map(context.defines, (d, i) => (d.member === '*' ? `${d.alias}` : `$${i}`)).join(','); //eslint-disable-line\n    const AMDSubstitutions = _.map(context.defines, (d, i) => (d.member === '*' ? null : `var ${d.alias} = $${i}.${d.member};`)).join('\\n'); //eslint-disable-line\n    const buildImport = reactSupport.buildImport[options.modules] || reactSupport.buildImport.commonjs;\n    const requires = _.map(context.defines, buildImport).join('\\n');\n    const header = options.flow ? '/* @flow */\\n' : '';\n    const vars = header + requires;\n    const data = {\n        renderFunction,\n        requireNames,\n        requirePaths,\n        AMDArguments,\n        AMDSubstitutions,\n        vars,\n        name: options.name\n    };\n    let code = templates[options.modules](data);\n    if (options.modules !== 'typescript' && options.modules !== 'jsrt') {\n        code = parseJS(code, options);\n    }\n    return code;\n}\n\nfunction parseJS(code, options) {\n    try {\n        let tree = esprima.parse(code, {range: true, tokens: true, comment: true, sourceType: 'module'});\n        // fix for https://github.com/wix/react-templates/issues/157\n        // do not include comments for es6 modules due to bug in dependency \"escodegen\"\n        // to be removed when https://github.com/estools/escodegen/issues/263 will be fixed\n        // remove also its test case \"test/data/comment.rt.es6.js\"\n        if (options.modules !== 'es6') {\n            tree = escodegen.attachComments(tree, tree.comments, tree.tokens);\n        }\n        return escodegen.generate(tree, {comment: true});\n    } catch (e) {\n        throw new RTCodeError(e.message, e.index, -1);\n    }\n}\n\nfunction convertJSRTToJS(text, reportContext, options) {\n    options = getOptions(options);\n    options.modules = 'jsrt';\n    const templateMatcherJSRT = /<template>([^]*?)<\\/template>/gm;\n    const code = text.replace(templateMatcherJSRT, (template, html) => convertRT(html, reportContext, options).replace(/;$/, ''));\n\n    return parseJS(code, options);\n}\n\nmodule.exports = {\n    convertTemplateToReact,\n    convertRT,\n    convertJSRTToJS,\n    RTCodeError,\n    normalizeName: utils.normalizeName\n};\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/src/reactDOMSupport.js":"'use strict';\nconst ver0_12_0 = ['a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'big', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup', 'data',\n    'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'main', 'map', 'mark', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr', 'circle', 'defs', 'ellipse', 'g', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'text', 'tspan'];\nconst ver0_11_2 = ['a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'big', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'dialog', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'main', 'map', 'mark', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'picture', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr', 'circle', 'defs', 'ellipse', 'g', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'text', 'tspan', 'injection'];\nconst ver0_11_0 = ['a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'big', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'main', 'map', 'mark', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr', 'circle', 'defs', 'ellipse', 'g', 'line', 'linearGradient', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'text', 'tspan', 'injection'];\nconst ver0_10_0 = ['a', 'abbr', 'address', 'area', 'article', 'aside', 'audio', 'b', 'base', 'bdi', 'bdo', 'big', 'blockquote', 'body', 'br', 'button', 'canvas', 'caption', 'cite', 'code', 'col', 'colgroup', 'data', 'datalist', 'dd', 'del', 'details', 'dfn', 'div', 'dl', 'dt', 'em', 'embed', 'fieldset', 'figcaption', 'figure', 'footer', 'form', 'h1', 'h2', 'h3', 'h4', 'h5', 'h6', 'head', 'header', 'hr', 'html', 'i', 'iframe', 'img', 'input', 'ins', 'kbd', 'keygen', 'label', 'legend', 'li', 'link', 'main', 'map', 'mark', 'menu', 'menuitem', 'meta', 'meter', 'nav', 'noscript', 'object', 'ol', 'optgroup', 'option', 'output', 'p', 'param', 'pre', 'progress', 'q', 'rp', 'rt', 'ruby', 's', 'samp', 'script', 'section', 'select', 'small', 'source', 'span', 'strong', 'style', 'sub', 'summary', 'sup', 'table', 'tbody', 'td', 'textarea', 'tfoot', 'th', 'thead', 'time', 'title', 'tr', 'track', 'u', 'ul', 'var', 'video', 'wbr', 'circle', 'defs', 'g', 'line', 'linearGradient', 'path', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'text', 'injection'];\nconst svg = ['a', 'altGlyph', 'altGlyphDef', 'altGlyphItem', 'animate', 'animateMotion', 'animateTransform', 'circle', 'clipPath', 'color-profile', 'cursor', 'defs', 'desc', 'ellipse', 'feBlend', 'g', 'image', 'line',\n    'linearGradient', 'marker', 'mask', 'path', 'pattern', 'polygon', 'polyline', 'radialGradient', 'rect', 'stop', 'svg', 'text', 'tref', 'tspan', 'use'];\nconst v12_svg = ver0_12_0.concat(svg);\n\nconst versions = {\n    '15.0.1': v12_svg,\n    '15.0.0': v12_svg,\n    '0.14.0': v12_svg,\n    '0.13.1': v12_svg,\n    '0.12.2': v12_svg,\n    '0.12.1': v12_svg,\n    '0.12.0': v12_svg,\n    '0.11.2': ver0_11_2,\n    '0.11.1': ver0_11_0,\n    '0.11.0': ver0_11_0,\n    '0.10.0': ver0_10_0,\n    default: '0.14.0'\n};\nmodule.exports = versions;\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/src/reactNativeSupport.js":"'use strict';\n\nconst ver0_9_0 = ['ActivityIndicatorIOS', 'DatePickerIOS', 'Image', 'ListView', 'MapView', 'Navigator', 'NavigatorIOS', 'PickerIOS', 'ScrollView', 'SliderIOS', 'SwitchIOS', 'TabBarIOS', 'Text', 'TextInput', 'TouchableHighlight', 'TouchableOpacity', 'TouchableWithoutFeedback', 'View', 'WebView'];\n\nconst versions = {\n    '0.9.0': {\n        react: {name: 'React', module: 'react-native'},\n        reactNative: {name: 'React', module: 'react-native'},\n        components: ver0_9_0\n    },\n    '0.29.0': {\n        react: {name: 'React', module: 'react'},\n        reactNative: {name: 'ReactNative', module: 'react-native'},\n        components: ver0_9_0\n    },\n    default: '0.9.0'\n};\n\nmodule.exports = versions;\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/src/reactPropTemplates.js":"'use strict';\n\nconst native = {\n    '0.9.0': {\n        ListView: {\n            Row: {prop: 'renderRow', arguments: ['rowData', 'sectionID', 'rowID', 'highlightRow']},\n            Footer: {prop: 'renderFooter', arguments: []},\n            Header: {prop: 'renderHeader', arguments: []},\n            ScrollComponent: {prop: 'renderScrollComponent', arguments: ['props']},\n            SectionHeader: {prop: 'renderSectionHeader', arguments: ['sectionData', 'sectionID']},\n            Separator: {prop: 'renderSeparator', arguments: ['sectionID', 'rowID', 'adjacentRowHighlighted']}\n        }\n    },\n    '0.29.0': {\n        ListView: {\n            Row: {prop: 'renderRow', arguments: ['rowData', 'sectionID', 'rowID', 'highlightRow']},\n            Footer: {prop: 'renderFooter', arguments: []},\n            Header: {prop: 'renderHeader', arguments: []},\n            ScrollComponent: {prop: 'renderScrollComponent', arguments: ['props']},\n            SectionHeader: {prop: 'renderSectionHeader', arguments: ['sectionData', 'sectionID']},\n            Separator: {prop: 'renderSeparator', arguments: ['sectionID', 'rowID', 'adjacentRowHighlighted']}\n        }\n    }\n};\n\nmodule.exports = {\n    native,\n    dom: {}\n};\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/src/RTCodeError.js":"'use strict';\nconst util = require('util');\nconst _ = require('lodash');\n\n\n/**\n * @typedef {{line: number, col: number}} Pos\n */\n\n/**\n * @param {string} html\n * @param node\n * @return {Pos}\n */\nfunction getLine(html, node) {\n    if (!node) {\n        return {line: 1, col: 1};\n    }\n    const linesUntil = html.substring(0, node.startIndex).split('\\n');\n    return {line: linesUntil.length, col: linesUntil[linesUntil.length - 1].length + 1};\n}\n\nfunction norm(n) {\n    return n === undefined ? -1 : n;\n}\n\n/**\n * @param {string} message\n * @param {number=} startOffset\n * @param {number=} endOffset\n * @param {number=} line\n * @param {number=} column\n * @constructor\n */\nclass RTCodeError extends Error {\n    constructor(message, startOffset, endOffset, line, column) {\n        super();\n        Error.captureStackTrace(this, RTCodeError);\n        this.name = 'RTCodeError';\n        this.message = message || '';\n        this.index = norm(startOffset);\n        this.startOffset = norm(startOffset);\n        this.endOffset = norm(endOffset);\n        this.line = norm(line);\n        this.column = norm(column);\n    }\n}\n\n/**\n * @type {buildError}\n */\nRTCodeError.build = buildError;\nRTCodeError.norm = norm;\n\n/**\n * @param {*} context\n * @param {*} node\n * @param {string} msg\n * @param args\n * @return {RTCodeError}\n */\nfunction buildFormat(context, node, msg, args) {\n    return buildError(context, node, util.format.apply(this, [msg].concat(args)));\n}\n\n/**\n * @param {*} context\n * @param {*} node\n * @param {string} msg\n * @param {Array.<string>} args\n * @return {RTCodeError}\n */\nRTCodeError.buildFormat = _.rest(buildFormat, 3);\n\n/**\n * @param {*} context\n * @param {*} node\n * @param {string} msg\n * @return {RTCodeError}\n */\nfunction buildError(context, node, msg) {\n    const loc = getNodeLoc(context, node);\n    return new RTCodeError(msg, loc.start, loc.end, loc.pos.line, loc.pos.col);\n}\n\n/**\n * @param context\n * @param node\n * @return {{pos:Pos, start:number, end:number}}\n */\nfunction getNodeLoc(context, node) {\n    const start = node.startIndex;\n    const pos = getLine(context.html, node);\n    let end;\n    if (node.data) {\n        end = start + node.data.length;\n    } else if (node.next) { // eslint-disable-line\n        end = node.next.startIndex;\n    } else {\n        end = context.html.length;\n    }\n    return {\n        pos,\n        start,\n        end\n    };\n}\n\nmodule.exports = {\n    RTCodeError,\n    getNodeLoc\n};\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/src/reactSupport.js":"'use strict';\nconst _ = require('lodash');\n\n/**\n * @param {Context} context\n * @return {boolean}\n */\nfunction shouldUseCreateElement(context) {\n    switch (context.options.targetVersion) {\n        case '0.11.2':\n        case '0.11.1':\n        case '0.11.0':\n        case '0.10.0':\n            return false;\n        default:\n            return true;\n    }\n}\n\nconst reactSupportedAttributes = ['accept', 'acceptCharset', 'accessKey', 'action', 'allowFullScreen', 'allowTransparency', 'alt', 'async', 'autoComplete', 'autoPlay', 'cellPadding', 'cellSpacing', 'charSet', 'checked',\n    'classID', 'className', 'cols', 'colSpan', 'content', 'contentEditable', 'contextMenu', 'controls', 'coords', 'crossOrigin', 'data', 'dateTime', 'defer', 'dir', 'disabled', 'download',\n    'draggable', 'encType', 'form', 'formNoValidate', 'frameBorder', 'height', 'hidden', 'href', 'hrefLang', 'htmlFor', 'httpEquiv', 'icon', 'id', 'label', 'lang', 'list', 'loop', 'manifest',\n    'max', 'maxLength', 'media', 'mediaGroup', 'method', 'min', 'multiple', 'muted', 'name', 'noValidate', 'open', 'pattern', 'placeholder', 'poster', 'preload', 'radioGroup', 'readOnly', 'rel',\n    'required', 'role', 'rows', 'rowSpan', 'sandbox', 'scope', 'scrolling', 'seamless', 'selected', 'shape', 'size', 'sizes', 'span', 'spellCheck', 'src', 'srcDoc', 'srcSet', 'start', 'step',\n    'style', 'tabIndex', 'target', 'title', 'type', 'useMap', 'value', 'width', 'wmode'];\nconst classNameProp = 'className';\nconst attributesMapping = {'class': classNameProp, 'rt-class': classNameProp, 'for': 'htmlFor'}; //eslint-disable-line quote-props\n\n_.forEach(reactSupportedAttributes, attributeReactName => {\n    if (attributeReactName !== attributeReactName.toLowerCase()) {\n        attributesMapping[attributeReactName.toLowerCase()] = attributeReactName;\n    }\n});\n\nconst htmlSelfClosingTags = ['area', 'base', 'br', 'col', 'command', 'embed', 'hr', 'img', 'input', 'keygen', 'link', 'meta', 'param', 'source', 'track', 'wbr'];\n\nconst templateAMDTemplate = _.template(\"define(<%= name ? '\\\"'+name + '\\\", ' : '' %>[<%= requirePaths %>], function (<%= AMDArguments %>) {\\n'use strict';\\n<%= AMDSubstitutions %>return <%= renderFunction %>;\\n});\");\nconst templateCommonJSTemplate = _.template(\"'use strict';\\n<%= vars %>\\nmodule.exports = <%= renderFunction %>;\\n\");\nconst templateES6Template = _.template('<%= vars %>\\nexport default <%= renderFunction %>\\n');\nconst templatePJSTemplate = _.template('var <%= name %> = <%= renderFunction %>');\nconst templateTypescriptTemplate = _.template('<%= vars %>\\nexport = <%= renderFunction %>;\\n');\nconst templateJSRTTemplate = _.template('<%= renderFunction %>');\n\nconst templates = {\n    amd: templateAMDTemplate,\n    commonjs: templateCommonJSTemplate,\n    typescript: templateTypescriptTemplate,\n    es6: templateES6Template,\n    none: templatePJSTemplate,\n    jsrt: templateJSRTTemplate\n};\n\nconst isImportAsterisk = _.matches({member: '*'});\nconst defaultCase = _.constant(true);\n\nconst buildImportTypeScript = _.cond([\n    [isImportAsterisk, d => `import ${d.alias} = require('${d.moduleName}');`],\n    [_.matches({member: 'default'}), d => `import ${d.alias} from '${d.moduleName}';`],\n    [defaultCase, d => `import { ${d.member} as ${d.alias} } from '${d.moduleName}';`]\n]);\n\nconst buildImportES6 = _.cond([\n    [isImportAsterisk, d => `import * as ${d.alias} from '${d.moduleName}';`],\n    [_.matches({member: 'default'}), d => `import ${d.alias} from '${d.moduleName}';`],\n    [defaultCase, d => `import { ${d.member} as ${d.alias} } from '${d.moduleName}';`]\n]);\n\nconst buildImportCommonJS = _.cond([\n    [isImportAsterisk, d => `var ${d.alias} = require('${d.moduleName}');`],\n    [defaultCase, d => `var ${d.alias} = require('${d.moduleName}').${d.member};`]\n]);\n\nconst buildImport = {\n    typescript: buildImportTypeScript,\n    es6: buildImportES6,\n    commonjs: buildImportCommonJS,\n    amd: buildImportCommonJS,\n    none: buildImportCommonJS,\n    jsrt: buildImportCommonJS\n};\n\nmodule.exports = {\n    htmlSelfClosingTags,\n    attributesMapping,\n    classNameProp,\n    shouldUseCreateElement,\n    templates,\n    buildImport\n};\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/src/utils.js":"'use strict';\nconst _ = require('lodash');\nconst esprima = require('esprima');\nconst normalizeHtmlWhitespace = require('normalize-html-whitespace');\nconst rtError = require('./RTCodeError');\nconst RTCodeError = rtError.RTCodeError;\n\n/**\n * @param {string} code\n * @param node\n * @param {Context} context\n */\nfunction validateJS(code, node, context) {\n    try {\n        esprima.parse(code);\n    } catch (e) {\n        throw RTCodeError.build(context, node, e.description);\n    }\n}\n\n/**\n * @param {string} name\n * @return {string}\n */\nfunction normalizeName(name) {\n    return name.replace(/-/g, '_');\n}\n\n/**\n * @param {string} txt\n * @return {boolean}\n */\nfunction isStringOnlyCode(txt) {\n    return /^\\s*\\{.*}\\s*$/g.test(txt);\n    //txt = txt.trim();\n    //return txt.length && txt.charAt(0) === '{' && txt.charAt(txt.length - 1) === '}';\n}\n\n/**\n * @param {Array.<*>} array\n * @param {*} obj\n */\nfunction addIfMissing(array, obj) {\n    if (!_.includes(array, obj)) {\n        array.push(obj);\n    }\n}\n\n/**\n * @param {Array.<string>} children\n * @return {string}\n */\nfunction concatChildren(children) {\n    let res = '';\n    _.forEach(children, child => {\n        if (child && !_.startsWith(child, ' /*')) {\n            res += ',';\n        }\n        res += child;\n    });\n    return res;\n}\n\n/**\n * validate rt\n * @param options\n * @param {*} context\n * @param {CONTEXT} reportContext\n * @param node\n */\nfunction validate(options, context, reportContext, node) {\n    if (node.type === 'tag' && node.attribs['rt-if'] && !node.attribs.key) {\n        const loc = rtError.getNodeLoc(context, node);\n        reportContext.warn('rt-if without a key', options.fileName, loc.pos.line, loc.pos.col, loc.start, loc.end);\n    }\n    if (node.type === 'tag' && node.attribs['rt-require'] && (node.attribs.dependency || node.attribs.as)) {\n        const loc = rtError.getNodeLoc(context, node);\n        reportContext.warn(\"'rt-require' is obsolete, use 'rt-import' instead\", options.fileName, loc.pos.line, loc.pos.col, loc.start, loc.end);\n    }\n    if (node.children) {\n        node.children.forEach(validate.bind(this, options, context, reportContext));\n    }\n}\n\n/**\n * return true if any node in the given tree uses a scope name from the given set, false - otherwise.\n * @param scopeNames a set of scope names to find\n * @param node root of a syntax tree generated from an ExpressionStatement or one of its children.\n */\nfunction usesScopeName(scopeNames, node) {\n    function usesScope(root) {\n        return usesScopeName(scopeNames, root);\n    }\n    if (_.isEmpty(scopeNames)) {\n        return false;\n    }\n    // rt-if=\"x\"\n    if (node.type === 'Identifier') {\n        return _.includes(scopeNames, node.name);\n    }\n    // rt-if=\"e({key1: value1})\"\n    if (node.type === 'Property') {\n        return usesScope(node.value);\n    }\n    // rt-if=\"e.x\" or rt-if=\"e1[e2]\"\n    if (node.type === 'MemberExpression') {\n        return node.computed ? usesScope(node.object) || usesScope(node.property) : usesScope(node.object);\n    }\n    // rt-if=\"!e\"\n    if (node.type === 'UnaryExpression') {\n        return usesScope(node.argument);\n    }\n    // rt-if=\"e1 || e2\" or rt-if=\"e1 | e2\"\n    if (node.type === 'LogicalExpression' || node.type === 'BinaryExpression') {\n        return usesScope(node.left) || usesScope(node.right);\n    }\n    // rt-if=\"e1(e2, ... eN)\"\n    if (node.type === 'CallExpression') {\n        return usesScope(node.callee) || _.some(node.arguments, usesScope);\n    }\n    // rt-if=\"f({e1: e2})\"\n    if (node.type === 'ObjectExpression') {\n        return _.some(node.properties, usesScope);\n    }\n    // rt-if=\"e1[e2]\"\n    if (node.type === 'ArrayExpression') {\n        return _.some(node.elements, usesScope);\n    }\n    return false;\n}\n\n\n/**\n * @const\n */\nconst curlyMap = {'{': 1, '}': -1};\n\n/**\n * @typedef {{boundParams: Array.<string>, injectedFunctions: Array.<string>, html: string, options: *}} Context\n */\n\n/**\n * @typedef {{fileName:string,force:boolean,modules:string,defines:*,reactImportPath:string=,lodashImportPath:string=,flow:boolean,name:string,native:boolean,propTemplates:*,format:string,_:*,version:boolean,help:boolean,listTargetVersion:boolean,modules:string, dryRun:boolean}} Options\n */\n\n/**\n * @param node\n * @param {Context} context\n * @param {string} txt\n * @param {boolean} [normalizeWhitespaces]\n * @return {string}\n */\nfunction convertText(node, context, txt, normalizeWhitespaces) {\n    function jsonText(text) {\n        return JSON.stringify(normalizeWhitespaces ? normalizeHtmlWhitespace(text) : text);\n    }\n    let res = '';\n    let first = true;\n    const concatChar = node.type === 'text' ? ',' : '+';\n    while (_.includes(txt, '{')) {\n        const start = txt.indexOf('{');\n        const pre = txt.substr(0, start);\n        if (pre) {\n            res += (first ? '' : concatChar) + jsonText(pre);\n            first = false;\n        }\n        let curlyCounter = 1;\n        let end = start;\n        while (++end < txt.length && curlyCounter > 0) {\n            curlyCounter += curlyMap[txt.charAt(end)] || 0;\n        }\n        if (curlyCounter === 0) {\n            const needsParens = start !== 0 || end !== txt.length - 1;\n            res += (first ? '' : concatChar) + (needsParens ? '(' : '') + txt.substr(start + 1, end - start - 2) + (needsParens ? ')' : '');\n            first = false;\n            txt = txt.substr(end);\n        } else {\n            throw RTCodeError.build(context, node, `Failed to parse text '${txt}'`);\n        }\n    }\n    if (txt) {\n        res += (first ? '' : concatChar) + jsonText(txt);\n    }\n    if (res === '') {\n        res = 'true';\n    }\n    return res;\n}\n\n\nmodule.exports = {\n    usesScopeName,\n    normalizeName,\n    validateJS,\n    isStringOnlyCode,\n    concatChildren,\n    validate,\n    addIfMissing,\n    convertText\n};\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/src/fsUtil.js":"'use strict';\nconst fs = require('fs');\nconst path = require('path');\n\n/**\n * @param {string} source\n * @param {string} target\n * @return {boolean}\n */\nfunction isStale(source, target) {\n    if (!fs.existsSync(target)) {\n        return true;\n    }\n    const sourceTime = fs.statSync(source).mtime;\n    const targetTime = fs.statSync(target).mtime;\n    return sourceTime.getTime() > targetTime.getTime();\n}\n\nfunction createRelativeReadFileSync(baseFile) {\n    const basePath = path.dirname(baseFile);\n    return filename => fs.readFileSync(path.resolve(basePath, filename));\n}\n\nmodule.exports = {\n    isStale,\n    createRelativeReadFileSync\n};\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/src/context.js":"'use strict';\n/**\n * @typedef {{color: boolean, cwd: string, report: function(string), issue: function(string, string,string,number,number,number=,number=), warn: function(string), verbose: function(string), getMessages: function():Array.<MESSAGE>, options:Options, messages: Array.<MESSAGE>}} CONTEXT\n */\n/**\n * @typedef {{msg: string, level: MESSAGE_LEVEL, file: string,line:number,column:number,startOffset:number,endOffset:number}} MESSAGE\n */\n\n/**\n * Enum for tri-state values.\n * @enum {string}\n */\nconst MESSAGE_LEVEL = {\n    ERROR: 'ERROR',\n    WARN: 'WARN',\n    INFO: 'INFO'\n};\n\nconst _ = require('lodash');\nconst err = require('./RTCodeError');\nconst norm = err.RTCodeError.norm;\n\n\n/**\n * @type {CONTEXT}\n */\nconst context = {\n    /** @type {Array.<MESSAGE>} */\n    messages: [],\n    /** @type {boolean} */\n    color: true,\n    /** @type {string} */\n    cwd: process.cwd(),\n    report(msg) {\n        console.log(msg);\n    },\n    verbose(msg) {\n        if (context.options.verbose) {\n            console.log(msg);\n        }\n    },\n    info(msg, file, line, column) {\n        context.issue(MESSAGE_LEVEL.INFO, msg, file, line, column);\n    },\n    warn(msg, file, line, column, startOffset, endOffset) {\n        context.issue(MESSAGE_LEVEL.WARN, msg, file, line, column, startOffset, endOffset);\n    },\n    error(msg, file, line, column, startOffset, endOffset) {\n        context.issue(MESSAGE_LEVEL.ERROR, msg, file, line, column, startOffset, endOffset);\n    },\n    /**\n     * @param {MESSAGE_LEVEL} level\n     * @param {string} msg\n     * @param {string} file\n     * @param {number} line\n     * @param {number} column\n     * @param {number=} startOffset\n     * @param {number=} endOffset\n     */\n    issue(level, msg, file, line, column, startOffset, endOffset) {\n        context.messages.push({level, msg, file: file || null, line: norm(line), column: norm(column), index: norm(startOffset), startOffset: norm(startOffset), endOffset: norm(endOffset)});\n    },\n    getMessages() {\n        return context.messages;\n    },\n    clear() {\n        context.messages = [];\n    },\n    hasErrors() {\n        return _.some(context.messages, {level: MESSAGE_LEVEL.ERROR});\n    },\n    options: {\n        verbose: false,\n        outFile: null,\n        format: 'stylish'\n    },\n    MESSAGE_LEVEL\n};\n\nmodule.exports = context;\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/src/cli.js":"#!/usr/bin/env node\n'use strict';\nconst _ = require('lodash');\nconst path = require('path');\n// const fs = require('fs');\nconst api = require('./api');\nconst context = require('./context');\nconst shell = require('./shell');\nconst pkg = require('../package.json');\nconst options = require('./options');\nconst reactDOMSupport = require('./reactDOMSupport');\nconst reactTemplates = require('./reactTemplates');\nconst rtStyle = require('./rtStyle');\nconst glob = require('glob');\n\n/**\n * @param {Options} currentOptions\n * @return {number}\n */\nfunction executeOptions(currentOptions) {\n    let ret = 0;\n    const files = currentOptions._;\n    context.options.format = currentOptions.format || 'stylish';\n\n    if (currentOptions.version) {\n        console.log(`v${pkg.version}`);\n    } else if (currentOptions.help) {\n        if (files.length) {\n            console.log(options.generateHelpForOption(files[0]));\n        } else {\n            console.log(options.generateHelp());\n        }\n    } else if (currentOptions.listTargetVersion) {\n        printVersions(currentOptions);\n    } else if (files.length) {\n        // console.log(files);\n        // console.log(files.length);\n        // const allFiles = _.flatMap(files, f => {\n        //     const fp = path.resolve(context.cwd, f);\n        //     if (fs.statSync(fp).isDirectory()) {\n        //         // TODO: consider removing glob and simply walk the directory\n        //         return glob.sync(`${fp}/**/*.rt`, {cwd: context.cwd});\n        //     }\n        //     return fp;\n        // });\n        const allFiles = _.flatMap(files, f => glob.sync(f, {cwd: context.cwd}));\n        // console.log(allFiles.length);\n        _.forEach(allFiles, handleSingleFile.bind(this, currentOptions));\n        ret = shell.printResults(context);\n    } else {\n        console.log(options.generateHelp());\n    }\n    return ret;\n}\n\nfunction printVersions(currentOptions) {\n    const ret = Object.keys(reactDOMSupport);\n    if (currentOptions.format === 'json') {\n        console.log(JSON.stringify(ret, undefined, 2));\n    } else {\n        console.log(ret.join(', '));\n    }\n}\n\n/**\n * @param {Options} currentOptions\n * @param {string} filename file name to process\n */\nfunction handleSingleFile(currentOptions, filename) {\n    try {\n        const sourceExt = path.extname(filename);\n        let outputFilename;\n        if (sourceExt === '.rt') {\n            outputFilename = filename + (currentOptions.modules === 'typescript' ? '.ts' : '.js');\n        } else if (sourceExt === '.jsrt') {\n            outputFilename = filename.replace(/\\.jsrt$/, '.js');\n            currentOptions = _.assign({}, currentOptions, {modules: 'jsrt'});\n        } else if (sourceExt === '.rts') {\n            outputFilename = filename + '.js';\n            currentOptions = _.assign({}, currentOptions, {modules: 'rts'});\n        } else {\n            context.error('invalid file, only handle rt/jsrt files', filename);\n            return;\n        }\n        api.convertFile(filename, outputFilename, currentOptions, context);\n    } catch (e) {\n        context.error(e.message, filename, e.line, e.column, e.startOffset, e.endOffset);\n    }\n}\n\n/**\n * Executes the CLI based on an array of arguments that is passed in.\n * @param {string|Array|Object} args The arguments to process.\n * @returns {int} The exit code for the operation.\n */\nfunction execute(args) {\n    try {\n        const currentOptions = options.parse(args);\n        return executeOptions(currentOptions);\n    } catch (error) {\n        console.error(error.message);\n        return 1;\n    }\n}\n\nmodule.exports = {\n    context,\n    execute,\n    executeOptions,\n    handleSingleFile,\n    convertTemplateToReact: reactTemplates.convertTemplateToReact,\n    convertStyle: rtStyle.convert\n};\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/src/shell.js":"'use strict';\nconst _ = require('lodash');\n\n/**\n * @param {CONTEXT} context\n * @return {number}\n */\nfunction printResults(context) {\n    const warnings = context.getMessages();\n    const out = require(`./formatters/${context.options.format}`)(warnings);\n    context.report(out);\n    const grouped = _.groupBy(warnings, 'level');\n    return grouped.ERROR ? grouped.ERROR.length : 0;\n}\n\nmodule.exports = {printResults};\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/src/options.js":"/**\n * @fileoverview Options configuration for optionator.\n * @author idok\n */\n'use strict';\n\n//------------------------------------------------------------------------------\n// Requirements\n//------------------------------------------------------------------------------\n\nconst optionator = require('optionator');\nconst pkg = require('../package.json');\nconst reactDOMSupport = require('./reactDOMSupport');\nconst reactNativeSupport = require('./reactNativeSupport');\n\n//------------------------------------------------------------------------------\n// Initialization and Public Interface\n//------------------------------------------------------------------------------\n\n// exports 'parse(args)', 'generateHelp()', and 'generateHelpForOption(optionName)'\nmodule.exports = optionator({\n    prepend:\n`${pkg.name}  v${pkg.version}\n${pkg.description}\n\nUsage:\n$ rt <filename|glob> [<filename|glob> ...] [<args>]`,\n    concatRepeatedArrays: true,\n    mergeRepeatedObjects: true,\n    options: [{\n        heading: 'Options'\n    }, {\n        option: 'help',\n        alias: 'h',\n        type: 'Boolean',\n        description: 'Show help.'\n    }, {\n        option: 'color',\n        alias: 'c',\n        default: 'true',\n        type: 'Boolean',\n        description: 'Use colors in output.'\n    }, {\n        option: 'modules',\n        alias: 'm',\n        type: 'String',\n        enum: ['amd', 'commonjs', 'none', 'es6', 'typescript', 'jsrt'],\n        description: 'Use output modules. (amd|commonjs|none|es6|typescript|jsrt)'\n    }, {\n        option: 'name',\n        alias: 'n',\n        type: 'String',\n        description: 'When using globals, the name for the variable. The default is the [file name]RT, when using amd, the name of the module'\n    }, {\n        option: 'dry-run',\n        alias: 'd',\n        default: 'false',\n        type: 'Boolean',\n        description: 'Run compilation without creating an output file, used to check if the file is valid'\n    }, {\n        option: 'force',\n        alias: 'r',\n        default: 'false',\n        type: 'Boolean',\n        description: 'Force creation of output. skip file check.'\n    }, {\n        option: 'format',\n        alias: 'f',\n        type: 'String',\n        default: 'stylish',\n        //enum: ['stylish', 'json'],\n        description: 'Use a specific output format. (stylish|json)'\n    }, {\n        option: 'target-version',\n        alias: 't',\n        type: 'String',\n        default: reactDOMSupport.default,\n        description: `'React version to generate code for (${Object.keys(reactDOMSupport).join(', ')})'`\n    }, {\n        option: 'list-target-version',\n        type: 'Boolean',\n        default: 'false',\n        description: 'Show list of target versions'\n    }, {\n        option: 'version',\n        alias: 'v',\n        type: 'Boolean',\n        description: 'Outputs the version number.'\n    }, {\n        option: 'stack',\n        alias: 'k',\n        type: 'Boolean',\n        description: 'Show stack trace on errors.'\n    }, {\n        option: 'react-import-path',\n        type: 'String',\n        description: 'Dependency path for importing React.'\n    }, {\n        option: 'lodash-import-path',\n        default: 'lodash',\n        type: 'String',\n        description: 'Dependency path for importing lodash.'\n    }, {\n        option: 'native',\n        alias: 'rn',\n        type: 'Boolean',\n        description: 'Renders react native templates.'\n    }, {\n        option: 'flow',\n        type: 'Boolean',\n        description: 'Add /* @flow */ to the top of the generated file'\n    }, {\n        option: 'native-target-version',\n        alias: 'rnv',\n        type: 'String',\n        enum: Object.keys(reactNativeSupport),\n        default: reactNativeSupport.default,\n        description: `React native version to generate code for (${Object.keys(reactNativeSupport).join(', ')})`\n    }, {\n        option: 'normalize-html-whitespace',\n        type: 'Boolean',\n        default: 'false',\n        description: 'Remove repeating whitespace from HTML text.'\n    }]\n});\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/src/rtStyle.js":"'use strict';\nconst css = require('css');\nconst _ = require('lodash');\nconst rtnData = require('./rt-style-support-data.js');\n\n\nconst templateCommonJSTemplate = _.template(\n`'use strict';\nvar style = <%= body %>;\nmodule.exports = style;\n`);\n\nfunction convert(text) {\n    return templateCommonJSTemplate({body: convertBody(text)});\n}\n\nfunction convertBody(text) {\n    //source\n    const obj = css.parse(text, {silent: false});\n    const result = _.reduce(obj.stylesheet.rules, processRule2, {});\n    return JSON.stringify(result, undefined, 2);\n}\n\nfunction processRule2(result, rule) {\n    const name = rule.selectors[0].substring(1);\n    result[name] = _.reduce(rule.declarations, processDeclaration, {});\n    return result;\n}\n\nfunction processDeclaration(result, dec) {\n    const prop = _.camelCase(dec.property);\n    result[prop] = convertValue(prop, dec.value);\n    return result;\n}\n\nfunction convertValue(p, v) {\n    if (rtnData[p] === 'string') {\n        return v;\n    }\n    // TODO remove units\n    return parseInt(v.match(/(\\d+)/g)[0], 10);\n}\n\nmodule.exports = {\n    convert,\n    convertBody\n};\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/src/rt-style-support-data.js":"'use strict';\nconst map = {\n    /*flex*/\n    alignItems: 'string', //  \"enum('flex-start', 'flex-end', 'center', 'stretch')\",\n    alignSelf: 'string', //  \"enum('auto', 'flex-start', 'flex-end', 'center', 'stretch')\",\n    borderBottomWidth: 'number',\n    borderLeftWidth: 'number',\n    borderRightWidth: 'number',\n    borderTopWidth: 'number',\n    borderWidth: 'number',\n    bottom: 'number',\n    flex: 'number',\n    flexDirection: 'string', // enum('row', 'column')\n    flexWrap: 'string', //  enum('wrap', 'nowrap')\n    height: 'number',\n    justifyContent: 'string', //  enum('flex-start', 'flex-end', 'center', 'space-between', 'space-around')\n    left: 'number',\n    margin: 'number',\n    marginBottom: 'number',\n    marginHorizontal: 'number',\n    marginLeft: 'number',\n    marginRight: 'number',\n    marginTop: 'number',\n    marginVertical: 'number',\n    padding: 'number',\n    paddingBottom: 'number',\n    paddingHorizontal: 'number',\n    paddingLeft: 'number',\n    paddingRight: 'number',\n    paddingTop: 'number',\n    paddingVertical: 'number',\n    position: 'string', //  enum('absolute', 'relative')\n    right: 'number',\n    top: 'number',\n    width: 'number',\n\n    /*image*/\n    resizeMode: 'string', // Object.keys(ImageResizeMode)\n    backgroundColor: 'string',\n    borderColor: 'string',\n    borderRadius: 'number',\n    overflow: 'string', // enum('visible', 'hidden')\n    tintColor: 'string',\n    opacity: 'number'\n};\n\nmodule.exports = map;\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/src/Context2.js":"'use strict';\n\nconst _ = require('lodash');\nconst packagesUtils = require('./packagesUtils');\n\n/**\n * Enum for tri-state values.\n * @enum {string}\n */\nconst MESSAGE_LEVEL = {\n    ERROR: 'ERROR',\n    WARN: 'WARN',\n    INFO: 'INFO'\n};\n\nclass Context2 {\n    constructor() {\n        this.messages = [];\n        this.color = true;\n        this.cwd = process.cwd();\n        this.packagesDir = packagesUtils.defaults.packagesDir;\n        this.sourceMain = packagesUtils.defaults.sourceMain;\n        this.testMain = packagesUtils.defaults.testMain;\n        this.testMainTemplate = packagesUtils.defaults.testMainTemplate;\n        this.rjsMainTemplate = packagesUtils.defaults.rjsMainTemplate;\n        this.rjsMainMin = packagesUtils.defaults.rjsMainMin;\n    }\n\n    report(msg) {\n        console.log(msg);\n    }\n\n    verbose(message) {\n        if (this.options.verbose) {\n            this.report(message);\n        }\n    }\n    info(msg, file, line, column) {\n        this.issue(MESSAGE_LEVEL.INFO, msg, file, line, column);\n    }\n    warn(msg, file, line, column) {\n        this.issue(MESSAGE_LEVEL.WARN, msg, file, line, column);\n    }\n    error(msg, file, line, column) {\n        this.issue(MESSAGE_LEVEL.ERROR, msg, file, line, column);\n    }\n\n    issue(level, msg, file, line, column) {\n        this.messages.push({level, msg, file: file || null, line: line || -1, column: column || -1});\n    }\n\n    getMessages() {\n        return this.messages;\n    }\n\n    clear() {\n        this.messages = [];\n    }\n\n    hasErrors() {\n        return _.some(this.messages, {level: MESSAGE_LEVEL.ERROR});\n    }\n\n    getPackagesRoot() {\n        return packagesUtils.getPackagesRoot(this.cwd, this.packagesDir);\n    }\n\n    getPackageMain(packageName) {\n        return packagesUtils.getPackageMain(this.cwd, packageName, this.packagesDir, this.sourceMain);\n    }\n\n    getPackageMainEntry(packageName) {\n        return packagesUtils.getPackageMainEntry(this.cwd, packageName, this.packagesDir, this.sourceMain);\n    }\n}\n\nmodule.exports = Context2;\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/src/rt-style-support.js":"'use strict';\n//var _ = require('lodash');\n//var React = require('react-native');\nconst ReactText = require('../node_modules/react-native/Libraries/Text/TextStylePropTypes');\n\nfunction convert() {\n    const out = ReactText;\n    console.log(out);\n}\n\nconvert();\n\nmodule.exports = {convert};\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground3/conf/loadersByExtension.js":"function extsToRegExp(exts) {\n    return new RegExp(\"\\\\.(\" + exts.map(function (ext) {\n            return ext.replace(/\\./g, \"\\\\.\");\n        }).join(\"|\") + \")(\\\\?.*)?$\");\n}\n\nmodule.exports = function loadersByExtension(obj) {\n    var loaders = [];\n    Object.keys(obj).forEach(function (key) {\n        var exts = key.split(\"|\");\n        var value = obj[key];\n        var entry = {\n            extensions: exts,\n            test: extsToRegExp(exts)\n        };\n        if (Array.isArray(value)) {\n            entry.loaders = value;\n        } else if (typeof value === \"string\") {\n            entry.loader = value;\n        } else {\n            Object.keys(value).forEach(function (valueKey) {\n                entry[valueKey] = value[valueKey];\n            });\n        }\n        loaders.push(entry);\n    });\n    return loaders;\n};","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground3/conf/webpack-make-config2.js":"var path = require('path');\nvar webpack = require('webpack');\nvar ExtractTextPlugin = require('extract-text-webpack-plugin');\nvar StatsPlugin = require('stats-webpack-plugin');\nvar loadersByExtension = require('./config/loadersByExtension');\n\nmodule.exports = function(options) {\n    var entry = {\n        main: options.prerender ? './config/mainPrerenderer' : './config/mainApp'\n        // second: options.prerender ? './config/secondPrerenderer' : './config/secondApp'\n    };\n    var loaders = {\n        'jsx': options.hotComponents ? ['react-hot-loader', 'babel-loader?stage=0'] : 'babel-loader?stage=0',\n        'js': {\n            loader: 'babel-loader?stage=0',\n            include: path.join(__dirname, 'app')\n        },\n        'json': 'json-loader',\n        'coffee': 'coffee-redux-loader',\n        'json5': 'json5-loader',\n        'txt': 'raw-loader',\n        'png|jpg|jpeg|gif|svg': 'url-loader?limit=10000',\n        'woff|woff2': 'url-loader?limit=100000',\n        'ttf|eot': 'file-loader',\n        'wav|mp3': 'file-loader',\n        'html': 'html-loader',\n        'md|markdown': ['html-loader', 'markdown-loader']\n    };\n    var cssLoader = options.minimize ? 'css-loader?module' : 'css-loader?module&localIdentName=[path][name]---[local]---[hash:base64:5]';\n    var stylesheetLoaders = {\n        'css': cssLoader,\n        'less': [cssLoader, 'less-loader'],\n        'styl': [cssLoader, 'stylus-loader'],\n        'scss|sass': [cssLoader, 'sass-loader']\n    };\n    var additionalLoaders = [\n        // { test: /some-reg-exp$/, loader: 'any-loader' }\n    ];\n    var alias = {\n\n    };\n    var aliasLoader = {\n\n    };\n    var externals = [\n\n    ];\n    var modulesDirectories = ['web_modules', 'node_modules'];\n    var extensions = ['', '.web.js', '.js', '.jsx'];\n    var root = path.join(__dirname, 'app');\n    var publicPath = options.devServer ?\n        'http://localhost:2992/_assets/' :\n        '/_assets/';\n    var output = {\n        path: path.join(__dirname, 'build', options.prerender ? 'prerender' : 'public'),\n        publicPath: publicPath,\n        filename: '[name].js' + (options.longTermCaching && !options.prerender ? '?[chunkhash]' : ''),\n        chunkFilename: (options.devServer ? '[id].js' : '[name].js') + (options.longTermCaching && !options.prerender ? '?[chunkhash]' : ''),\n        sourceMapFilename: 'debugging/[file].map',\n        libraryTarget: options.prerender ? 'commonjs2' : undefined,\n        pathinfo: options.debug || options.prerender\n    };\n    var excludeFromStats = [\n        /node_modules[\\\\\\/]react(-router)?[\\\\\\/]/,\n        /node_modules[\\\\\\/]items-store[\\\\\\/]/\n    ];\n    var plugins = [\n        new webpack.PrefetchPlugin('react'),\n        new webpack.PrefetchPlugin('react/lib/ReactComponentBrowserEnvironment')\n    ];\n    if(options.prerender) {\n        plugins.push(new StatsPlugin(path.join(__dirname, 'build', 'stats.prerender.json'), {\n            chunkModules: true,\n            exclude: excludeFromStats\n        }));\n        aliasLoader['react-proxy$'] = 'react-proxy/unavailable';\n        aliasLoader['react-proxy-loader$'] = 'react-proxy-loader/unavailable';\n        externals.push(\n            /^react(\\/.*)?$/,\n            /^reflux(\\/.*)?$/,\n            'superagent',\n            'async'\n        );\n        plugins.push(new webpack.optimize.LimitChunkCountPlugin({ maxChunks: 1 }));\n    } else {\n        plugins.push(new StatsPlugin(path.join(__dirname, 'build', 'stats.json'), {\n            chunkModules: true,\n            exclude: excludeFromStats\n        }));\n    }\n    if(options.commonsChunk) {\n        plugins.push(new webpack.optimize.CommonsChunkPlugin('commons', 'commons.js' + (options.longTermCaching && !options.prerender ? '?[chunkhash]' : '')));\n    }\n    var asyncLoader = {\n        test: require('./app/route-handlers/async').map(function(name) {\n            return path.join(__dirname, 'app', 'route-handlers', name);\n        }),\n        loader: options.prerender ? 'react-proxy-loader/unavailable' : 'react-proxy-loader'\n    };\n\n\n\n    Object.keys(stylesheetLoaders).forEach(function(ext) {\n        var stylesheetLoader = stylesheetLoaders[ext];\n        if(Array.isArray(stylesheetLoader)) stylesheetLoader = stylesheetLoader.join('!');\n        if(options.prerender) {\n            stylesheetLoaders[ext] = stylesheetLoader.replace(/^css-loader/, 'css-loader/locals');\n        } else if(options.separateStylesheet) {\n            stylesheetLoaders[ext] = ExtractTextPlugin.extract('style-loader', stylesheetLoader);\n        } else {\n            stylesheetLoaders[ext] = 'style-loader!' + stylesheetLoader;\n        }\n    });\n    if(options.separateStylesheet && !options.prerender) {\n        plugins.push(new ExtractTextPlugin('[name].css' + (options.longTermCaching ? '?[contenthash]' : '')));\n    }\n    if(options.minimize && !options.prerender) {\n        plugins.push(\n            new webpack.optimize.UglifyJsPlugin({\n                compressor: {\n                    warnings: false\n                }\n            }),\n            new webpack.optimize.DedupePlugin()\n        );\n    }\n    if(options.minimize) {\n        plugins.push(\n            new webpack.DefinePlugin({\n                'process.env': {\n                    NODE_ENV: JSON.stringify('production')\n                }\n            }),\n            new webpack.NoErrorsPlugin()\n        );\n    }\n\n    return {\n        entry: entry,\n        output: output,\n        target: options.prerender ? 'node' : 'web',\n        module: {\n            loaders: [asyncLoader].concat(loadersByExtension(loaders)).concat(loadersByExtension(stylesheetLoaders)).concat(additionalLoaders)\n        },\n        devtool: options.devtool,\n        debug: options.debug,\n        resolveLoader: {\n            root: path.join(__dirname, 'node_modules'),\n            alias: aliasLoader\n        },\n        externals: externals,\n        resolve: {\n            root: root,\n            modulesDirectories: modulesDirectories,\n            extensions: extensions,\n            alias: alias\n        },\n        plugins: plugins,\n        devServer: {\n            stats: {\n                cached: false,\n                exclude: excludeFromStats\n            }\n        }\n    };\n};","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground3/samples/hello.rt.js":"define([\n    'react/addons',\n    'lodash'\n], function (React, _) {\n    'use strict';\n    return function () {\n        return React.createElement('h2', {}, 'Hello world');\n    };\n});","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground3/samples/rt-if.rt.js":"define([\n    'react/addons',\n    'lodash'\n], function (React, _) {\n    'use strict';\n    function onClick1() {\n        this.toggle();\n    }\n    return function () {\n        return React.createElement('div', {}, React.createElement('h4', {\n            'style': { cursor: 'pointer' },\n            'onClick': onClick1.bind(this)\n        }, '\\n        Click to ', this.state.open ? 'close' : 'open', '\\n    '), this.state.open ? React.createElement('p', {}, 'This is my paragraph. It opens and\\n                               closes') : null);\n    };\n});","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground3/samples/rt-props.rt.js":"define([\n    'react/addons',\n    'lodash'\n], function (React, _) {\n    'use strict';\n    function mergeProps(inline, external) {\n        var res = _.assign({}, inline, external);\n        if (inline.hasOwnProperty('style')) {\n            res.style = _.defaults(res.style, inline.style);\n        }\n        if (inline.hasOwnProperty('className') && external.hasOwnProperty('className')) {\n            res.className = external.className + ' ' + inline.className;\n        }\n        return res;\n    }\n    return function () {\n        return React.createElement('div', {}, '\\n    Style:\\n    ', React.createElement('select', { 'valueLink': this.linkState('key') }, React.createElement('option', { 'value': 'color' }, 'Color'), React.createElement('option', { 'value': 'backgroundColor' }, 'Background color'), React.createElement('option', { 'value': 'borderColor' }, 'Border color')), React.createElement('br', {}), '\\n    Value:\\n    ', React.createElement('select', { 'valueLink': this.linkState('val') }, React.createElement('option', { 'value': 'blue' }, 'Blue'), React.createElement('option', { 'value': 'red' }, 'Red'), React.createElement('option', { 'value': 'yellow' }, 'Yellow')), React.createElement('br', {}), React.createElement('br', {}), React.createElement('div', mergeProps({\n            'style': {\n                padding: '5px',\n                textAlign: 'center',\n                border: '1px solid'\n            }\n        }, this.getProps()), 'Sample'));\n    };\n});","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground3/samples/rt-repeat.rt.js":"define([\n    'react/addons',\n    'lodash'\n], function (React, _) {\n    'use strict';\n    function repeatItem1(item, itemIndex) {\n        return React.createElement('li', {}, item);\n    }\n    return function () {\n        return React.createElement('div', {}, React.createElement.apply(this, [\n            'ul',\n            {},\n            _.map(this.state.items, repeatItem1.bind(this))\n        ]));\n    };\n});","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground3/samples/rt-require.rt.js":"define([\n    'react/addons',\n    'lodash',\n    'comps/myComp',\n    'utils/utils'\n], function (React, _, myComp, utils) {\n    'use strict';\n    return function () {\n        return React.createElement('div', {}, React.createElement(myComp, { 'customProp': utils.doSomething() }, 'myComp is just a regular tag'));\n    };\n});","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground3/samples/todo2.rt.js":"define([\n    'react/addons',\n    'lodash'\n], function (React, _) {\n    'use strict';\n    function onClick1(todo, todoIndex) {\n        this.remove(todo);\n    }\n    function onChange2(todo, todoIndex) {\n        this.toggleChecked(todoIndex);\n    }\n    function repeatTodo3(todo, todoIndex) {\n        return React.createElement('div', { 'key': todo.key }, React.createElement('button', { 'onClick': onClick1.bind(this, todo, todoIndex) }, 'x'), React.createElement('input', {\n            'type': 'checkbox',\n            'checked': todo.done,\n            'onChange': onChange2.bind(this, todo, todoIndex)\n        }), React.createElement('span', { 'style': { textDecoration: todo.done ? 'line-through' : 'none' } }, todo.value));\n    }\n    function onKeyDown4(e) {\n        if (e.keyCode == 13) {\n            e.preventDefault();\n            this.add();\n        }\n    }\n    function onClick5() {\n        this.add();\n    }\n    function onClick6() {\n        this.clearDone();\n    }\n    return function () {\n        return React.createElement.apply(this, [\n            'div',\n            {},\n            '\\n    Have ',\n            _.filter(this.state.todos, { done: true }).length,\n            ' todos done,\\n    and ',\n            _.filter(this.state.todos, { done: false }).length,\n            ' not done\\n    ',\n            React.createElement('br', {}),\n            _.map(this.state.todos, repeatTodo3.bind(this)),\n            React.createElement('input', {\n                'key': 'myinput',\n                'type': 'text',\n                'onKeyDown': onKeyDown4.bind(this),\n                'valueLink': this.linkState('edited')\n            }),\n            React.createElement('button', { 'onClick': onClick5.bind(this) }, 'Add'),\n            React.createElement('br', {}),\n            React.createElement('button', { 'onClick': onClick6.bind(this) }, 'Clear done')\n        ]);\n    };\n});","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground3/samples/todo.rt.js":"define([\n    'react/addons',\n    'lodash'\n], function (React, _) {\n    'use strict';\n    function onClick1(todo, todoIndex) {\n        this.remove(todo);\n    }\n    function onChange2(todo, todoIndex) {\n        this.toggleChecked(todoIndex);\n    }\n    function repeatTodo3(todo, todoIndex) {\n        return React.createElement('div', { 'key': todo.key }, React.createElement('img', {\n            'src': 'img/samples/delete.png',\n            'onClick': onClick1.bind(this, todo, todoIndex),\n            'title': 'Remove Todo',\n            'style': { cursor: 'pointer' }\n        }), React.createElement('input', {\n            'type': 'checkbox',\n            'checked': todo.done,\n            'onChange': onChange2.bind(this, todo, todoIndex)\n        }), React.createElement('span', { 'style': { textDecoration: todo.done ? 'line-through' : 'none' } }, todo.value));\n    }\n    function onKeyDown4(e) {\n        if (e.keyCode == 13) {\n            e.preventDefault();\n            this.add();\n        }\n    }\n    function onClick5() {\n        this.add();\n    }\n    function onClick6() {\n        this.clearDone();\n    }\n    return function () {\n        return React.createElement.apply(this, [\n            'div',\n            {},\n            React.createElement('strong', {}, this.getDone().length),\n            '\\n    done,\\n    ',\n            React.createElement('strong', {}, this.getPending().length),\n            '\\n    pending\\n    ',\n            React.createElement('br', {}),\n            _.map(this.state.todos, repeatTodo3.bind(this)),\n            React.createElement('input', {\n                'key': 'myinput',\n                'style': { width: '130px' },\n                'type': 'text',\n                'onKeyDown': onKeyDown4.bind(this),\n                'valueLink': this.linkState('edited')\n            }),\n            React.createElement('button', { 'onClick': onClick5.bind(this) }, 'Add'),\n            React.createElement('br', {}),\n            React.createElement('button', { 'onClick': onClick6.bind(this) }, 'Clear done')\n        ]);\n    };\n});","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground3/samples/weather.rt.js":"define([\n    'react/addons',\n    'lodash'\n], function (React, _) {\n    'use strict';\n    function onKeyDown1(e) {\n        if (e.keyCode === 13) {\n            e.preventDefault();\n            this.addCity();\n        }\n    }\n    function repeatWeather2(city, cityIndex, weather, weatherIndex) {\n        return React.createElement('img', {\n            'src': 'http://openweathermap.org/img/w/' + weather.icon + '.png',\n            'title': weather.description\n        });\n    }\n    function repeatCity3(city, cityIndex) {\n        return React.createElement.apply(this, [\n            'div',\n            { 'key': city.id },\n            '\\n        ',\n            cityIndex + 1,\n            ')\\n        ',\n            _.map(city.weather, repeatWeather2.bind(this, city, cityIndex)),\n            React.createElement('span', { 'style': { whiteSpace: 'nowrap' } }, city.name, ', ', city.sys.country)\n        ]);\n    }\n    return function () {\n        return React.createElement.apply(this, [\n            'div',\n            {},\n            React.createElement('h4', {}, 'Cities weather report'),\n            React.createElement('input', {\n                'placeholder': 'Type a city to add',\n                'style': { width: '130px' },\n                'valueLink': this.linkState('cityToAdd'),\n                'onKeyDown': onKeyDown1.bind(this)\n            }),\n            React.createElement('button', { 'onClick': this.addCity }, 'Add'),\n            this.state.loading ? React.createElement('div', { 'key': 'preloader' }, '\\n        -- Loading --\\n    ') : null,\n            _.map(this.state.info, repeatCity3.bind(this)),\n            React.createElement('button', { 'onClick': this.refresh }, 'Refresh')\n        ]);\n    };\n});","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground3/src/aceEditor.js":"/*global ace:true*/\ndefine(['react', 'lodash']/*, 'ace'*/, function (React, _/*, ace*/) {\n    'use strict'\n    return React.createClass({\n        displayName: 'BraceEditor',\n        propTypes: {\n            id: React.PropTypes.string,\n            mode: React.PropTypes.string,\n            readOnly: React.PropTypes.bool,\n            value: React.PropTypes.string,\n            valueLink: React.PropTypes.string,\n            onChange: React.PropTypes.function\n        },\n        getInitialState() {\n            return {\n                editorId: _.uniqueId()\n            }\n        },\n        componentWillMount() {\n        },\n        render() {\n            const props = _.omit(this.props, ['ref', 'key', 'value', 'valueLink', 'onChange'])\n            props.id = this.props.id || this.state.editorId\n            return React.DOM.div(props)\n        },\n        componentWillUpdate(nextProps/*, nextState*/) {\n            const value = nextProps.valueLink ? nextProps.valueLink() : nextProps.value\n            if (this.editor && this.editor.getValue() !== value) {\n                this.editor.setValue(value, 0)\n            }\n        },\n        componentDidMount() {\n            this.editor = ace.edit(this.props.id || this.state.editorId)\n//        this.editor.setTheme('ace/theme/monokai');\n            this.editor.setTheme('ace/theme/solarized_light')\n            if (this.props.mode !== 'html') {\n                this.editor.getSession().setMode('ace/mode/javascript')\n            } else {\n                this.editor.getSession().setMode('ace/mode/html')\n            }\n            this.editor.getSession().setUseWorker(false)\n\n            const value = this.props.valueLink ? this.props.valueLink() : this.props.value\n            this.editor.setValue(value, 0)\n            if (this.props.readOnly) {\n                this.editor.setReadOnly(true)\n            } else {\n                this.editor.setReadOnly(false)\n                this.editor.on('change', function (/*e*/) {\n                    if (this.props.valueLink) {\n                        this.props.valueLink(this.editor.getValue())\n                    } else if (this.props.onChange) {\n                        this.props.onChange({target: {value: this.editor.getValue()}})\n                    }\n                }.bind(this))\n            }\n            this.editor.clearSelection()\n        },\n        componentWillUnmount() {\n            this.editor.destroy()\n        }\n    })\n})","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground3/src/CMLint.js":"define(['react', 'lodash', 'jquery', '../libs/codemirror-4.8/lib/codemirror'], function (React, _, $, CodeMirror) {\n    'use strict'\n\n    function annotationTooltip(ann) {\n        let severity = ann.severity\n        if (!severity) {\n            severity = 'error'\n        }\n        const tip = document.createElement('div')\n        tip.className = 'CodeMirror-lint-message-' + severity\n        tip.appendChild(document.createTextNode(ann.message))\n        return tip\n    }\n\n    const GUTTER_ID = 'rt-annotations'\n\n    function annotate(editor, annot) {\n        //if (annot.index) {\n        //    //posFromIndex\n        //    var pos = editor.findPosH({line: 0, ch: 0}, 25, 'char');\n        //    var range = editor.findWordAt(pos);\n        //    editor.markText(range.anchor,  range.head, {className: 'editor-error'});\n        //}\n        const tipLabel = document.createDocumentFragment() /*state.hasGutter &&*/\n        const ann = {severity: 'error', message: annot.message}\n        tipLabel.appendChild(annotationTooltip(ann))\n        editor.setGutterMarker(Math.max(annot.line, 0), GUTTER_ID, makeMarker(tipLabel, 'error', false, 'state.options.tooltips'))\n    }\n\n    function clearMarks(cm) {\n        //var state = cm.state.lint;\n        //if (state.hasGutter) cm.clearGutter(GUTTER_ID);\n        //for (var i = 0; i < state.marked.length; ++i)\n        //    state.marked[i].clear();\n        //state.marked.length = 0;\n        cm.clearGutter(GUTTER_ID)\n    }\n\n    function makeMarker(labels, severity, multiple, tooltips) {\n        let marker = document.createElement('div'), inner = marker\n        marker.className = 'CodeMirror-lint-marker-' + severity\n        if (multiple) {\n            inner = marker.appendChild(document.createElement('div'))\n            inner.className = 'CodeMirror-lint-marker-multiple'\n        }\n        if (tooltips !== false) {\n            CodeMirror.on(inner, 'mouseover', function (e) {\n                showTooltipFor(e, labels, inner)\n            })\n        }\n        return marker\n    }\n\n    function showTooltip(e, content) {\n        const tt = document.createElement('div')\n        tt.className = 'CodeMirror-lint-tooltip'\n        tt.appendChild(content.cloneNode(true))\n        document.body.appendChild(tt)\n\n        function position(ev) {\n            if (!tt.parentNode) {\n                return CodeMirror.off(document, 'mousemove', position)\n            }\n            tt.style.top = Math.max(0, ev.clientY - tt.offsetHeight - 5) + 'px'\n            tt.style.left = ev.clientX + 5 + 'px'\n        }\n        CodeMirror.on(document, 'mousemove', position)\n        position(e)\n        if (tt.style.opacity !== null) {\n            tt.style.opacity = 1\n        }\n        return tt\n    }\n    function rm(elt) {\n        if (elt.parentNode) {\n            elt.parentNode.removeChild(elt)\n        }\n    }\n    function hideTooltip(tt) {\n        if (!tt.parentNode) {\n            return\n        }\n        if (tt.style.opacity === null) {\n            rm(tt)\n        }\n        tt.style.opacity = 0\n        setTimeout(function () { rm(tt) }, 600)\n    }\n\n    function showTooltipFor(e, content, node) {\n        let tooltip = showTooltip(e, content)\n        function hide() {\n            CodeMirror.off(node, 'mouseout', hide)\n            if (tooltip) { hideTooltip(tooltip); tooltip = null }\n        }\n        const poll = setInterval(function () {\n            if (tooltip) {\n                for (let n = node; ; n = n.parentNode) {\n                    if (n === document.body) {\n                        return undefined\n                    }\n                    if (!n) { hide(); break }\n                }\n            }\n            if (!tooltip) {\n                return clearInterval(poll)\n            }\n        }, 400)\n        CodeMirror.on(node, 'mouseout', hide)\n    }\n\n    return {\n        GUTTER_ID,\n        annotate,\n        clearMarks\n    }\n})","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground3/src/CodeMirrorEditor.js":"define(['react', 'react-dom', 'lodash', 'jquery', '../libs/codemirror-4.8/lib/codemirror',\n        './CMLint'\n        //'./libs/codemirror-4.8/mode/javascript/javascript',\n        //'./libs/codemirror-4.8/addon/hint/html-hint',\n        //'./libs/codemirror-4.8/addon/hint/show-hint',\n        //'./libs/codemirror-4.8/addon/hint/xml-hint',\n        //'./libs/codemirror-4.8/addon/hint/html-hint',\n        ////'./libs/codemirror-4.8/addon/display/panel',\n        //'./libs/codemirror-4.8/mode/xml/xml',\n        ////'./libs/codemirror-4.8/mode/css/css',\n        //'./libs/codemirror-4.8/addon/runmode/runmode'\n        //'./libs/codemirror-4.8/addon/display/placeholder'\n], function (React, ReactDOM, _, $, CodeMirror, CMLint) {\n    'use strict'\n    //codeMirror: 'libs/codemirror-4.8/lib/codemirror',\n    //htmlmixed: 'libs/codemirror-4.8/mode/htmlmixed/htmlmixed',\n    //javascript: 'libs/codemirror-4.8/mode/javascript/javascript'\n\n    const rtSchema = {\n        div: {\n            attrs: {\n                'rt-props': null,\n                'rt-if': null,\n                'rt-repeat': null,\n                'rt-class': null,\n                'rt-scope': null,\n                valueLink: null,\n                key: null,\n                ref: null,\n                dangerouslySetInnerHTML: null\n            }\n        }\n    }\n    const tags = CodeMirror.htmlSchema\n    Object.keys(CodeMirror.htmlSchema).forEach(function (i) {\n        tags[i].attrs = _.defaults(rtSchema.div.attrs, tags[i].attrs)\n    })\n\n    function completeAfter(cm, pred) {\n        //var cur = cm.getCursor();\n        if (!pred || pred()) {\n            setTimeout(function () {\n                if (!cm.state.completionActive) {\n                    cm.showHint({completeSingle: false})\n                }\n            }, 100)\n        }\n        return CodeMirror.Pass\n    }\n\n    function completeIfAfterLt(cm) {\n        return completeAfter(cm, function () {\n            const cur = cm.getCursor()\n            return cm.getRange(CodeMirror.Pos(cur.line, cur.ch - 1), cur) === '<' //eslint-disable-line new-cap\n        })\n    }\n\n    function completeIfInTag(cm) {\n        return completeAfter(cm, function () {\n            const tok = cm.getTokenAt(cm.getCursor())\n            if (tok.type === 'string' && (!/['\"]/.test(tok.string.charAt(tok.string.length - 1)) || tok.string.length === 1)) {\n                return false\n            }\n            const inner = CodeMirror.innerMode(cm.getMode(), tok.state).state\n            return inner.tagName\n        })\n    }\n\n    return React.createClass({\n        displayName: 'CodeMirrorEditor',\n        propTypes: {\n            id: React.PropTypes.string,\n            readOnly: React.PropTypes.bool,\n            runMode: React.PropTypes.bool,\n            mode: React.PropTypes.string,\n            value: React.PropTypes.string,\n            valueLink: React.PropTypes.string,\n            onChange: React.PropTypes.func\n        },\n        getDefaultProps() {\n            return {\n                readOnly: false,\n                mode: 'html'\n            }\n        },\n        getInitialState() {\n            return {\n                editorId: _.uniqueId()\n            }\n        },\n        //componentWillMount: function () {\n        //},\n        render() {\n            const props = _.omit(this.props, ['ref', 'key', 'value', 'valueLink', 'onChange'])\n            props.id = this.props.id || this.state.editorId\n            props.defaultValue = this.props.valueLink ? this.props.valueLink() : this.props.value\n            return React.DOM.textarea(props)\n        },\n        componentWillUpdate(nextProps/*, nextState*/) {\n            const value = nextProps.valueLink ? nextProps.valueLink() : nextProps.value\n            if (this.editor && this.editor.getValue() !== value) {\n                this.editor.setValue(value || '')\n            }\n        },\n        componentDidMount() {\n            const value = this.props.valueLink ? this.props.valueLink() : this.props.value\n            const options = {\n                readOnly: this.props.readOnly,\n                lineWrapping: true,\n                smartIndent: true,\n                matchBrackets: true,\n                value,\n                lineNumbers: true,\n                mode: 'javascript',\n                gutters: ['CodeMirror-linenumbers', 'rt-annotations'],\n                theme: 'solarized' //solarized_light solarized-light\n            }\n\n            if (this.props.mode === 'html') {\n                options.mode = 'text/html'\n                options.extraKeys = {\n                    '\\'<\\'': completeAfter,\n                    '\\'/\\'': completeIfAfterLt,\n                    '\\' \\'': completeIfInTag,\n                    '\\'=\\'': completeIfInTag,\n                    'Ctrl-Space': 'autocomplete'\n                }\n                options.hintOptions = {schemaInfo: tags}\n                //options.gutters = ['CodeMirror-lint-markers'];\n                //options.lint = true;\n            } else {\n                options.mode = 'javascript'\n                //options.gutters = ['CodeMirror-lint-markers'];\n                //options.lint = true;\n            }\n\n            this.editor = CodeMirror.fromTextArea(ReactDOM.findDOMNode(this), options)\n\n            if (!this.props.readOnly) {\n                this.editor.on('change', function (/*e*/) {\n                    if (this.props.valueLink) {\n                        this.props.valueLink(this.editor.getValue())\n                    } else if (this.props.onChange) {\n                        this.props.onChange({target: {value: this.editor.getValue()}})\n                    }\n                }.bind(this))\n            }\n        },\n        //showMessage: function (msg) {\n        //    //var anOption = document.createElement('div');\n        //    //anOption.innerText = msg;\n        //    //anOption.setAttribute('class', 'error-panel');\n        //    //if (this.panel) {\n        //    //    this.panel.clear();\n        //    //}\n        //    //this.panel = this.editor.addPanel(anOption, {height: 22}); // {position: 'bottom'}\n        //},\n        //clearMessage: function () {\n        //    if (this.panel) {\n        //        this.panel.clear();\n        //        this.panel = null;\n        //    }\n        //},\n        annotate(annot) {\n            CMLint.annotate(this.editor, annot)\n        },\n        clearAnnotations() {\n            CMLint.clearMarks(this.editor)\n        },\n        componentWillUnmount() {\n            this.editor.toTextArea()\n        }\n    })\n})\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground3/src/CodeMirrorViewer.js":"define(['react', 'lodash', 'jquery', //'../libs/codemirror-4.8/lib/codemirror',\n//'../libs/codemirror-4.8/mode/javascript/javascript',\n//'../libs/codemirror-4.8/mode/xml/xml',\n//'../libs/codemirror-4.8/addon/runmode/runmode'\n'codemirror', 'react-dom'], function (React, _, $, CodeMirror, ReactDOM) {\n    'use strict'\n    return React.createClass({\n        displayName: 'CodeMirrorViewer',\n        propTypes: {\n            id: React.PropTypes.string,\n            mode: React.PropTypes.string,\n            value: React.PropTypes.string,\n            valueLink: React.PropTypes.string\n        },\n        getDefaultProps() {\n            return {mode: 'html'}\n        },\n        getInitialState() {\n            return {editorId: _.uniqueId()}\n        },\n        render() {\n            const props = _.omit(this.props, ['ref', 'key', 'value', 'valueLink', 'onChange'])\n            props.id = this.props.id || this.state.editorId\n            props.className = 'cm-s-default'\n            const value = this.props.valueLink ? this.props.valueLink() : this.props.value\n            return React.DOM.pre(props, value)\n        },\n        componentWillUpdate(nextProps/*, nextState*/) {\n            const value = nextProps.valueLink ? nextProps.valueLink() : nextProps.value\n            if (this.editor && this.editor.getValue() !== value) {\n                this.editor.setValue(value || '')\n            }\n        },\n        componentDidMount() {\n            const value = this.props.valueLink ? this.props.valueLink() : this.props.value\n            let mode = this.props.mode\n            if (this.props.mode === 'html') {\n                mode = 'text/html'\n            }\n            this.editor = CodeMirror.runMode(value, mode, ReactDOM.findDOMNode(this))\n        },\n        componentWillUnmount() {\n            this.editor.toTextArea()\n        }\n    })\n})\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground3/src/fiddle.js":"'use strict'\nimport React, {Component} from 'react'\nimport ReactDOM from 'react-dom'\nimport fiddleTemplate from './fiddle.rt'\nimport * as _ from 'lodash'\nimport Firebase from 'firebase'\nimport $ from 'jquery'\n\n//var React = require('react');\n//var fiddleTemplate = require('./fiddle.rt');\n\n//var Fiddle = React.createClass({\n//    displayName: 'Fiddle',\n//    getInitialState: () => {\n//        return {\n//            name: 'Kok22o'\n//        };\n//    },\n//    render: fiddleTemplate\n//});\n//\n//module.exports = Fiddle;\n\n//export default class Fiddle extends Component {\n//    constructor() {\n//        super();\n//        this.state = {\n//            name: 'Koko'\n//        };\n//    }\n//    render = fiddleTemplate\n//}\n\n\nfunction generateRandomId() {\n    const uuid = 'xxxxxxxx'.replace(/[xy]/g, function (c) {\n        const r = _.random(0, 15)\n        return (c === 'x' ? r : r & 0x3 | 0x8).toString(16)\n    })\n    return uuid\n}\n\nconst Fiddle = React.createClass({\n    displayName: 'Fiddle',\n    componentDidMount() {\n        if (window.location.hash) {\n            const newHash = window.location.hash.replace('#', '')\n            const firebase = new Firebase('https://reacttemplates.firebaseio-demo.com/')\n            firebase.child('fiddles').child(newHash).on('value', function (snapshot) {\n                this.refs.playground.setState(snapshot.val())\n                Firebase.goOffline()\n            }.bind(this))\n        } else {\n            Firebase.goOffline()\n        }\n    },\n    save() {\n        const newHash = generateRandomId()\n        window.location.hash = newHash\n        Firebase.goOnline()\n\n        const playgroundState = this.refs.playground.state\n        const firebase = new Firebase('https://reacttemplates.firebaseio-demo.com/')\n        firebase.child('fiddles').child(newHash).set(playgroundState, function () {\n            Firebase.goOffline()\n            alert('Saved the fiddle, you can share your url') //eslint-disable-line no-alert\n        })\n    },\n    clear() {\n        this.refs.playground.clear()\n    },\n    loadSample(name) {\n        //require(['text!./samples/' + name + '.rt', 'text!./samples/' + name + '.code'], function (rt, code) {\n        //    var currentState = {\n        //        templateHTML: rt,\n        //        templateProps: code\n        //    };\n        //    //this.updateSample(currentState);\n        //    this.refs.playground.setState(currentState);\n        //});\n\n        const playground = this.refs.playground\n        $.get(`samples/${name}.rt`, null, function (data/*, textStatus, jqXHR*/) {\n            const rt = data\n            $.get(`samples/${name}.code`, null, function (data2/*, textStatus2, jqXHR2*/) {\n                const currentState = {\n                    templateHTML: rt,\n                    templateProps: _.template(data2)({name: 'template'})\n                }\n                //this.updateSample(currentState);\n                playground.setState(currentState)\n            })\n        })\n        //this.refs.playground.clear();\n    },\n    render: fiddleTemplate\n})\n\nmodule.exports = Fiddle\n\n\n\n\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground3/src/fiddle-main.js":"'use strict'\nconst React = require('react')\nconst ReactDOM = require('react-dom')\nconst fiddle = require('./fiddle.js')\n\nconst elem = React.createElement(fiddle)\nconst rootInstance = ReactDOM.render(elem, document.getElementById('container'))\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground3/src/fiddle.rt.js":"define([\n    'react/addons',\n    'lodash',\n    './playground'\n], function (React, _, playground) {\n    'use strict'\n    function onClick1(evt) {\n        evt.preventDefault()\n        this.save()\n    }\n    function onClick2(evt) {\n        evt.preventDefault()\n        this.clear()\n    }\n    function onClick3(evt) {\n        evt.preventDefault()\n        this.loadSample('rt-if')\n    }\n    function onClick4(evt) {\n        evt.preventDefault()\n        this.loadSample('rt-repeat')\n    }\n    function onClick5(evt) {\n        evt.preventDefault()\n        this.loadSample('rt-props')\n    }\n    function onClick6(evt) {\n        evt.preventDefault()\n        this.loadSample('todo')\n    }\n    function onClick7(evt) {\n        evt.preventDefault()\n        this.loadSample('weather')\n    }\n    return function () {\n        return React.createElement('div', {'className': 'fiddle'}, React.createElement('div', {'id': 'header'}, React.createElement('div', {'id': 'header-title'}, React.createElement('a', {\n            'href': 'index.html',\n            'className': 'title-link'\n        }, React.createElement('img', {\n            'className': 'nav-logo',\n            'src': 'https://wix.github.io/react-templates/img/logo-rt.svg',\n            'width': '56',\n            'height': '24'\n        })), '\\n            RT Playground\\n        '), React.createElement('div', {'id': 'buttons-bar'}, React.createElement('button', {\n            'type': 'button',\n            'className': 'btn btn-default',\n            'onClick': onClick1.bind(this)\n        }, React.createElement('span', {\n            'className': 'glyphicon glyphicon-star button-icon',\n            'aria-hidden': 'true'\n        }), 'Save fiddle\\n            '), React.createElement('button', {\n            'type': 'button',\n            'className': 'btn btn-default',\n            'onClick': onClick2.bind(this)\n        }, React.createElement('span', {\n            'className': 'glyphicon glyphicon-trash button-icon',\n            'aria-hidden': 'true'\n        }), 'Clear\\n            '), React.createElement('div', {'className': 'dropdown toolbar-dropdown'}, React.createElement('button', {\n            'className': 'btn btn-default dropdown-toggle',\n            'type': 'button',\n            'id': 'dropdownMenu1',\n            'data-toggle': 'dropdown',\n            'aria-expanded': 'true'\n        }, '\\n                    Load Sample\\n                    ', React.createElement('span', {'className': 'caret'})), React.createElement('ul', {\n            'className': 'dropdown-menu',\n            'role': 'menu',\n            'aria-labelledby': 'dropdownMenu1'\n        }, React.createElement('li', {'role': 'presentation'}, React.createElement('a', {\n            'role': 'menuitem',\n            'tabIndex': '-1',\n            'href': '#',\n            'onClick': onClick3.bind(this)\n        }, 'rt-if')), React.createElement('li', {'role': 'presentation'}, React.createElement('a', {\n            'role': 'menuitem',\n            'tabIndex': '-1',\n            'href': '#',\n            'onClick': onClick4.bind(this)\n        }, 'rt-repeat')), React.createElement('li', {'role': 'presentation'}, React.createElement('a', {\n            'role': 'menuitem',\n            'tabIndex': '-1',\n            'href': '#',\n            'onClick': onClick5.bind(this)\n        }, 'rt-props')), React.createElement('li', {'role': 'presentation'}, React.createElement('a', {\n            'role': 'menuitem',\n            'tabIndex': '-1',\n            'href': '#',\n            'onClick': onClick6.bind(this)\n        }, 'Todo')), React.createElement('li', {'role': 'presentation'}, React.createElement('a', {\n            'role': 'menuitem',\n            'tabIndex': '-1',\n            'href': '#',\n            'onClick': onClick7.bind(this)\n        }, 'Weather'))))), React.createElement('ul', {'className': 'nav-site'}, React.createElement('li', {}, React.createElement('a', {'href': 'index.html'}, 'HOME')), React.createElement('li', {}, React.createElement('a', {'href': 'https://github.com/wix/react-templates#template-directives-and-syntax'}, 'docs')), React.createElement('li', {}, React.createElement('a', {'href': 'https://github.com/wix/react-templates#installation'}, 'download')), React.createElement('li', {}, React.createElement('a', {'href': 'https://github.com/wix/react-templates'}, 'github')))), React.createElement('div', {'className': 'playground-container'}, React.createElement(playground, {\n            'ref': 'playground',\n            'direction': 'vertical',\n            'fiddle': true\n        })))\n    }\n})","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground3/src/home-main.js":"'use strict'\nconst React = require('react')\nconst ReactDOM = require('react-dom')\nconst Examples = require('./examples')\nrequire('jquery')\n\nconst elem = React.createElement(Examples)\n/*const rootInstance = */\nReactDOM.render(elem, document.getElementById('home-section'))\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground3/src/playground.js":"define([\n    'react',\n    'jquery',\n    'lodash',\n    './playground-fiddle.rt',\n    './playground.rt',\n    'react-dom',\n    'react-addons-linked-state-mixin'\n], function (React, $, _, pgFiddleTemplate, playgroundTemplate, ReactDOM, LinkedStateMixin) {\n    'use strict'\n\n    //var React = require('react');\n    //var ReactDOM = require('react-dom');\n    //var _ = require('lodash');\n    //var pgFiddleTemplate = require('./playground-fiddle.rt');\n    //var playgroundTemplate = require('./playground.rt');\n    //var $ = require('jquery');\n    //var LinkedStateMixin = require('react-addons-linked-state-mixin');\n    //function emptyFunc() {\n    //    return null;\n    //}\n\n    //function generateTemplateSource(html, editor, name) {\n    //    var code = null;\n    //    try {\n    //        code = window.reactTemplates.convertTemplateToReact(html.trim().replace(/\\r/g, ''), {modules: 'none', name: name});\n    //        clearMessage(editor);\n    //    } catch (e) {\n    //        if (e.name === 'RTCodeError') {\n    //            //index: -1 line: -1 message: \"Document should have a root element\" name: \"RTCodeError\"\n    //            editor.annotate({line: e.line, message: e.message, index: e.index});\n    //        } else {\n    //            editor.annotate({line: 1, message: e.message});\n    //        }\n    //        //showMessage(editor, msg);\n    //        console.log(e);\n    //    }\n    //    return code;\n    //}\n\n    function showMessage(editor, msg) {\n        if (editor && editor.showMessage) {\n            editor.annotate({line: 1, message: msg})\n        }\n    }\n\n    function clearMessage(editor) {\n        if (editor && editor.clearAnnotations) {\n            editor.clearAnnotations()\n        }\n    }\n\n    //function generateTemplateFunction(code) {\n    //    try {\n    //        var defineMap = {'react/addons': React, lodash: _};\n    //        var define = function (requirementsNames, content) {\n    //            var requirements = _.map(requirementsNames, function (reqName) {\n    //                return defineMap[reqName];\n    //            });\n    //            return content.apply(this, requirements);\n    //        };\n    //        /*eslint no-eval:0*/\n    //        var res = eval(code);\n    //        return res;\n    //    } catch (e) {\n    //        console.log(e);\n    //        return emptyFunc;\n    //    }\n    //}\n\n    function generateRenderFunc(renderFunc) {\n        return function () {\n            let res = null\n            try {\n                res = renderFunc.apply(this)\n            } catch (e) {\n                res = React.DOM.div.apply(this, [{style: {color: 'red'}}, 'Exception:' + e.message])\n            }\n            return React.DOM.div.apply(this, _.flatten([\n                {key: 'result'},\n                res\n            ]))\n        }\n    }\n\n    const templateHTML = '<div></div>'\n    const templateProps = [\n        'var template = React.createClass({',\n        '   render: templateRT',\n        '});'\n    ].join('\\n')\n\n    //var selfCleaningTimeout = {\n    //    componentDidUpdate: function() {\n    //        clearTimeout(this.timeoutID);\n    //    },\n    //    setTimeout: function() {\n    //        console.log('setTimeout');\n    //        clearTimeout(this.timeoutID);\n    //        this.timeoutID = setTimeout.apply(null, arguments);\n    //    }\n    //};\n\n    const Playground = React.createClass({\n        displayName: 'Playground',\n        mixins: [LinkedStateMixin],\n        propTypes: {\n            codeVisible: React.PropTypes.bool,\n            direction: React.PropTypes.oneOf(['horizontal', 'vertical']),\n            fiddle: React.PropTypes.bool,\n            name: React.PropTypes.string,\n            templateHTML: React.PropTypes.string,\n            templateProps: React.PropTypes.string\n        },\n        templateSource: '',\n        validHTML: true,\n        validProps: true,\n        setTimeout() {\n            //console.log('setTimeout');\n            clearTimeout(this.timeoutID)\n            this.timeoutID = setTimeout.apply(null, arguments)\n        },\n        getDefaultProps() {\n            return {\n                direction: 'horizontal', //vertical\n                codeVisible: true,\n                fiddle: false\n            }\n        },\n        getLayoutClass() {\n            return (this.props.direction === 'horizontal' && 'horizontal') || 'vertical' //eslint-disable-line no-extra-parens\n        },\n        //executeCode: function() {\n        //    var mountNode = this.refs.mount.getDOMNode();\n        //\n        //    try {\n        //        React.unmountComponentAtNode(mountNode);\n        //    } catch (e) { }\n        //\n        //    try {\n        //        var compiledCode = this.compileCode();\n        //        if (this.props.renderCode) {\n        //            React.render(\n        //                React.createElement(CodeMirrorEditor, {codeText: compiledCode, readOnly: true}),\n        //                mountNode\n        //            );\n        //        } else {\n        //            eval(compiledCode);\n        //        }\n        //    } catch (err) {\n        //        this.setTimeout(function() {\n        //            React.render(\n        //                React.createElement('div', {className: 'playgroundError'}, err.toString()),\n        //                mountNode\n        //            );\n        //        }, 500);\n        //    }\n        //},\n        getTabs() {\n            if (this.props.codeVisible) {\n                return [['templateHTML', 'Template'], ['templateProps', 'Class'], ['templateSource', 'Generated code']]\n            }\n            return [['templateHTML', 'Template'], ['templateSource', 'Generated code']]\n        },\n        updateSample(state) {\n            //try {\n            //    React.unmountComponentAtNode(mountNode);\n            //} catch (e) { }\n\n            this.generateCode(state)\n            //this.sampleFunc = generateTemplateFunction(this.templateSource);\n            //this.validHTML = this.sampleFunc !== emptyFunc;\n            this.validHTML = true\n            this.sampleRender = generateRenderFunc(this.sampleFunc)\n            let editor\n            try {\n                this.validProps = true\n                //console.log(state.templateProps);\n                this.sample = eval('(function () {' + this.templateSource + '\\n' + state.templateProps + '\\n return React.createElement(' + state.name + ');})()') //eslint-disable-line no-eval\n                clearMessage(this.refs.editorCode)\n            } catch (e) {\n                this.validProps = false\n                this.sample = null\n                editor = this.refs.editorCode\n                this.showError(e, editor)\n            }\n            //classBase.render = this.sampleRender;\n            //this.sample = React.createFactory(React.createClass(classBase));\n        },\n        showError(e, editor) {\n            const mountNode = ReactDOM.findDOMNode(this.refs.mount)\n            this.setTimeout(function () {\n                showMessage(editor, e.message)\n                ReactDOM.render(\n                    React.createElement('div', {className: 'playground-error'}, e.toString()),\n                    mountNode\n                )\n            }, 500)\n        },\n        showErrorAnnotation(annot, editor) {\n            const mountNode = ReactDOM.findDOMNode(this.refs.mount)\n            this.setTimeout(function () {\n                editor.annotate(annot)\n                ReactDOM.render(\n                    React.createElement('div', {className: 'playground-error'}, annot.message),\n                    mountNode\n                )\n            }, 500)\n        },\n        clear() {\n            const currentState = {\n                templateHTML,\n                templateProps\n            }\n            //this.updateSample(currentState);\n            this.setState(currentState)\n        },\n        generateCode(state) {\n            const html = state.templateHTML\n            const editor = this.refs.editorRT\n            const name = window.reactTemplates.normalizeName(state.name) + 'RT'\n            let code = null\n            let annot = null\n            try {\n                code = window.reactTemplates.convertTemplateToReact(html.trim().replace(/\\r/g, ''), {modules: 'none', name})\n                clearMessage(editor)\n            } catch (e) {\n                if (e.name === 'RTCodeError') {\n                    //index: -1 line: -1 message: \"Document should have a root element\" name: \"RTCodeError\"\n                    annot = {line: e.line, message: e.message, index: e.index}\n                } else {\n                    annot = {line: 1, message: e.message}\n                }\n                this.showErrorAnnotation(annot, editor)\n                //showMessage(editor, msg);\n                console.log(e)\n            }\n            this.templateSource = code\n        },\n        getInitialState() {\n            return {\n                templateHTML: this.props.templateHTML || templateHTML,\n                templateProps: this.props.templateProps || templateProps,\n                name: this.props.name || 'template',\n                currentTab: 'templateHTML'\n            }\n        },\n        componentDidMount() {\n            if (this.props.fiddle) {\n                window.addEventListener('resize', this.calcSize)\n                this.calcSize()\n            }\n            this.updateSample(this.state)\n            this.renderSample()\n        },\n        renderSample() {\n            const mountNode = ReactDOM.findDOMNode(this.refs.mount)\n            if (this.sample) {\n                ReactDOM.render(this.sample, mountNode)\n            }\n        },\n        componentDidUpdate() {\n            this.renderSample()\n        },\n        componentWillUnmount() {\n            window.removeEventListener('resize', this.calcSize)\n        },\n        calcSize() {\n            const contentHeight = $(window).height() - $('#header').height()\n            const height = contentHeight / 2 - 10\n\n            $('.code-area').each(function (/*i, k*/) {\n                $(this).height(height)\n                //console.log($(this).height());\n            })\n            this.refs.editorCode.editor.refresh()\n            this.refs.editorRT.editor.refresh()\n            this.refs.editorGenerated.editor.refresh()\n        },\n        componentWillUpdate(nextProps, nextState) {\n            if (nextState.templateHTML !== this.state.templateHTML || nextState.templateProps !== this.state.templateProps) {\n                this.updateSample(nextState)\n            }\n        },\n        render() {\n            this.generateCode(this.state)\n            const template = this.props.fiddle ? pgFiddleTemplate : playgroundTemplate\n            return template.apply(this)\n        }\n    })\n\n    return Playground\n})\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground3/src/playground.rt.js":"define([\n    'react/addons',\n    'lodash',\n    './CodeMirrorEditor'\n], function (React, _, CodeEditor) {\n    'use strict'\n    function onClick1(tab, tabIndex, evt) {\n        evt.preventDefault()\n        this.setState({'currentTab': tab[0]})\n    }\n    function repeatTab2(tab, tabIndex) {\n        return React.createElement('li', {\n            'role': 'presentation',\n            'key': 'tab' + tabIndex,\n            'className': _.keys(_.pick({active: this.state.currentTab === tab[0]}, _.identity)).join(' '),\n            'onClick': onClick1.bind(this, tab, tabIndex)\n        }, React.createElement('a', {'aria-controls': tab[1]}, tab[1]))\n    }\n    function onChange3(evt) {\n        this.setState({templateHTML: evt.target.value})\n    }\n    function onChange4(evt) {\n        this.setState({templateProps: evt.target.value})\n    }\n    function onSubmit5(e) {\n        e.preventDefault()\n    }\n    return function () {\n        return React.createElement('div', {'className': 'playground'}, React.createElement('div', {\n            'id': this.props.id + '-myTab',\n            'className': 'code-area ' + this.getLayoutClass()\n        }    /*  Nav tabs  */, React.createElement.apply(this, [\n            'ul',\n            {\n                'className': 'nav nav-tabs',\n                'role': 'tablist'\n            },\n            _.map(this.getTabs(), repeatTab2.bind(this))\n        ])    /*  Tab panes  */, React.createElement('div', {}, this.state.currentTab === 'templateHTML' ? React.createElement('div', {\n            'key': 'editorRT',\n            'className': 'tab-pane active'\n        }, React.createElement(CodeEditor, {\n            'ref': 'editorRT',\n            'className': 'large-text-area',\n            'style': {border: this.validHTML ? '' : '2px solid red'},\n            'value': this.state.templateHTML,\n            'mode': 'html',\n            'onChange': onChange3.bind(this)\n        })) : null, this.state.currentTab === 'templateProps' ? React.createElement('div', {\n            'key': 'editorCode',\n            'className': 'tab-pane active'\n        }, React.createElement(CodeEditor, {\n            'ref': 'editorCode',\n            'className': 'large-text-area',\n            'style': {border: this.validProps ? '' : '2px solid red'},\n            'value': this.state.templateProps,\n            'mode': 'javascript',\n            'onChange': onChange4.bind(this)\n        })) : null, this.state.currentTab === 'templateSource' ? React.createElement('div', {\n            'key': 'templateSource',\n            'className': 'tab-pane active'\n        }, React.createElement(CodeEditor, {\n            'className': 'large-text-area',\n            'value': this.templateSource,\n            'mode': 'javascript',\n            'readOnly': true\n        })) : null)), React.createElement('div', {\n            'key': 'result-area',\n            'className': 'result-area ' + this.getLayoutClass()\n        }, React.createElement('span', {'className': 'preview-title'}, '\\xA0'), React.createElement('form', {\n            'ref': 'mount',\n            'className': 'sample-view',\n            'onSubmit': onSubmit5.bind(this)\n        }    /* <this.sample key=\"sample\"> */\n             /* </this.sample> */)), React.createElement('br', {'style': {clear: 'both'}}))\n    }\n})","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground3/src/rt-main.js":"'use strict'\n/*eslint-env browser*/\n/*var _ = */require('lodash')\nconst reactTemplates = require('../../src/reactTemplates')\n//window.reactTemplates = reactTemplates;\nmodule.export = reactTemplates\n\n\n\n\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground4/conf/webpack-make-config2.js":"var path = require('path');\nvar webpack = require('webpack');\nvar ExtractTextPlugin = require('extract-text-webpack-plugin');\nvar StatsPlugin = require('stats-webpack-plugin');\nvar loadersByExtension = require('./config/loadersByExtension');\n\nmodule.exports = function(options) {\n    var entry = {\n        main: options.prerender ? './config/mainPrerenderer' : './config/mainApp'\n        // second: options.prerender ? './config/secondPrerenderer' : './config/secondApp'\n    };\n    var loaders = {\n        'jsx': options.hotComponents ? ['react-hot-loader', 'babel-loader?stage=0'] : 'babel-loader?stage=0',\n        'js': {\n            loader: 'babel-loader?stage=0',\n            include: path.join(__dirname, 'app')\n        },\n        'json': 'json-loader',\n        'coffee': 'coffee-redux-loader',\n        'json5': 'json5-loader',\n        'txt': 'raw-loader',\n        'png|jpg|jpeg|gif|svg': 'url-loader?limit=10000',\n        'woff|woff2': 'url-loader?limit=100000',\n        'ttf|eot': 'file-loader',\n        'wav|mp3': 'file-loader',\n        'html': 'html-loader',\n        'md|markdown': ['html-loader', 'markdown-loader']\n    };\n    var cssLoader = options.minimize ? 'css-loader?module' : 'css-loader?module&localIdentName=[path][name]---[local]---[hash:base64:5]';\n    var stylesheetLoaders = {\n        'css': cssLoader,\n        'less': [cssLoader, 'less-loader'],\n        'styl': [cssLoader, 'stylus-loader'],\n        'scss|sass': [cssLoader, 'sass-loader']\n    };\n    var additionalLoaders = [\n        // { test: /some-reg-exp$/, loader: 'any-loader' }\n    ];\n    var alias = {\n\n    };\n    var aliasLoader = {\n\n    };\n    var externals = [\n\n    ];\n    var modulesDirectories = ['web_modules', 'node_modules'];\n    var extensions = ['', '.web.js', '.js', '.jsx'];\n    var root = path.join(__dirname, 'app');\n    var publicPath = options.devServer ?\n        'http://localhost:2992/_assets/' :\n        '/_assets/';\n    var output = {\n        path: path.join(__dirname, 'build', options.prerender ? 'prerender' : 'public'),\n        publicPath: publicPath,\n        filename: '[name].js' + (options.longTermCaching && !options.prerender ? '?[chunkhash]' : ''),\n        chunkFilename: (options.devServer ? '[id].js' : '[name].js') + (options.longTermCaching && !options.prerender ? '?[chunkhash]' : ''),\n        sourceMapFilename: 'debugging/[file].map',\n        libraryTarget: options.prerender ? 'commonjs2' : undefined,\n        pathinfo: options.debug || options.prerender\n    };\n    var excludeFromStats = [\n        /node_modules[\\\\\\/]react(-router)?[\\\\\\/]/,\n        /node_modules[\\\\\\/]items-store[\\\\\\/]/\n    ];\n    var plugins = [\n        new webpack.PrefetchPlugin('react'),\n        new webpack.PrefetchPlugin('react/lib/ReactComponentBrowserEnvironment')\n    ];\n    if(options.prerender) {\n        plugins.push(new StatsPlugin(path.join(__dirname, 'build', 'stats.prerender.json'), {\n            chunkModules: true,\n            exclude: excludeFromStats\n        }));\n        aliasLoader['react-proxy$'] = 'react-proxy/unavailable';\n        aliasLoader['react-proxy-loader$'] = 'react-proxy-loader/unavailable';\n        externals.push(\n            /^react(\\/.*)?$/,\n            /^reflux(\\/.*)?$/,\n            'superagent',\n            'async'\n        );\n        plugins.push(new webpack.optimize.LimitChunkCountPlugin({ maxChunks: 1 }));\n    } else {\n        plugins.push(new StatsPlugin(path.join(__dirname, 'build', 'stats.json'), {\n            chunkModules: true,\n            exclude: excludeFromStats\n        }));\n    }\n    if(options.commonsChunk) {\n        plugins.push(new webpack.optimize.CommonsChunkPlugin('commons', 'commons.js' + (options.longTermCaching && !options.prerender ? '?[chunkhash]' : '')));\n    }\n    var asyncLoader = {\n        test: require('./app/route-handlers/async').map(function(name) {\n            return path.join(__dirname, 'app', 'route-handlers', name);\n        }),\n        loader: options.prerender ? 'react-proxy-loader/unavailable' : 'react-proxy-loader'\n    };\n\n\n\n    Object.keys(stylesheetLoaders).forEach(function(ext) {\n        var stylesheetLoader = stylesheetLoaders[ext];\n        if(Array.isArray(stylesheetLoader)) stylesheetLoader = stylesheetLoader.join('!');\n        if(options.prerender) {\n            stylesheetLoaders[ext] = stylesheetLoader.replace(/^css-loader/, 'css-loader/locals');\n        } else if(options.separateStylesheet) {\n            stylesheetLoaders[ext] = ExtractTextPlugin.extract('style-loader', stylesheetLoader);\n        } else {\n            stylesheetLoaders[ext] = 'style-loader!' + stylesheetLoader;\n        }\n    });\n    if(options.separateStylesheet && !options.prerender) {\n        plugins.push(new ExtractTextPlugin('[name].css' + (options.longTermCaching ? '?[contenthash]' : '')));\n    }\n    if(options.minimize && !options.prerender) {\n        plugins.push(\n            new webpack.optimize.UglifyJsPlugin({\n                compressor: {\n                    warnings: false\n                }\n            }),\n            new webpack.optimize.DedupePlugin()\n        );\n    }\n    if(options.minimize) {\n        plugins.push(\n            new webpack.DefinePlugin({\n                'process.env': {\n                    NODE_ENV: JSON.stringify('production')\n                }\n            }),\n            new webpack.NoErrorsPlugin()\n        );\n    }\n\n    return {\n        entry: entry,\n        output: output,\n        target: options.prerender ? 'node' : 'web',\n        module: {\n            loaders: [asyncLoader].concat(loadersByExtension(loaders)).concat(loadersByExtension(stylesheetLoaders)).concat(additionalLoaders)\n        },\n        devtool: options.devtool,\n        debug: options.debug,\n        resolveLoader: {\n            root: path.join(__dirname, 'node_modules'),\n            alias: aliasLoader\n        },\n        externals: externals,\n        resolve: {\n            root: root,\n            modulesDirectories: modulesDirectories,\n            extensions: extensions,\n            alias: alias\n        },\n        plugins: plugins,\n        devServer: {\n            stats: {\n                cached: false,\n                exclude: excludeFromStats\n            }\n        }\n    };\n};","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground4/conf/webpack-make-config.js":"'use strict';\n\nvar path = require('path');\nvar webpack = require('webpack');\nvar commonsPlugin = new webpack.optimize.CommonsChunkPlugin('commons.js');\n\nvar root = path.resolve(__dirname, '..');\n\nmodule.exports = function (options) {\n    var ret = {\n        //devtool: 'eval',\n        devtool: 'source-map',\n        context: root,\n        entry: {\n            fiddle: ['webpack-dev-server/client?http://localhost:3000',\n                     'webpack/hot/only-dev-server',\n                     './src/fiddle-main.js'],\n            home: ['webpack-dev-server/client?http://localhost:3000',\n                   'webpack/hot/only-dev-server',\n                   './src/home-main.js']\n        },\n        output: {\n            filename: '[name].js',\n            path: path.join(root, 'dist'),\n            publicPath: '/static/'\n        },\n        plugins: [\n            commonsPlugin\n        ],\n        externals: {\n            // require(\"jquery\") is external and available on the global var jQuery\n            jquery: 'jQuery',\n            react: 'React',\n            'react/addons': 'React',\n            lodash: '_',\n            bootstrap: 'bootstrap',\n            firebase: 'Firebase',\n            codemirror: 'CodeMirror',\n            '../libs/codemirror-4.8/lib/codemirror': 'CodeMirror'\n            //'./libs/codemirror-4.8/mode/javascript/javascript',\n            //'./libs/codemirror-4.8/addon/hint/html-hint',\n            //'./libs/codemirror-4.8/addon/hint/show-hint',\n            //'./libs/codemirror-4.8/addon/hint/xml-hint',\n            //'./libs/codemirror-4.8/addon/hint/html-hint',\n            ////'./libs/codemirror-4.8/addon/display/panel',\n            //'./libs/codemirror-4.8/mode/xml/xml',\n            ////'./libs/codemirror-4.8/mode/css/css',\n            //'./libs/codemirror-4.8/addon/runmode/runmode'\n\n            /*\n             babel-core babel-eslint babel-loader css-loader file-loader json-loader raw-loader react-templates-loader\n\n             */\n        },\n        resolve: {\n            // you can now require('file') instead of require('file.coffee')\n            extensions: ['', '.js', '.json'],\n            alias: {\n                //bootstrap: 'empty'\n            },\n        },\n        module: {\n            loaders: [\n                {test: /\\.js$/, exclude: /node_modules/, loaders: ['react-hot', 'babel-loader']},\n                {test: /\\.jsx$/, loaders: ['babel-loader']},\n                {test: /\\.html$/, loader: 'file?name=[name].[ext]'},\n                {test: /\\.json$/, loader: 'json-loader'},\n                {test: /\\.less$/, loader: 'style-loader!css-loader!less-loader'}, // use ! to chain loaders\n                {test: /\\.css$/, loader: 'style-loader!css-loader'},\n                {test: /\\.(png|jpg)$/, loader: 'url-loader?limit=8192'}, // inline base64 URLs for <=8k images, direct URLs for the rest\n                {test: /\\.rt/, exclude: /samples/, loaders: ['react-hot', 'react-templates-loader']},\n                {test: /\\.text/, loaders: ['raw-loader']}\n                //\"md|markdown\": [\"html-loader\", \"markdown-loader\"]\n            ]\n        }\n    };\n\n\n    if (options.minimize) {\n        ret.entry = {\n            fiddle: ['./src/fiddle-main.js'],\n            home: ['./src/home-main.js']\n        };\n        ret.plugins.push(\n            new webpack.optimize.UglifyJsPlugin({compressor: {warnings: false}}),\n            new webpack.optimize.DedupePlugin()\n        );\n    } else {\n        ret.entry = {\n            fiddle: ['webpack-dev-server/client?http://localhost:3000',\n                     'webpack/hot/only-dev-server',\n                     './src/fiddle-main.js'],\n            home: ['webpack-dev-server/client?http://localhost:3000',\n                   'webpack/hot/only-dev-server',\n                   './src/home-main.js']\n        };\n        ret.plugins.push(\n            new webpack.HotModuleReplacementPlugin()\n        );\n    }\n\n    return ret;\n};","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground4/samples/hello.rt.js":"define([\n    'react/addons',\n    'lodash'\n], function (React, _) {\n    'use strict';\n    return function () {\n        return React.createElement('h2', {}, 'Hello world');\n    };\n});","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground4/samples/rt-if.rt.js":"define([\n    'react/addons',\n    'lodash'\n], function (React, _) {\n    'use strict';\n    function onClick1() {\n        this.toggle();\n    }\n    return function () {\n        return React.createElement('div', {}, React.createElement('h4', {\n            'style': { cursor: 'pointer' },\n            'onClick': onClick1.bind(this)\n        }, '\\n        Click to ', this.state.open ? 'close' : 'open', '\\n    '), this.state.open ? React.createElement('p', {}, 'This is my paragraph. It opens and\\n                               closes') : null);\n    };\n});","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground4/samples/rt-props.rt.js":"define([\n    'react/addons',\n    'lodash'\n], function (React, _) {\n    'use strict';\n    function mergeProps(inline, external) {\n        var res = _.assign({}, inline, external);\n        if (inline.hasOwnProperty('style')) {\n            res.style = _.defaults(res.style, inline.style);\n        }\n        if (inline.hasOwnProperty('className') && external.hasOwnProperty('className')) {\n            res.className = external.className + ' ' + inline.className;\n        }\n        return res;\n    }\n    return function () {\n        return React.createElement('div', {}, '\\n    Style:\\n    ', React.createElement('select', { 'valueLink': this.linkState('key') }, React.createElement('option', { 'value': 'color' }, 'Color'), React.createElement('option', { 'value': 'backgroundColor' }, 'Background color'), React.createElement('option', { 'value': 'borderColor' }, 'Border color')), React.createElement('br', {}), '\\n    Value:\\n    ', React.createElement('select', { 'valueLink': this.linkState('val') }, React.createElement('option', { 'value': 'blue' }, 'Blue'), React.createElement('option', { 'value': 'red' }, 'Red'), React.createElement('option', { 'value': 'yellow' }, 'Yellow')), React.createElement('br', {}), React.createElement('br', {}), React.createElement('div', mergeProps({\n            'style': {\n                padding: '5px',\n                textAlign: 'center',\n                border: '1px solid'\n            }\n        }, this.getProps()), 'Sample'));\n    };\n});","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground4/samples/rt-repeat.rt.js":"define([\n    'react/addons',\n    'lodash'\n], function (React, _) {\n    'use strict';\n    function repeatItem1(item, itemIndex) {\n        return React.createElement('li', { 'key': itemIndex }, item);\n    }\n    return function () {\n        return React.createElement('div', {}, React.createElement.apply(this, [\n            'ul',\n            {},\n            _.map(this.state.items, repeatItem1.bind(this))\n        ]));\n    };\n});","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground4/samples/rt-require.rt.js":"define([\n    'react/addons',\n    'lodash',\n    'comps/myComp',\n    'utils/utils'\n], function (React, _, myComp, utils) {\n    'use strict';\n    return function () {\n        return React.createElement('div', {}, React.createElement(myComp, { 'customProp': utils.doSomething() }, 'myComp is just a regular tag'));\n    };\n});","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground4/samples/todo2.rt.js":"define([\n    'react/addons',\n    'lodash'\n], function (React, _) {\n    'use strict';\n    function onClick1(todo, todoIndex) {\n        this.remove(todo);\n    }\n    function onChange2(todo, todoIndex) {\n        this.toggleChecked(todoIndex);\n    }\n    function repeatTodo3(todo, todoIndex) {\n        return React.createElement('div', { 'key': todo.key }, React.createElement('button', { 'onClick': onClick1.bind(this, todo, todoIndex) }, 'x'), React.createElement('input', {\n            'type': 'checkbox',\n            'checked': todo.done,\n            'onChange': onChange2.bind(this, todo, todoIndex)\n        }), React.createElement('span', { 'style': { textDecoration: todo.done ? 'line-through' : 'none' } }, todo.value));\n    }\n    function onKeyDown4(e) {\n        if (e.keyCode == 13) {\n            e.preventDefault();\n            this.add();\n        }\n    }\n    function onClick5() {\n        this.add();\n    }\n    function onClick6() {\n        this.clearDone();\n    }\n    return function () {\n        return React.createElement.apply(this, [\n            'div',\n            {},\n            '\\n    Have ',\n            _.filter(this.state.todos, { done: true }).length,\n            ' todos done,\\n    and ',\n            _.filter(this.state.todos, { done: false }).length,\n            ' not done\\n    ',\n            React.createElement('br', {}),\n            _.map(this.state.todos, repeatTodo3.bind(this)),\n            React.createElement('input', {\n                'key': 'myinput',\n                'type': 'text',\n                'onKeyDown': onKeyDown4.bind(this),\n                'valueLink': this.linkState('edited')\n            }),\n            React.createElement('button', { 'onClick': onClick5.bind(this) }, 'Add'),\n            React.createElement('br', {}),\n            React.createElement('button', { 'onClick': onClick6.bind(this) }, 'Clear done')\n        ]);\n    };\n});","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground4/samples/todo.rt.js":"define([\n    'react/addons',\n    'lodash'\n], function (React, _) {\n    'use strict';\n    function onClick1(todo, todoIndex) {\n        this.remove(todo);\n    }\n    function onChange2(todo, todoIndex) {\n        this.toggleChecked(todoIndex);\n    }\n    function repeatTodo3(todo, todoIndex) {\n        return React.createElement('div', { 'key': todo.key }, React.createElement('img', {\n            'src': 'img/samples/delete.png',\n            'onClick': onClick1.bind(this, todo, todoIndex),\n            'title': 'Remove Todo',\n            'style': { cursor: 'pointer' }\n        }), React.createElement('input', {\n            'type': 'checkbox',\n            'checked': todo.done,\n            'onChange': onChange2.bind(this, todo, todoIndex)\n        }), React.createElement('span', { 'style': { textDecoration: todo.done ? 'line-through' : 'none' } }, todo.value));\n    }\n    function onKeyDown4(e) {\n        if (e.keyCode == 13) {\n            e.preventDefault();\n            this.add();\n        }\n    }\n    function onClick5() {\n        this.add();\n    }\n    function onClick6() {\n        this.clearDone();\n    }\n    return function () {\n        return React.createElement.apply(this, [\n            'div',\n            {},\n            React.createElement('strong', {}, this.getDone().length),\n            '\\n    done,\\n    ',\n            React.createElement('strong', {}, this.getPending().length),\n            '\\n    pending\\n    ',\n            React.createElement('br', {}),\n            _.map(this.state.todos, repeatTodo3.bind(this)),\n            React.createElement('input', {\n                'key': 'myinput',\n                'style': { width: '130px' },\n                'type': 'text',\n                'onKeyDown': onKeyDown4.bind(this),\n                'valueLink': this.linkState('edited')\n            }),\n            React.createElement('button', { 'onClick': onClick5.bind(this) }, 'Add'),\n            React.createElement('br', {}),\n            React.createElement('button', { 'onClick': onClick6.bind(this) }, 'Clear done')\n        ]);\n    };\n});","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground4/samples/weather.rt.js":"define([\n    'react/addons',\n    'lodash'\n], function (React, _) {\n    'use strict';\n    function onKeyDown1(e) {\n        if (e.keyCode === 13) {\n            e.preventDefault();\n            this.addCity();\n        }\n    }\n    function repeatWeather2(city, cityIndex, weather, weatherIndex) {\n        return React.createElement('img', {\n            'src': 'http://openweathermap.org/img/w/' + weather.icon + '.png',\n            'title': weather.description\n        });\n    }\n    function repeatCity3(city, cityIndex) {\n        return React.createElement.apply(this, [\n            'div',\n            { 'key': city.id },\n            '\\n        ',\n            cityIndex + 1,\n            ')\\n        ',\n            _.map(city.weather, repeatWeather2.bind(this, city, cityIndex)),\n            React.createElement('span', { 'style': { whiteSpace: 'nowrap' } }, city.name, ', ', city.sys.country)\n        ]);\n    }\n    return function () {\n        return React.createElement.apply(this, [\n            'div',\n            {},\n            React.createElement('h4', {}, 'Cities weather report'),\n            React.createElement('input', {\n                'placeholder': 'Type a city to add',\n                'style': { width: '130px' },\n                'valueLink': this.linkState('cityToAdd'),\n                'onKeyDown': onKeyDown1.bind(this)\n            }),\n            React.createElement('button', { 'onClick': this.addCity }, 'Add'),\n            this.state.loading ? React.createElement('div', { 'key': 'preloader' }, '\\n        -- Loading --\\n    ') : null,\n            _.map(this.state.info, repeatCity3.bind(this)),\n            React.createElement('button', { 'onClick': this.refresh }, 'Refresh')\n        ]);\n    };\n});","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground4/src/aceEditor.js":"/*global ace:true*/\ndefine(['react', 'lodash']/*, 'ace'*/, function (React, _/*, ace*/) {\n    'use strict';\n    return React.createClass({\n        displayName: 'BraceEditor',\n        propTypes: {\n            id: React.PropTypes.string,\n            mode: React.PropTypes.string,\n            readOnly: React.PropTypes.bool,\n            value: React.PropTypes.string,\n            valueLink: React.PropTypes.string,\n            onChange: React.PropTypes.function\n        },\n        getInitialState: function () {\n            return {\n                editorId: _.uniqueId()\n            };\n        },\n        componentWillMount: function () {\n        },\n        render: function () {\n            var props = _.omit(this.props, ['ref', 'key', 'value', 'valueLink', 'onChange']);\n            props.id = this.props.id || this.state.editorId;\n            return React.DOM.div(props);\n        },\n        componentWillUpdate: function (nextProps/*, nextState*/) {\n            var value = nextProps.valueLink ? nextProps.valueLink() : nextProps.value;\n            if (this.editor && this.editor.getValue() !== value) {\n                this.editor.setValue(value, 0);\n            }\n        },\n        componentDidMount: function () {\n            this.editor = ace.edit(this.props.id || this.state.editorId);\n//        this.editor.setTheme('ace/theme/monokai');\n            this.editor.setTheme('ace/theme/solarized_light');\n            if (this.props.mode !== 'html') {\n                this.editor.getSession().setMode('ace/mode/javascript');\n            } else {\n                this.editor.getSession().setMode('ace/mode/html');\n            }\n            this.editor.getSession().setUseWorker(false);\n\n            var value = this.props.valueLink ? this.props.valueLink() : this.props.value;\n            this.editor.setValue(value, 0);\n            if (this.props.readOnly) {\n                this.editor.setReadOnly(true);\n            } else {\n                this.editor.setReadOnly(false);\n                this.editor.on('change', function (/*e*/) {\n                    if (this.props.valueLink) {\n                        this.props.valueLink(this.editor.getValue());\n                    } else if (this.props.onChange) {\n                        this.props.onChange({target: {value: this.editor.getValue()}});\n                    }\n                }.bind(this));\n            }\n            this.editor.clearSelection();\n        },\n        componentWillUnmount: function () {\n            this.editor.destroy();\n        }\n    });\n});","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground4/src/CMLint.js":"define(['react', 'lodash', 'jquery', '../libs/codemirror-4.8/lib/codemirror'], function (React, _, $, CodeMirror) {\n    'use strict';\n\n    function annotationTooltip(ann) {\n        var severity = ann.severity;\n        if (!severity) {\n            severity = 'error';\n        }\n        var tip = document.createElement('div');\n        tip.className = 'CodeMirror-lint-message-' + severity;\n        tip.appendChild(document.createTextNode(ann.message));\n        return tip;\n    }\n\n    var GUTTER_ID = 'rt-annotations';\n\n    function annotate(editor, annot) {\n        //if (annot.index) {\n        //    //posFromIndex\n        //    var pos = editor.findPosH({line: 0, ch: 0}, 25, 'char');\n        //    var range = editor.findWordAt(pos);\n        //    editor.markText(range.anchor,  range.head, {className: 'editor-error'});\n        //}\n        var tipLabel = document.createDocumentFragment(); /*state.hasGutter &&*/\n        var ann = {severity: 'error', message: annot.message};\n        tipLabel.appendChild(annotationTooltip(ann));\n        editor.setGutterMarker(Math.max(annot.line, 0), GUTTER_ID, makeMarker(tipLabel, 'error', false, 'state.options.tooltips'));\n    }\n\n    function clearMarks(cm) {\n        //var state = cm.state.lint;\n        //if (state.hasGutter) cm.clearGutter(GUTTER_ID);\n        //for (var i = 0; i < state.marked.length; ++i)\n        //    state.marked[i].clear();\n        //state.marked.length = 0;\n        cm.clearGutter(GUTTER_ID);\n    }\n\n    function makeMarker(labels, severity, multiple, tooltips) {\n        var marker = document.createElement('div'), inner = marker;\n        marker.className = 'CodeMirror-lint-marker-' + severity;\n        if (multiple) {\n            inner = marker.appendChild(document.createElement('div'));\n            inner.className = 'CodeMirror-lint-marker-multiple';\n        }\n        if (tooltips !== false) {\n            CodeMirror.on(inner, 'mouseover', function (e) {\n                showTooltipFor(e, labels, inner);\n            });\n        }\n        return marker;\n    }\n\n    function showTooltip(e, content) {\n        var tt = document.createElement('div');\n        tt.className = 'CodeMirror-lint-tooltip';\n        tt.appendChild(content.cloneNode(true));\n        document.body.appendChild(tt);\n\n        function position(ev) {\n            if (!tt.parentNode) {\n                return CodeMirror.off(document, 'mousemove', position);\n            }\n            tt.style.top = Math.max(0, ev.clientY - tt.offsetHeight - 5) + 'px';\n            tt.style.left = ev.clientX + 5 + 'px';\n        }\n        CodeMirror.on(document, 'mousemove', position);\n        position(e);\n        if (tt.style.opacity !== null) {\n            tt.style.opacity = 1;\n        }\n        return tt;\n    }\n    function rm(elt) {\n        if (elt.parentNode) {\n            elt.parentNode.removeChild(elt);\n        }\n    }\n    function hideTooltip(tt) {\n        if (!tt.parentNode) {\n            return;\n        }\n        if (tt.style.opacity === null) {\n            rm(tt);\n        }\n        tt.style.opacity = 0;\n        setTimeout(function () { rm(tt); }, 600);\n    }\n\n    function showTooltipFor(e, content, node) {\n        var tooltip = showTooltip(e, content);\n        function hide() {\n            CodeMirror.off(node, 'mouseout', hide);\n            if (tooltip) { hideTooltip(tooltip); tooltip = null; }\n        }\n        var poll = setInterval(function () {\n            if (tooltip) {\n                for (var n = node; ; n = n.parentNode) {\n                    if (n === document.body) {\n                        return undefined;\n                    }\n                    if (!n) { hide(); break; }\n                }\n            }\n            if (!tooltip) {\n                return clearInterval(poll);\n            }\n        }, 400);\n        CodeMirror.on(node, 'mouseout', hide);\n    }\n\n    return {\n        GUTTER_ID: GUTTER_ID,\n        annotate: annotate,\n        clearMarks: clearMarks\n    };\n});","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground4/src/CodeMirrorEditor.js":"define(['react', 'react-dom', 'lodash', 'jquery', '../libs/codemirror-4.8/lib/codemirror',\n        './CMLint'\n        //'./libs/codemirror-4.8/mode/javascript/javascript',\n        //'./libs/codemirror-4.8/addon/hint/html-hint',\n        //'./libs/codemirror-4.8/addon/hint/show-hint',\n        //'./libs/codemirror-4.8/addon/hint/xml-hint',\n        //'./libs/codemirror-4.8/addon/hint/html-hint',\n        ////'./libs/codemirror-4.8/addon/display/panel',\n        //'./libs/codemirror-4.8/mode/xml/xml',\n        ////'./libs/codemirror-4.8/mode/css/css',\n        //'./libs/codemirror-4.8/addon/runmode/runmode'\n        //'./libs/codemirror-4.8/addon/display/placeholder'\n], function (React, ReactDOM, _, $, CodeMirror, CMLint) {\n    'use strict';\n    //codeMirror: 'libs/codemirror-4.8/lib/codemirror',\n    //htmlmixed: 'libs/codemirror-4.8/mode/htmlmixed/htmlmixed',\n    //javascript: 'libs/codemirror-4.8/mode/javascript/javascript'\n\n    var rtSchema = {\n        div: {\n            attrs: {\n                'rt-props': null,\n                'rt-if': null,\n                'rt-repeat': null,\n                'rt-class': null,\n                'rt-scope': null,\n                valueLink: null,\n                key: null,\n                ref: null,\n                dangerouslySetInnerHTML: null\n            }\n        }\n    };\n    var tags = CodeMirror.htmlSchema;\n    Object.keys(CodeMirror.htmlSchema).forEach(function (i) {\n        tags[i].attrs = _.defaults(rtSchema.div.attrs, tags[i].attrs);\n    });\n\n    function completeAfter(cm, pred) {\n        //var cur = cm.getCursor();\n        if (!pred || pred()) {\n            setTimeout(function () {\n                if (!cm.state.completionActive) {\n                    cm.showHint({completeSingle: false});\n                }\n            }, 100);\n        }\n        return CodeMirror.Pass;\n    }\n\n    function completeIfAfterLt(cm) {\n        return completeAfter(cm, function () {\n            var cur = cm.getCursor();\n            return cm.getRange(CodeMirror.Pos(cur.line, cur.ch - 1), cur) === '<'; //eslint-disable-line new-cap\n        });\n    }\n\n    function completeIfInTag(cm) {\n        return completeAfter(cm, function () {\n            var tok = cm.getTokenAt(cm.getCursor());\n            if (tok.type === 'string' && (!/['\"]/.test(tok.string.charAt(tok.string.length - 1)) || tok.string.length === 1)) {\n                return false;\n            }\n            var inner = CodeMirror.innerMode(cm.getMode(), tok.state).state;\n            return inner.tagName;\n        });\n    }\n\n    return React.createClass({\n        displayName: 'CodeMirrorEditor',\n        propTypes: {\n            id: React.PropTypes.string,\n            readOnly: React.PropTypes.bool,\n            runMode: React.PropTypes.bool,\n            mode: React.PropTypes.string,\n            value: React.PropTypes.string,\n            valueLink: React.PropTypes.string,\n            onChange: React.PropTypes.func\n        },\n        getDefaultProps: function () {\n            return {\n                readOnly: false,\n                mode: 'html'\n            };\n        },\n        getInitialState: function () {\n            return {\n                editorId: _.uniqueId()\n            };\n        },\n        //componentWillMount: function () {\n        //},\n        render: function () {\n            var props = _.omit(this.props, ['ref', 'key', 'value', 'valueLink', 'onChange']);\n            props.id = this.props.id || this.state.editorId;\n            props.defaultValue = this.props.valueLink ? this.props.valueLink() : this.props.value;\n            return React.DOM.textarea(props);\n        },\n        componentWillUpdate: function (nextProps/*, nextState*/) {\n            var value = nextProps.valueLink ? nextProps.valueLink() : nextProps.value;\n            if (this.editor && this.editor.getValue() !== value) {\n                this.editor.setValue(value || '');\n            }\n        },\n        componentDidMount: function () {\n            var value = this.props.valueLink ? this.props.valueLink() : this.props.value;\n            var options = {\n                readOnly: this.props.readOnly,\n                lineWrapping: true,\n                smartIndent: true,\n                matchBrackets: true,\n                value: value,\n                lineNumbers: true,\n                mode: 'javascript',\n                gutters: ['CodeMirror-linenumbers', 'rt-annotations'],\n                theme: 'solarized' //solarized_light solarized-light\n            };\n\n            if (this.props.mode === 'html') {\n                options.mode = 'text/html';\n                options.extraKeys = {\n                    \"'<'\": completeAfter,\n                    \"'/'\": completeIfAfterLt,\n                    \"' '\": completeIfInTag,\n                    \"'='\": completeIfInTag,\n                    'Ctrl-Space': 'autocomplete'\n                };\n                options.hintOptions = {schemaInfo: tags};\n                //options.gutters = ['CodeMirror-lint-markers'];\n                //options.lint = true;\n            } else {\n                options.mode = 'javascript';\n                //options.gutters = ['CodeMirror-lint-markers'];\n                //options.lint = true;\n            }\n\n            this.editor = CodeMirror.fromTextArea(ReactDOM.findDOMNode(this), options);\n\n            if (!this.props.readOnly) {\n                this.editor.on('change', function (/*e*/) {\n                    if (this.props.valueLink) {\n                        this.props.valueLink(this.editor.getValue());\n                    } else if (this.props.onChange) {\n                        this.props.onChange({target: {value: this.editor.getValue()}});\n                    }\n                }.bind(this));\n            }\n        },\n        //showMessage: function (msg) {\n        //    //var anOption = document.createElement('div');\n        //    //anOption.innerText = msg;\n        //    //anOption.setAttribute('class', 'error-panel');\n        //    //if (this.panel) {\n        //    //    this.panel.clear();\n        //    //}\n        //    //this.panel = this.editor.addPanel(anOption, {height: 22}); // {position: 'bottom'}\n        //},\n        //clearMessage: function () {\n        //    if (this.panel) {\n        //        this.panel.clear();\n        //        this.panel = null;\n        //    }\n        //},\n        annotate: function (annot) {\n            CMLint.annotate(this.editor, annot);\n        },\n        clearAnnotations: function () {\n            CMLint.clearMarks(this.editor);\n        },\n        componentWillUnmount: function () {\n            this.editor.toTextArea();\n        }\n    });\n});\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground4/src/CodeMirrorViewer.js":"define(['react', 'lodash', 'jquery', //'../libs/codemirror-4.8/lib/codemirror',\n//'../libs/codemirror-4.8/mode/javascript/javascript',\n//'../libs/codemirror-4.8/mode/xml/xml',\n//'../libs/codemirror-4.8/addon/runmode/runmode'\n'codemirror', 'react-dom'], function(React, _, $, CodeMirror, ReactDOM) {\n    'use strict';\n    return React.createClass({\n        displayName: 'CodeMirrorViewer',\n        propTypes: {\n            id: React.PropTypes.string,\n            mode: React.PropTypes.string,\n            value: React.PropTypes.string,\n            valueLink: React.PropTypes.string\n        },\n        getDefaultProps: function () {\n            return {mode: 'html'};\n        },\n        getInitialState: function () {\n            return {editorId: _.uniqueId()};\n        },\n        render: function () {\n            var props = _.omit(this.props, ['ref', 'key', 'value', 'valueLink', 'onChange']);\n            props.id = this.props.id || this.state.editorId;\n            props.className = 'cm-s-default';\n            var value = this.props.valueLink ? this.props.valueLink() : this.props.value;\n            return React.DOM.pre(props, value);\n        },\n        componentWillUpdate: function (nextProps/*, nextState*/) {\n            var value = nextProps.valueLink ? nextProps.valueLink() : nextProps.value;\n            if (this.editor && this.editor.getValue() !== value) {\n                this.editor.setValue(value || '');\n            }\n        },\n        componentDidMount: function () {\n            var value = this.props.valueLink ? this.props.valueLink() : this.props.value;\n            var mode = this.props.mode;\n            if (this.props.mode === 'html') {\n                mode = 'text/html';\n            }\n            this.editor = CodeMirror.runMode(value, mode, ReactDOM.findDOMNode(this));\n        },\n        componentWillUnmount: function () {\n            this.editor.toTextArea();\n        }\n    });\n});\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground4/src/fiddle.js":"'use strict';\nimport React, { Component } from 'react';\nimport ReactDOM from 'react-dom';\nimport fiddleTemplate from './fiddle.rt';\nimport * as _ from 'lodash';\nimport Firebase from 'firebase';\nimport $ from 'jquery';\n\n//var React = require('react');\n//var fiddleTemplate = require('./fiddle.rt');\n\n//var Fiddle = React.createClass({\n//    displayName: 'Fiddle',\n//    getInitialState: () => {\n//        return {\n//            name: 'Kok22o'\n//        };\n//    },\n//    render: fiddleTemplate\n//});\n//\n//module.exports = Fiddle;\n\n//export default class Fiddle extends Component {\n//    constructor() {\n//        super();\n//        this.state = {\n//            name: 'Koko'\n//        };\n//    }\n//    render = fiddleTemplate\n//}\n\n\nfunction generateRandomId() {\n    var uuid = 'xxxxxxxx'.replace(/[xy]/g, function (c) {\n        var r = _.random(0, 15);\n        return (c === 'x' ? r : r & 0x3 | 0x8).toString(16);\n    });\n    return uuid;\n}\n\nvar Fiddle = React.createClass({\n    displayName: 'Fiddle',\n    componentDidMount: function () {\n        if (window.location.hash) {\n            var newHash = window.location.hash.replace('#', '');\n            var firebase = new Firebase('https://reacttemplates.firebaseio-demo.com/');\n            firebase.child('fiddles').child(newHash).on('value', function (snapshot) {\n                this.refs.playground.setState(snapshot.val());\n                Firebase.goOffline();\n            }.bind(this));\n        } else {\n            Firebase.goOffline();\n        }\n    },\n    save: function () {\n        var newHash = generateRandomId();\n        window.location.hash = newHash;\n        Firebase.goOnline();\n\n        var playgroundState = this.refs.playground.state;\n        var firebase = new Firebase('https://reacttemplates.firebaseio-demo.com/');\n        firebase.child('fiddles').child(newHash).set(playgroundState, function () {\n            Firebase.goOffline();\n            alert('Saved the fiddle, you can share your url'); //eslint-disable-line no-alert\n        });\n    },\n    clear: function () {\n        this.refs.playground.clear();\n    },\n    loadSample: function (name) {\n        //require(['text!./samples/' + name + '.rt', 'text!./samples/' + name + '.code'], function (rt, code) {\n        //    var currentState = {\n        //        templateHTML: rt,\n        //        templateProps: code\n        //    };\n        //    //this.updateSample(currentState);\n        //    this.refs.playground.setState(currentState);\n        //});\n\n        var playground = this.refs.playground;\n        $.get(`samples/${name}.rt`, null, function (data/*, textStatus, jqXHR*/) {\n            var rt = data;\n            $.get(`samples/${name}.code`, null, function (data2/*, textStatus2, jqXHR2*/) {\n                var currentState = {\n                    templateHTML: rt,\n                    templateProps: _.template(data2)({name: 'template'})\n                };\n                //this.updateSample(currentState);\n                playground.setState(currentState);\n            });\n        });\n        //this.refs.playground.clear();\n    },\n    render: fiddleTemplate\n});\n\nmodule.exports = Fiddle;\n\n\n\n\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground4/src/fiddle-main.js":"'use strict';\nvar _ = require('lodash');\nvar React = require('react');\nvar ReactDOM = require('react-dom');\n//dwfssdf\nvar fiddle = require('./fiddle.js');\n\nvar elem = React.createElement(fiddle);\nvar rootInstance = ReactDOM.render(elem, document.getElementById('container'));\n\n//if (module.hot) {\n//    require('react-hot-loader/Injection').RootInstanceProvider.injectProvider({\n//        getRootInstances: function () {\n//            // Help React Hot Loader figure out the root component instances on the page:\n//            return [rootInstance];\n//        }\n//    });\n//}\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground4/src/fiddle.rt.js":"define([\n    'react/addons',\n    'lodash',\n    './playground'\n], function (React, _, playground) {\n    'use strict';\n    function onClick1(evt) {\n        evt.preventDefault();\n        this.save();\n    }\n    function onClick2(evt) {\n        evt.preventDefault();\n        this.clear();\n    }\n    function onClick3(evt) {\n        evt.preventDefault();\n        this.loadSample('rt-if');\n    }\n    function onClick4(evt) {\n        evt.preventDefault();\n        this.loadSample('rt-repeat');\n    }\n    function onClick5(evt) {\n        evt.preventDefault();\n        this.loadSample('rt-props');\n    }\n    function onClick6(evt) {\n        evt.preventDefault();\n        this.loadSample('todo');\n    }\n    function onClick7(evt) {\n        evt.preventDefault();\n        this.loadSample('weather');\n    }\n    return function () {\n        return React.createElement('div', { 'className': 'fiddle' }, React.createElement('div', { 'id': 'header' }, React.createElement('div', { 'id': 'header-title' }, React.createElement('a', {\n            'href': 'index.html',\n            'className': 'title-link'\n        }, React.createElement('img', {\n            'className': 'nav-logo',\n            'src': 'https://wix.github.io/react-templates/img/logo-rt.svg',\n            'width': '56',\n            'height': '24'\n        })), '\\n            RT Playground\\n        '), React.createElement('div', { 'id': 'buttons-bar' }, React.createElement('button', {\n            'type': 'button',\n            'className': 'btn btn-default',\n            'onClick': onClick1.bind(this)\n        }, React.createElement('span', {\n            'className': 'glyphicon glyphicon-star button-icon',\n            'aria-hidden': 'true'\n        }), 'Save fiddle\\n            '), React.createElement('button', {\n            'type': 'button',\n            'className': 'btn btn-default',\n            'onClick': onClick2.bind(this)\n        }, React.createElement('span', {\n            'className': 'glyphicon glyphicon-trash button-icon',\n            'aria-hidden': 'true'\n        }), 'Clear\\n            '), React.createElement('div', { 'className': 'dropdown toolbar-dropdown' }, React.createElement('button', {\n            'className': 'btn btn-default dropdown-toggle',\n            'type': 'button',\n            'id': 'dropdownMenu1',\n            'data-toggle': 'dropdown',\n            'aria-expanded': 'true'\n        }, '\\n                    Load Sample\\n                    ', React.createElement('span', { 'className': 'caret' })), React.createElement('ul', {\n            'className': 'dropdown-menu',\n            'role': 'menu',\n            'aria-labelledby': 'dropdownMenu1'\n        }, React.createElement('li', { 'role': 'presentation' }, React.createElement('a', {\n            'role': 'menuitem',\n            'tabIndex': '-1',\n            'href': '#',\n            'onClick': onClick3.bind(this)\n        }, 'rt-if')), React.createElement('li', { 'role': 'presentation' }, React.createElement('a', {\n            'role': 'menuitem',\n            'tabIndex': '-1',\n            'href': '#',\n            'onClick': onClick4.bind(this)\n        }, 'rt-repeat')), React.createElement('li', { 'role': 'presentation' }, React.createElement('a', {\n            'role': 'menuitem',\n            'tabIndex': '-1',\n            'href': '#',\n            'onClick': onClick5.bind(this)\n        }, 'rt-props')), React.createElement('li', { 'role': 'presentation' }, React.createElement('a', {\n            'role': 'menuitem',\n            'tabIndex': '-1',\n            'href': '#',\n            'onClick': onClick6.bind(this)\n        }, 'Todo')), React.createElement('li', { 'role': 'presentation' }, React.createElement('a', {\n            'role': 'menuitem',\n            'tabIndex': '-1',\n            'href': '#',\n            'onClick': onClick7.bind(this)\n        }, 'Weather'))))), React.createElement('ul', { 'className': 'nav-site' }, React.createElement('li', {}, React.createElement('a', { 'href': 'index.html' }, 'HOME')), React.createElement('li', {}, React.createElement('a', { 'href': 'https://github.com/wix/react-templates#template-directives-and-syntax' }, 'docs')), React.createElement('li', {}, React.createElement('a', { 'href': 'https://github.com/wix/react-templates#installation' }, 'download')), React.createElement('li', {}, React.createElement('a', { 'href': 'https://github.com/wix/react-templates' }, 'github')))), React.createElement('div', { 'className': 'playground-container' }, React.createElement(playground, {\n            'ref': 'playground',\n            'direction': 'vertical',\n            'fiddle': true\n        })));\n    };\n});","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground4/src/home-main.js":"'use strict';\nvar React = require('react');\nvar ReactDOM = require('react-dom');\nvar Examples = require('./examples');\nrequire('jquery');\n\nvar elem = React.createElement(Examples);\nvar rootInstance = ReactDOM.render(elem, document.getElementById('home-section'));\n\n//if (module.hot) {\n//    require('react-hot-loader/Injection').RootInstanceProvider.injectProvider({\n//        getRootInstances: function () {\n//            // Help React Hot Loader figure out the root component instances on the page:\n//            return [rootInstance];\n//        }\n//    });\n//}\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground4/src/playground-fiddle.rt.js":"define([\n    'react/addons',\n    'lodash',\n    './CodeMirrorEditor'\n], function (React, _, CodeEditor) {\n    'use strict';\n    function onChange1(e) {\n        this.setState({ templateHTML: e.target.value });\n    }\n    function onChange2(e) {\n        this.setState({ templateProps: e.target.value });\n    }\n    function onSubmit3(e) {\n        e.preventDefault();\n    }\n    return function () {\n        return React.createElement('div', { 'className': 'playground' }, React.createElement('div', { 'className': 'fiddle-row' }, React.createElement('div', {\n            'className': 'code-area',\n            'id': 'area-rt'\n        }, React.createElement(CodeEditor, {\n            'ref': 'editorRT',\n            'id': 'editor-rt',\n            'className': 'large-text-area',\n            'value': this.state.templateHTML,\n            'mode': 'html',\n            'onChange': onChange1.bind(this)\n        })), React.createElement('div', {\n            'className': 'code-area',\n            'id': 'area-code'\n        }, React.createElement(CodeEditor, {\n            'ref': 'editorCode',\n            'id': 'editor-code',\n            'className': 'large-text-area',\n            'value': this.state.templateProps,\n            'mode': 'javascript',\n            'onChange': onChange2.bind(this)\n        }))), React.createElement('div', { 'className': 'fiddle-row' }, React.createElement('div', {\n            'className': 'code-area',\n            'id': 'area-generated'\n        }, React.createElement(CodeEditor, {\n            'id': 'editor-generated',\n            'className': 'large-text-area',\n            'ref': 'editorGenerated',\n            'value': this.templateSource,\n            'mode': 'javascript',\n            'readOnly': true\n        })), React.createElement('div', {\n            'className': 'code-area',\n            'id': 'area-result'\n        }    /* <div id=\"result-container\" class=\"result-area\"> */, React.createElement('div', {\n            'id': 'result-area',\n            'key': 'result-area',\n            'className': 'sample-view'\n        }, React.createElement('form', {\n            'className': 'result-area-form',\n            'ref': 'mount',\n            'onSubmit': onSubmit3.bind(this)\n        }    /* <this.sample key=\"sample\"> */\n             /* </this.sample> */)))));\n    };\n});","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground4/src/playground.js":"define([\n    'react',\n    'jquery',\n    'lodash',\n    './playground-fiddle.rt',\n    './playground.rt',\n    'react-dom',\n    'react-addons-linked-state-mixin'\n], function(React, $, _, pgFiddleTemplate, playgroundTemplate, ReactDOM, LinkedStateMixin) {\n    'use strict';\n\n    //var React = require('react');\n    //var ReactDOM = require('react-dom');\n    //var _ = require('lodash');\n    //var pgFiddleTemplate = require('./playground-fiddle.rt');\n    //var playgroundTemplate = require('./playground.rt');\n    //var $ = require('jquery');\n    //var LinkedStateMixin = require('react-addons-linked-state-mixin');\n    //function emptyFunc() {\n    //    return null;\n    //}\n\n    //function generateTemplateSource(html, editor, name) {\n    //    var code = null;\n    //    try {\n    //        code = window.reactTemplates.convertTemplateToReact(html.trim().replace(/\\r/g, ''), {modules: 'none', name: name});\n    //        clearMessage(editor);\n    //    } catch (e) {\n    //        if (e.name === 'RTCodeError') {\n    //            //index: -1 line: -1 message: \"Document should have a root element\" name: \"RTCodeError\"\n    //            editor.annotate({line: e.line, message: e.message, index: e.index});\n    //        } else {\n    //            editor.annotate({line: 1, message: e.message});\n    //        }\n    //        //showMessage(editor, msg);\n    //        console.log(e);\n    //    }\n    //    return code;\n    //}\n\n    function showMessage(editor, msg) {\n        if (editor && editor.showMessage) {\n            editor.annotate({line: 1, message: msg});\n        }\n    }\n\n    function clearMessage(editor) {\n        if (editor && editor.clearAnnotations) {\n            editor.clearAnnotations();\n        }\n    }\n\n    //function generateTemplateFunction(code) {\n    //    try {\n    //        var defineMap = {'react/addons': React, lodash: _};\n    //        var define = function (requirementsNames, content) {\n    //            var requirements = _.map(requirementsNames, function (reqName) {\n    //                return defineMap[reqName];\n    //            });\n    //            return content.apply(this, requirements);\n    //        };\n    //        /*eslint no-eval:0*/\n    //        var res = eval(code);\n    //        return res;\n    //    } catch (e) {\n    //        console.log(e);\n    //        return emptyFunc;\n    //    }\n    //}\n\n    function generateRenderFunc(renderFunc) {\n        return function () {\n            var res = null;\n            try {\n                res = renderFunc.apply(this);\n            } catch (e) {\n                res = React.DOM.div.apply(this, [{style: {color: 'red'}}, 'Exception:' + e.message]);\n            }\n            return React.DOM.div.apply(this, _.flatten([\n                {key: 'result'},\n                res\n            ]));\n        };\n    }\n\n    var templateHTML = '<div></div>';\n    var templateProps = [\n        'var template = React.createClass({',\n        '   render: templateRT',\n        '});'\n    ].join('\\n');\n\n    //var selfCleaningTimeout = {\n    //    componentDidUpdate: function() {\n    //        clearTimeout(this.timeoutID);\n    //    },\n    //    setTimeout: function() {\n    //        console.log('setTimeout');\n    //        clearTimeout(this.timeoutID);\n    //        this.timeoutID = setTimeout.apply(null, arguments);\n    //    }\n    //};\n\n    var Playground = React.createClass({\n        displayName: 'Playground',\n        mixins: [LinkedStateMixin],\n        propTypes: {\n            codeVisible: React.PropTypes.bool,\n            direction: React.PropTypes.oneOf(['horizontal', 'vertical']),\n            fiddle: React.PropTypes.bool,\n            name: React.PropTypes.string,\n            templateHTML: React.PropTypes.string,\n            templateProps: React.PropTypes.string\n        },\n        templateSource: '',\n        validHTML: true,\n        validProps: true,\n        setTimeout: function () {\n            //console.log('setTimeout');\n            clearTimeout(this.timeoutID);\n            this.timeoutID = setTimeout.apply(null, arguments);\n        },\n        getDefaultProps: function () {\n            return {\n                direction: 'horizontal', //vertical\n                codeVisible: true,\n                fiddle: false\n            };\n        },\n        getLayoutClass: function () {\n            return (this.props.direction === 'horizontal' && 'horizontal') || 'vertical'; //eslint-disable-line no-extra-parens\n        },\n        //executeCode: function() {\n        //    var mountNode = this.refs.mount.getDOMNode();\n        //\n        //    try {\n        //        React.unmountComponentAtNode(mountNode);\n        //    } catch (e) { }\n        //\n        //    try {\n        //        var compiledCode = this.compileCode();\n        //        if (this.props.renderCode) {\n        //            React.render(\n        //                React.createElement(CodeMirrorEditor, {codeText: compiledCode, readOnly: true}),\n        //                mountNode\n        //            );\n        //        } else {\n        //            eval(compiledCode);\n        //        }\n        //    } catch (err) {\n        //        this.setTimeout(function() {\n        //            React.render(\n        //                React.createElement('div', {className: 'playgroundError'}, err.toString()),\n        //                mountNode\n        //            );\n        //        }, 500);\n        //    }\n        //},\n        getTabs: function () {\n            if (this.props.codeVisible) {\n                return [['templateHTML', 'Template'], ['templateProps', 'Class'], ['templateSource', 'Generated code']];\n            }\n            return [['templateHTML', 'Template'], ['templateSource', 'Generated code']];\n        },\n        updateSample: function (state) {\n            //try {\n            //    React.unmountComponentAtNode(mountNode);\n            //} catch (e) { }\n\n            this.generateCode(state);\n            //this.sampleFunc = generateTemplateFunction(this.templateSource);\n            //this.validHTML = this.sampleFunc !== emptyFunc;\n            this.validHTML = true;\n            this.sampleRender = generateRenderFunc(this.sampleFunc);\n            var editor;\n            try {\n                this.validProps = true;\n                //console.log(state.templateProps);\n                this.sample = eval('(function () {' + this.templateSource + '\\n' + state.templateProps + '\\n return React.createElement(' + state.name + ');})()'); //eslint-disable-line no-eval\n                clearMessage(this.refs.editorCode);\n            } catch (e) {\n                this.validProps = false;\n                this.sample = null;\n                editor = this.refs.editorCode;\n                this.showError(e, editor);\n            }\n            //classBase.render = this.sampleRender;\n            //this.sample = React.createFactory(React.createClass(classBase));\n        },\n        showError: function (e, editor) {\n            var mountNode = ReactDOM.findDOMNode(this.refs.mount);\n            this.setTimeout(function () {\n                showMessage(editor, e.message);\n                ReactDOM.render(\n                    React.createElement('div', {className: 'playground-error'}, e.toString()),\n                    mountNode\n                );\n            }, 500);\n        },\n        showErrorAnnotation: function (annot, editor) {\n            var mountNode = ReactDOM.findDOMNode(this.refs.mount);\n            this.setTimeout(function () {\n                editor.annotate(annot);\n                ReactDOM.render(\n                    React.createElement('div', {className: 'playground-error'}, annot.message),\n                    mountNode\n                );\n            }, 500);\n        },\n        clear: function () {\n            var currentState = {\n                templateHTML: templateHTML,\n                templateProps: templateProps\n            };\n            //this.updateSample(currentState);\n            this.setState(currentState);\n        },\n        generateCode: function (state) {\n            var html = state.templateHTML;\n            var editor = this.refs.editorRT;\n            var name = window.reactTemplates.normalizeName(state.name) + 'RT';\n            var code = null;\n            var annot = null;\n            try {\n                code = window.reactTemplates.convertTemplateToReact(html.trim().replace(/\\r/g, ''), {modules: 'none', name: name});\n                clearMessage(editor);\n            } catch (e) {\n                if (e.name === 'RTCodeError') {\n                    //index: -1 line: -1 message: \"Document should have a root element\" name: \"RTCodeError\"\n                    annot = {line: e.line, message: e.message, index: e.index};\n                } else {\n                    annot = {line: 1, message: e.message};\n                }\n                this.showErrorAnnotation(annot, editor);\n                //showMessage(editor, msg);\n                console.log(e);\n            }\n            this.templateSource = code;\n        },\n        getInitialState: function () {\n            return {\n                templateHTML: this.props.templateHTML || templateHTML,\n                templateProps: this.props.templateProps || templateProps,\n                name: this.props.name || 'template',\n                currentTab: 'templateHTML'\n            };\n        },\n        componentDidMount: function () {\n            if (this.props.fiddle) {\n                window.addEventListener('resize', this.calcSize);\n                this.calcSize();\n            }\n            this.updateSample(this.state);\n            this.renderSample();\n        },\n        renderSample: function () {\n            var mountNode = ReactDOM.findDOMNode(this.refs.mount);\n            if (this.sample) {\n                ReactDOM.render(this.sample, mountNode);\n            }\n        },\n        componentDidUpdate: function () {\n            this.renderSample();\n        },\n        componentWillUnmount: function () {\n            window.removeEventListener('resize', this.calcSize);\n        },\n        calcSize: function () {\n            var contentHeight = $(window).height() - $('#header').height();\n            var height = contentHeight / 2 - 10;\n\n            $('.code-area').each(function (/*i, k*/) {\n                $(this).height(height);\n                //console.log($(this).height());\n            });\n            this.refs.editorCode.editor.refresh();\n            this.refs.editorRT.editor.refresh();\n            this.refs.editorGenerated.editor.refresh();\n        },\n        componentWillUpdate: function (nextProps, nextState) {\n            if (nextState.templateHTML !== this.state.templateHTML || nextState.templateProps !== this.state.templateProps) {\n                this.updateSample(nextState);\n            }\n        },\n        render: function () {\n            this.generateCode(this.state);\n            var template = this.props.fiddle ? pgFiddleTemplate : playgroundTemplate;\n            return template.apply(this);\n        }\n    });\n\n    return Playground;\n});\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground4/src/playground.rt.js":"define([\n    'react/addons',\n    'lodash',\n    './CodeMirrorEditor'\n], function (React, _, CodeEditor) {\n    'use strict';\n    function onClick1(tab, tabIndex, evt) {\n        evt.preventDefault();\n        this.setState({ 'currentTab': tab[0] });\n    }\n    function repeatTab2(tab, tabIndex) {\n        return React.createElement('li', {\n            'role': 'presentation',\n            'key': 'tab' + tabIndex,\n            'className': _.keys(_.pick({ active: this.state.currentTab === tab[0] }, _.identity)).join(' '),\n            'onClick': onClick1.bind(this, tab, tabIndex)\n        }, React.createElement('a', { 'aria-controls': tab[1] }, tab[1]));\n    }\n    function onChange3(evt) {\n        this.setState({ templateHTML: evt.target.value });\n    }\n    function onChange4(evt) {\n        this.setState({ templateProps: evt.target.value });\n    }\n    function onSubmit5(e) {\n        e.preventDefault();\n    }\n    return function () {\n        return React.createElement('div', { 'className': 'playground' }, React.createElement('div', {\n            'id': this.props.id + '-myTab',\n            'className': 'code-area ' + this.getLayoutClass()\n        }    /*  Nav tabs  */, React.createElement.apply(this, [\n            'ul',\n            {\n                'className': 'nav nav-tabs',\n                'role': 'tablist'\n            },\n            _.map(this.getTabs(), repeatTab2.bind(this))\n        ])    /*  Tab panes  */, React.createElement('div', {}, this.state.currentTab === 'templateHTML' ? React.createElement('div', {\n            'key': 'editorRT',\n            'className': 'tab-pane active'\n        }, React.createElement(CodeEditor, {\n            'ref': 'editorRT',\n            'className': 'large-text-area',\n            'style': { border: this.validHTML ? '' : '2px solid red' },\n            'value': this.state.templateHTML,\n            'mode': 'html',\n            'onChange': onChange3.bind(this)\n        })) : null, this.state.currentTab === 'templateProps' ? React.createElement('div', {\n            'key': 'editorCode',\n            'className': 'tab-pane active'\n        }, React.createElement(CodeEditor, {\n            'ref': 'editorCode',\n            'className': 'large-text-area',\n            'style': { border: this.validProps ? '' : '2px solid red' },\n            'value': this.state.templateProps,\n            'mode': 'javascript',\n            'onChange': onChange4.bind(this)\n        })) : null, this.state.currentTab === 'templateSource' ? React.createElement('div', {\n            'key': 'templateSource',\n            'className': 'tab-pane active'\n        }, React.createElement(CodeEditor, {\n            'className': 'large-text-area',\n            'value': this.templateSource,\n            'mode': 'javascript',\n            'readOnly': true\n        })) : null)), React.createElement('div', {\n            'key': 'result-area',\n            'className': 'result-area ' + this.getLayoutClass()\n        }, React.createElement('span', { 'className': 'preview-title' }, '\\xA0'), React.createElement('form', {\n            'ref': 'mount',\n            'className': 'sample-view',\n            'onSubmit': onSubmit5.bind(this)\n        }    /* <this.sample key=\"sample\"> */\n             /* </this.sample> */)), React.createElement('br', { 'style': { clear: 'both' } }));\n    };\n});","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/src/formatters/json.js":"'use strict';\nmodule.exports = function (results/*, config*/) {\n    return JSON.stringify(results, undefined, 2);\n};","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/src/formatters/stylish.js":"'use strict';\n/**\n * @type {Chalk.ChalkModule}\n */\nconst chalk = require('chalk');\nconst _ = require('lodash');\nconst table = require('text-table');\n\n/**\n * Given a word and a count, append an s if count is not one.\n * @param {string} word A word in its singular form.\n * @param {int} count A number controlling whether word should be pluralized.\n * @returns {string} The original word with an s on the end if count is not one.\n */\nfunction pluralize(word, count) {\n    return count === 1 ? word : word + 's';\n}\n/**\n * @param {number} line\n * @return {string}\n */\nfunction lineText(line) {\n    return line < 1 ? '' : line;\n}\n\nmodule.exports = function (results) {\n    results = _.groupBy(results, 'file');\n\n    let output = '\\n';\n    let total = 0;\n    let errors = 0;\n    let warnings = 0;\n    let infos = 0;\n    let summaryColor = 'cyan';\n\n    _.forEach(results, (result, k) => {\n        const messages = result;\n\n        if (messages.length === 0) {\n            return;\n        }\n\n        total += messages.length;\n        output += chalk.underline(k) + '\\n';\n\n        output += table(\n            messages.map(message => {\n                let messageType;\n\n                if (message.level === 'ERROR') {\n                    messageType = chalk.red('error');\n                    summaryColor = 'red';\n                    errors++;\n                } else if (message.level === 'WARN') {\n                    messageType = chalk.yellow('warning');\n                    summaryColor = 'yellow';\n                    warnings++;\n                } else {\n                    messageType = chalk.cyan('info');\n                    infos++;\n                }\n\n                return [\n                    '',\n                    lineText(message.line),\n                    lineText(message.column),\n                    messageType,\n                    message.msg.replace(/\\.$/, ''),\n                    chalk.gray(message.ruleId || '')\n                ];\n            }),\n            {\n                align: ['', 'r', 'l'],\n                stringLength: str => chalk.stripColor(str).length\n            }\n        ).split('\\n').map(el => el.replace(/(\\d+)\\s+(\\d+)/, (m, p1, p2) => chalk.gray(p1 + ':' + p2))).join('\\n') + '\\n\\n';\n    });\n\n    if (total > 0) {\n        output += chalk[summaryColor].bold([\n            '\\u2716 ', total, pluralize(' message', total),\n            ' (', errors, pluralize(' error', errors), ', ',\n            warnings, pluralize(' warning', warnings), ', ',\n            infos, pluralize(' info', infos), ')\\n'\n        ].join(''));\n    }\n\n    return total > 0 ? output : '';\n};\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground3/libs/bootstrap/bootstrap.js":"/*!\n * Bootstrap v3.3.1 (http://getbootstrap.com)\n * Copyright 2011-2014 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n */\n\n/*!\n * Generated using the Bootstrap Customizer (http://getbootstrap.com/customize/?id=b3a553f0244f7a115bca)\n * Config saved to config.json and https://gist.github.com/b3a553f0244f7a115bca\n */\nif (typeof jQuery === 'undefined') {\n  throw new Error('Bootstrap\\'s JavaScript requires jQuery')\n}\n+function ($) {\n  var version = $.fn.jquery.split(' ')[0].split('.')\n  if ((version[0] < 2 && version[1] < 9) || (version[0] == 1 && version[1] == 9 && version[2] < 1)) {\n    throw new Error('Bootstrap\\'s JavaScript requires jQuery version 1.9.1 or higher')\n  }\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: dropdown.js v3.3.1\n * http://getbootstrap.com/javascript/#dropdowns\n * ========================================================================\n * Copyright 2011-2014 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // DROPDOWN CLASS DEFINITION\n  // =========================\n\n  var backdrop = '.dropdown-backdrop'\n  var toggle   = '[data-toggle=\"dropdown\"]'\n  var Dropdown = function (element) {\n    $(element).on('click.bs.dropdown', this.toggle)\n  }\n\n  Dropdown.VERSION = '3.3.1'\n\n  Dropdown.prototype.toggle = function (e) {\n    var $this = $(this)\n\n    if ($this.is('.disabled, :disabled')) return\n\n    var $parent  = getParent($this)\n    var isActive = $parent.hasClass('open')\n\n    clearMenus()\n\n    if (!isActive) {\n      if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {\n        // if mobile we use a backdrop because click events don't delegate\n        $('<div class=\"dropdown-backdrop\"/>').insertAfter($(this)).on('click', clearMenus)\n      }\n\n      var relatedTarget = { relatedTarget: this }\n      $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this\n        .trigger('focus')\n        .attr('aria-expanded', 'true')\n\n      $parent\n        .toggleClass('open')\n        .trigger('shown.bs.dropdown', relatedTarget)\n    }\n\n    return false\n  }\n\n  Dropdown.prototype.keydown = function (e) {\n    if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) return\n\n    var $this = $(this)\n\n    e.preventDefault()\n    e.stopPropagation()\n\n    if ($this.is('.disabled, :disabled')) return\n\n    var $parent  = getParent($this)\n    var isActive = $parent.hasClass('open')\n\n    if ((!isActive && e.which != 27) || (isActive && e.which == 27)) {\n      if (e.which == 27) $parent.find(toggle).trigger('focus')\n      return $this.trigger('click')\n    }\n\n    var desc = ' li:not(.divider):visible a'\n    var $items = $parent.find('[role=\"menu\"]' + desc + ', [role=\"listbox\"]' + desc)\n\n    if (!$items.length) return\n\n    var index = $items.index(e.target)\n\n    if (e.which == 38 && index > 0)                 index--                        // up\n    if (e.which == 40 && index < $items.length - 1) index++                        // down\n    if (!~index)                                      index = 0\n\n    $items.eq(index).trigger('focus')\n  }\n\n  function clearMenus(e) {\n    if (e && e.which === 3) return\n    $(backdrop).remove()\n    $(toggle).each(function () {\n      var $this         = $(this)\n      var $parent       = getParent($this)\n      var relatedTarget = { relatedTarget: this }\n\n      if (!$parent.hasClass('open')) return\n\n      $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this.attr('aria-expanded', 'false')\n      $parent.removeClass('open').trigger('hidden.bs.dropdown', relatedTarget)\n    })\n  }\n\n  function getParent($this) {\n    var selector = $this.attr('data-target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    var $parent = selector && $(selector)\n\n    return $parent && $parent.length ? $parent : $this.parent()\n  }\n\n\n  // DROPDOWN PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.dropdown')\n\n      if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)))\n      if (typeof option == 'string') data[option].call($this)\n    })\n  }\n\n  var old = $.fn.dropdown\n\n  $.fn.dropdown             = Plugin\n  $.fn.dropdown.Constructor = Dropdown\n\n\n  // DROPDOWN NO CONFLICT\n  // ====================\n\n  $.fn.dropdown.noConflict = function () {\n    $.fn.dropdown = old\n    return this\n  }\n\n\n  // APPLY TO STANDARD DROPDOWN ELEMENTS\n  // ===================================\n\n  $(document)\n    .on('click.bs.dropdown.data-api', clearMenus)\n    .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() })\n    .on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle)\n    .on('keydown.bs.dropdown.data-api', toggle, Dropdown.prototype.keydown)\n    .on('keydown.bs.dropdown.data-api', '[role=\"menu\"]', Dropdown.prototype.keydown)\n    .on('keydown.bs.dropdown.data-api', '[role=\"listbox\"]', Dropdown.prototype.keydown)\n\n}(jQuery);\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground3/libs/requirejs-plugins/text.js":"/**\n * @license RequireJS text 2.0.5 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/requirejs/text for details\n */\n/*jslint regexp: true */\n/*global require: false, XMLHttpRequest: false, ActiveXObject: false,\n  define: false, window: false, process: false, Packages: false,\n  java: false, location: false */\n\ndefine(['module'], function (module) {\n    'use strict';\n\n    var text, fs,\n        progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'],\n        xmlRegExp = /^\\s*<\\?xml(\\s)+version=[\\'\\\"](\\d)*.(\\d)*[\\'\\\"](\\s)*\\?>/im,\n        bodyRegExp = /<body[^>]*>\\s*([\\s\\S]+)\\s*<\\/body>/im,\n        hasLocation = typeof location !== 'undefined' && location.href,\n        defaultProtocol = hasLocation && location.protocol && location.protocol.replace(/\\:/, ''),\n        defaultHostName = hasLocation && location.hostname,\n        defaultPort = hasLocation && (location.port || undefined),\n        buildMap = [],\n        masterConfig = (module.config && module.config()) || {};\n\n    text = {\n        version: '2.0.5',\n\n        strip: function (content) {\n            //Strips <?xml ...?> declarations so that external SVG and XML\n            //documents can be added to a document without worry. Also, if the string\n            //is an HTML document, only the part inside the body tag is returned.\n            if (content) {\n                content = content.replace(xmlRegExp, \"\");\n                var matches = content.match(bodyRegExp);\n                if (matches) {\n                    content = matches[1];\n                }\n            } else {\n                content = \"\";\n            }\n            return content;\n        },\n\n        jsEscape: function (content) {\n            return content.replace(/(['\\\\])/g, '\\\\$1')\n                .replace(/[\\f]/g, \"\\\\f\")\n                .replace(/[\\b]/g, \"\\\\b\")\n                .replace(/[\\n]/g, \"\\\\n\")\n                .replace(/[\\t]/g, \"\\\\t\")\n                .replace(/[\\r]/g, \"\\\\r\")\n                .replace(/[\\u2028]/g, \"\\\\u2028\")\n                .replace(/[\\u2029]/g, \"\\\\u2029\");\n        },\n\n        createXhr: masterConfig.createXhr || function () {\n            //Would love to dump the ActiveX crap in here. Need IE 6 to die first.\n            var xhr, i, progId;\n            if (typeof XMLHttpRequest !== \"undefined\") {\n                return new XMLHttpRequest();\n            } else if (typeof ActiveXObject !== \"undefined\") {\n                for (i = 0; i < 3; i += 1) {\n                    progId = progIds[i];\n                    try {\n                        xhr = new ActiveXObject(progId);\n                    } catch (e) {}\n\n                    if (xhr) {\n                        progIds = [progId];  // so faster next time\n                        break;\n                    }\n                }\n            }\n\n            return xhr;\n        },\n\n        /**\n         * Parses a resource name into its component parts. Resource names\n         * look like: module/name.ext!strip, where the !strip part is\n         * optional.\n         * @param {String} name the resource name\n         * @returns {Object} with properties \"moduleName\", \"ext\" and \"strip\"\n         * where strip is a boolean.\n         */\n        parseName: function (name) {\n            var modName, ext, temp,\n                strip = false,\n                index = name.indexOf(\".\"),\n                isRelative = name.indexOf('./') === 0 ||\n                             name.indexOf('../') === 0;\n\n            if (index !== -1 && (!isRelative || index > 1)) {\n                modName = name.substring(0, index);\n                ext = name.substring(index + 1, name.length);\n            } else {\n                modName = name;\n            }\n\n            temp = ext || modName;\n            index = temp.indexOf(\"!\");\n            if (index !== -1) {\n                //Pull off the strip arg.\n                strip = temp.substring(index + 1) === \"strip\";\n                temp = temp.substring(0, index);\n                if (ext) {\n                    ext = temp;\n                } else {\n                    modName = temp;\n                }\n            }\n\n            return {\n                moduleName: modName,\n                ext: ext,\n                strip: strip\n            };\n        },\n\n        xdRegExp: /^((\\w+)\\:)?\\/\\/([^\\/\\\\]+)/,\n\n        /**\n         * Is an URL on another domain. Only works for browser use, returns\n         * false in non-browser environments. Only used to know if an\n         * optimized .js version of a text resource should be loaded\n         * instead.\n         * @param {String} url\n         * @returns Boolean\n         */\n        useXhr: function (url, protocol, hostname, port) {\n            var uProtocol, uHostName, uPort,\n                match = text.xdRegExp.exec(url);\n            if (!match) {\n                return true;\n            }\n            uProtocol = match[2];\n            uHostName = match[3];\n\n            uHostName = uHostName.split(':');\n            uPort = uHostName[1];\n            uHostName = uHostName[0];\n\n            return (!uProtocol || uProtocol === protocol) &&\n                   (!uHostName || uHostName.toLowerCase() === hostname.toLowerCase()) &&\n                   ((!uPort && !uHostName) || uPort === port);\n        },\n\n        finishLoad: function (name, strip, content, onLoad) {\n            content = strip ? text.strip(content) : content;\n            if (masterConfig.isBuild) {\n                buildMap[name] = content;\n            }\n            onLoad(content);\n        },\n\n        load: function (name, req, onLoad, config) {\n            //Name has format: some.module.filext!strip\n            //The strip part is optional.\n            //if strip is present, then that means only get the string contents\n            //inside a body tag in an HTML string. For XML/SVG content it means\n            //removing the <?xml ...?> declarations so the content can be inserted\n            //into the current doc without problems.\n\n            // Do not bother with the work if a build and text will\n            // not be inlined.\n            if (config.isBuild && !config.inlineText) {\n                onLoad();\n                return;\n            }\n\n            masterConfig.isBuild = config.isBuild;\n\n            var parsed = text.parseName(name),\n                nonStripName = parsed.moduleName +\n                    (parsed.ext ? '.' + parsed.ext : ''),\n                url = req.toUrl(nonStripName),\n                useXhr = (masterConfig.useXhr) ||\n                         text.useXhr;\n\n            //Load the text. Use XHR if possible and in a browser.\n            if (!hasLocation || useXhr(url, defaultProtocol, defaultHostName, defaultPort)) {\n                text.get(url, function (content) {\n                    text.finishLoad(name, parsed.strip, content, onLoad);\n                }, function (err) {\n                    if (onLoad.error) {\n                        onLoad.error(err);\n                    }\n                });\n            } else {\n                //Need to fetch the resource across domains. Assume\n                //the resource has been optimized into a JS module. Fetch\n                //by the module name + extension, but do not include the\n                //!strip part to avoid file system issues.\n                req([nonStripName], function (content) {\n                    text.finishLoad(parsed.moduleName + '.' + parsed.ext,\n                                    parsed.strip, content, onLoad);\n                });\n            }\n        },\n\n        write: function (pluginName, moduleName, write, config) {\n            if (buildMap.hasOwnProperty(moduleName)) {\n                var content = text.jsEscape(buildMap[moduleName]);\n                write.asModule(pluginName + \"!\" + moduleName,\n                               \"define(function () { return '\" +\n                                   content +\n                               \"';});\\n\");\n            }\n        },\n\n        writeFile: function (pluginName, moduleName, req, write, config) {\n            var parsed = text.parseName(moduleName),\n                extPart = parsed.ext ? '.' + parsed.ext : '',\n                nonStripName = parsed.moduleName + extPart,\n                //Use a '.js' file name so that it indicates it is a\n                //script that can be loaded across domains.\n                fileName = req.toUrl(parsed.moduleName + extPart) + '.js';\n\n            //Leverage own load() method to load plugin value, but only\n            //write out values that do not have the strip argument,\n            //to avoid any potential issues with ! in file names.\n            text.load(nonStripName, req, function (value) {\n                //Use own write() method to construct full module value.\n                //But need to create shell that translates writeFile's\n                //write() to the right interface.\n                var textWrite = function (contents) {\n                    return write(fileName, contents);\n                };\n                textWrite.asModule = function (moduleName, contents) {\n                    return write.asModule(moduleName, fileName, contents);\n                };\n\n                text.write(pluginName, nonStripName, textWrite, config);\n            }, config);\n        }\n    };\n\n    if (masterConfig.env === 'node' || (!masterConfig.env &&\n            typeof process !== \"undefined\" &&\n            process.versions &&\n            !!process.versions.node)) {\n        //Using special require.nodeRequire, something added by r.js.\n        fs = require.nodeRequire('fs');\n\n        text.get = function (url, callback) {\n            var file = fs.readFileSync(url, 'utf8');\n            //Remove BOM (Byte Mark Order) from utf8 files if it is there.\n            if (file.indexOf('\\uFEFF') === 0) {\n                file = file.substring(1);\n            }\n            callback(file);\n        };\n    } else if (masterConfig.env === 'xhr' || (!masterConfig.env &&\n            text.createXhr())) {\n        text.get = function (url, callback, errback, headers) {\n            var xhr = text.createXhr(), header;\n            xhr.open('GET', url, true);\n\n            //Allow plugins direct access to xhr headers\n            if (headers) {\n                for (header in headers) {\n                    if (headers.hasOwnProperty(header)) {\n                        xhr.setRequestHeader(header.toLowerCase(), headers[header]);\n                    }\n                }\n            }\n\n            //Allow overrides specified in config\n            if (masterConfig.onXhr) {\n                masterConfig.onXhr(xhr, url);\n            }\n\n            xhr.onreadystatechange = function (evt) {\n                var status, err;\n                //Do not explicitly handle errors, those should be\n                //visible via console output in the browser.\n                if (xhr.readyState === 4) {\n                    status = xhr.status;\n                    if (status > 399 && status < 600) {\n                        //An http 4xx or 5xx error. Signal an error.\n                        err = new Error(url + ' HTTP status: ' + status);\n                        err.xhr = xhr;\n                        errback(err);\n                    } else {\n                        callback(xhr.responseText);\n                    }\n                }\n            };\n            xhr.send(null);\n        };\n    } else if (masterConfig.env === 'rhino' || (!masterConfig.env &&\n            typeof Packages !== 'undefined' && typeof java !== 'undefined')) {\n        //Why Java, why is this so awkward?\n        text.get = function (url, callback) {\n            var stringBuffer, line,\n                encoding = \"utf-8\",\n                file = new java.io.File(url),\n                lineSeparator = java.lang.System.getProperty(\"line.separator\"),\n                input = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(file), encoding)),\n                content = '';\n            try {\n                stringBuffer = new java.lang.StringBuffer();\n                line = input.readLine();\n\n                // Byte Order Mark (BOM) - The Unicode Standard, version 3.0, page 324\n                // http://www.unicode.org/faq/utf_bom.html\n\n                // Note that when we use utf-8, the BOM should appear as \"EF BB BF\", but it doesn't due to this bug in the JDK:\n                // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4508058\n                if (line && line.length() && line.charAt(0) === 0xfeff) {\n                    // Eat the BOM, since we've already found the encoding on this file,\n                    // and we plan to concatenating this buffer with others; the BOM should\n                    // only appear at the top of a file.\n                    line = line.substring(1);\n                }\n\n                stringBuffer.append(line);\n\n                while ((line = input.readLine()) !== null) {\n                    stringBuffer.append(lineSeparator);\n                    stringBuffer.append(line);\n                }\n                //Make sure we return a JavaScript string and not a Java string.\n                content = String(stringBuffer.toString()); //String\n            } finally {\n                input.close();\n            }\n            callback(content);\n        };\n    }\n\n    return text;\n});\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground4/libs/bootstrap/bootstrap.js":"/*!\n * Bootstrap v3.3.1 (http://getbootstrap.com)\n * Copyright 2011-2014 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n */\n\n/*!\n * Generated using the Bootstrap Customizer (http://getbootstrap.com/customize/?id=b3a553f0244f7a115bca)\n * Config saved to config.json and https://gist.github.com/b3a553f0244f7a115bca\n */\nif (typeof jQuery === 'undefined') {\n  throw new Error('Bootstrap\\'s JavaScript requires jQuery')\n}\n+function ($) {\n  var version = $.fn.jquery.split(' ')[0].split('.')\n  if ((version[0] < 2 && version[1] < 9) || (version[0] == 1 && version[1] == 9 && version[2] < 1)) {\n    throw new Error('Bootstrap\\'s JavaScript requires jQuery version 1.9.1 or higher')\n  }\n}(jQuery);\n\n/* ========================================================================\n * Bootstrap: dropdown.js v3.3.1\n * http://getbootstrap.com/javascript/#dropdowns\n * ========================================================================\n * Copyright 2011-2014 Twitter, Inc.\n * Licensed under MIT (https://github.com/twbs/bootstrap/blob/master/LICENSE)\n * ======================================================================== */\n\n\n+function ($) {\n  'use strict';\n\n  // DROPDOWN CLASS DEFINITION\n  // =========================\n\n  var backdrop = '.dropdown-backdrop'\n  var toggle   = '[data-toggle=\"dropdown\"]'\n  var Dropdown = function (element) {\n    $(element).on('click.bs.dropdown', this.toggle)\n  }\n\n  Dropdown.VERSION = '3.3.1'\n\n  Dropdown.prototype.toggle = function (e) {\n    var $this = $(this)\n\n    if ($this.is('.disabled, :disabled')) return\n\n    var $parent  = getParent($this)\n    var isActive = $parent.hasClass('open')\n\n    clearMenus()\n\n    if (!isActive) {\n      if ('ontouchstart' in document.documentElement && !$parent.closest('.navbar-nav').length) {\n        // if mobile we use a backdrop because click events don't delegate\n        $('<div class=\"dropdown-backdrop\"/>').insertAfter($(this)).on('click', clearMenus)\n      }\n\n      var relatedTarget = { relatedTarget: this }\n      $parent.trigger(e = $.Event('show.bs.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this\n        .trigger('focus')\n        .attr('aria-expanded', 'true')\n\n      $parent\n        .toggleClass('open')\n        .trigger('shown.bs.dropdown', relatedTarget)\n    }\n\n    return false\n  }\n\n  Dropdown.prototype.keydown = function (e) {\n    if (!/(38|40|27|32)/.test(e.which) || /input|textarea/i.test(e.target.tagName)) return\n\n    var $this = $(this)\n\n    e.preventDefault()\n    e.stopPropagation()\n\n    if ($this.is('.disabled, :disabled')) return\n\n    var $parent  = getParent($this)\n    var isActive = $parent.hasClass('open')\n\n    if ((!isActive && e.which != 27) || (isActive && e.which == 27)) {\n      if (e.which == 27) $parent.find(toggle).trigger('focus')\n      return $this.trigger('click')\n    }\n\n    var desc = ' li:not(.divider):visible a'\n    var $items = $parent.find('[role=\"menu\"]' + desc + ', [role=\"listbox\"]' + desc)\n\n    if (!$items.length) return\n\n    var index = $items.index(e.target)\n\n    if (e.which == 38 && index > 0)                 index--                        // up\n    if (e.which == 40 && index < $items.length - 1) index++                        // down\n    if (!~index)                                      index = 0\n\n    $items.eq(index).trigger('focus')\n  }\n\n  function clearMenus(e) {\n    if (e && e.which === 3) return\n    $(backdrop).remove()\n    $(toggle).each(function () {\n      var $this         = $(this)\n      var $parent       = getParent($this)\n      var relatedTarget = { relatedTarget: this }\n\n      if (!$parent.hasClass('open')) return\n\n      $parent.trigger(e = $.Event('hide.bs.dropdown', relatedTarget))\n\n      if (e.isDefaultPrevented()) return\n\n      $this.attr('aria-expanded', 'false')\n      $parent.removeClass('open').trigger('hidden.bs.dropdown', relatedTarget)\n    })\n  }\n\n  function getParent($this) {\n    var selector = $this.attr('data-target')\n\n    if (!selector) {\n      selector = $this.attr('href')\n      selector = selector && /#[A-Za-z]/.test(selector) && selector.replace(/.*(?=#[^\\s]*$)/, '') // strip for ie7\n    }\n\n    var $parent = selector && $(selector)\n\n    return $parent && $parent.length ? $parent : $this.parent()\n  }\n\n\n  // DROPDOWN PLUGIN DEFINITION\n  // ==========================\n\n  function Plugin(option) {\n    return this.each(function () {\n      var $this = $(this)\n      var data  = $this.data('bs.dropdown')\n\n      if (!data) $this.data('bs.dropdown', (data = new Dropdown(this)))\n      if (typeof option == 'string') data[option].call($this)\n    })\n  }\n\n  var old = $.fn.dropdown\n\n  $.fn.dropdown             = Plugin\n  $.fn.dropdown.Constructor = Dropdown\n\n\n  // DROPDOWN NO CONFLICT\n  // ====================\n\n  $.fn.dropdown.noConflict = function () {\n    $.fn.dropdown = old\n    return this\n  }\n\n\n  // APPLY TO STANDARD DROPDOWN ELEMENTS\n  // ===================================\n\n  $(document)\n    .on('click.bs.dropdown.data-api', clearMenus)\n    .on('click.bs.dropdown.data-api', '.dropdown form', function (e) { e.stopPropagation() })\n    .on('click.bs.dropdown.data-api', toggle, Dropdown.prototype.toggle)\n    .on('keydown.bs.dropdown.data-api', toggle, Dropdown.prototype.keydown)\n    .on('keydown.bs.dropdown.data-api', '[role=\"menu\"]', Dropdown.prototype.keydown)\n    .on('keydown.bs.dropdown.data-api', '[role=\"listbox\"]', Dropdown.prototype.keydown)\n\n}(jQuery);\n","/home/travis/build/npmtest/node-npmtest-react-templates/node_modules/react-templates/playground4/libs/requirejs-plugins/text.js":"/**\n * @license RequireJS text 2.0.5 Copyright (c) 2010-2012, The Dojo Foundation All Rights Reserved.\n * Available via the MIT or new BSD license.\n * see: http://github.com/requirejs/text for details\n */\n/*jslint regexp: true */\n/*global require: false, XMLHttpRequest: false, ActiveXObject: false,\n  define: false, window: false, process: false, Packages: false,\n  java: false, location: false */\n\ndefine(['module'], function (module) {\n    'use strict';\n\n    var text, fs,\n        progIds = ['Msxml2.XMLHTTP', 'Microsoft.XMLHTTP', 'Msxml2.XMLHTTP.4.0'],\n        xmlRegExp = /^\\s*<\\?xml(\\s)+version=[\\'\\\"](\\d)*.(\\d)*[\\'\\\"](\\s)*\\?>/im,\n        bodyRegExp = /<body[^>]*>\\s*([\\s\\S]+)\\s*<\\/body>/im,\n        hasLocation = typeof location !== 'undefined' && location.href,\n        defaultProtocol = hasLocation && location.protocol && location.protocol.replace(/\\:/, ''),\n        defaultHostName = hasLocation && location.hostname,\n        defaultPort = hasLocation && (location.port || undefined),\n        buildMap = [],\n        masterConfig = (module.config && module.config()) || {};\n\n    text = {\n        version: '2.0.5',\n\n        strip: function (content) {\n            //Strips <?xml ...?> declarations so that external SVG and XML\n            //documents can be added to a document without worry. Also, if the string\n            //is an HTML document, only the part inside the body tag is returned.\n            if (content) {\n                content = content.replace(xmlRegExp, \"\");\n                var matches = content.match(bodyRegExp);\n                if (matches) {\n                    content = matches[1];\n                }\n            } else {\n                content = \"\";\n            }\n            return content;\n        },\n\n        jsEscape: function (content) {\n            return content.replace(/(['\\\\])/g, '\\\\$1')\n                .replace(/[\\f]/g, \"\\\\f\")\n                .replace(/[\\b]/g, \"\\\\b\")\n                .replace(/[\\n]/g, \"\\\\n\")\n                .replace(/[\\t]/g, \"\\\\t\")\n                .replace(/[\\r]/g, \"\\\\r\")\n                .replace(/[\\u2028]/g, \"\\\\u2028\")\n                .replace(/[\\u2029]/g, \"\\\\u2029\");\n        },\n\n        createXhr: masterConfig.createXhr || function () {\n            //Would love to dump the ActiveX crap in here. Need IE 6 to die first.\n            var xhr, i, progId;\n            if (typeof XMLHttpRequest !== \"undefined\") {\n                return new XMLHttpRequest();\n            } else if (typeof ActiveXObject !== \"undefined\") {\n                for (i = 0; i < 3; i += 1) {\n                    progId = progIds[i];\n                    try {\n                        xhr = new ActiveXObject(progId);\n                    } catch (e) {}\n\n                    if (xhr) {\n                        progIds = [progId];  // so faster next time\n                        break;\n                    }\n                }\n            }\n\n            return xhr;\n        },\n\n        /**\n         * Parses a resource name into its component parts. Resource names\n         * look like: module/name.ext!strip, where the !strip part is\n         * optional.\n         * @param {String} name the resource name\n         * @returns {Object} with properties \"moduleName\", \"ext\" and \"strip\"\n         * where strip is a boolean.\n         */\n        parseName: function (name) {\n            var modName, ext, temp,\n                strip = false,\n                index = name.indexOf(\".\"),\n                isRelative = name.indexOf('./') === 0 ||\n                             name.indexOf('../') === 0;\n\n            if (index !== -1 && (!isRelative || index > 1)) {\n                modName = name.substring(0, index);\n                ext = name.substring(index + 1, name.length);\n            } else {\n                modName = name;\n            }\n\n            temp = ext || modName;\n            index = temp.indexOf(\"!\");\n            if (index !== -1) {\n                //Pull off the strip arg.\n                strip = temp.substring(index + 1) === \"strip\";\n                temp = temp.substring(0, index);\n                if (ext) {\n                    ext = temp;\n                } else {\n                    modName = temp;\n                }\n            }\n\n            return {\n                moduleName: modName,\n                ext: ext,\n                strip: strip\n            };\n        },\n\n        xdRegExp: /^((\\w+)\\:)?\\/\\/([^\\/\\\\]+)/,\n\n        /**\n         * Is an URL on another domain. Only works for browser use, returns\n         * false in non-browser environments. Only used to know if an\n         * optimized .js version of a text resource should be loaded\n         * instead.\n         * @param {String} url\n         * @returns Boolean\n         */\n        useXhr: function (url, protocol, hostname, port) {\n            var uProtocol, uHostName, uPort,\n                match = text.xdRegExp.exec(url);\n            if (!match) {\n                return true;\n            }\n            uProtocol = match[2];\n            uHostName = match[3];\n\n            uHostName = uHostName.split(':');\n            uPort = uHostName[1];\n            uHostName = uHostName[0];\n\n            return (!uProtocol || uProtocol === protocol) &&\n                   (!uHostName || uHostName.toLowerCase() === hostname.toLowerCase()) &&\n                   ((!uPort && !uHostName) || uPort === port);\n        },\n\n        finishLoad: function (name, strip, content, onLoad) {\n            content = strip ? text.strip(content) : content;\n            if (masterConfig.isBuild) {\n                buildMap[name] = content;\n            }\n            onLoad(content);\n        },\n\n        load: function (name, req, onLoad, config) {\n            //Name has format: some.module.filext!strip\n            //The strip part is optional.\n            //if strip is present, then that means only get the string contents\n            //inside a body tag in an HTML string. For XML/SVG content it means\n            //removing the <?xml ...?> declarations so the content can be inserted\n            //into the current doc without problems.\n\n            // Do not bother with the work if a build and text will\n            // not be inlined.\n            if (config.isBuild && !config.inlineText) {\n                onLoad();\n                return;\n            }\n\n            masterConfig.isBuild = config.isBuild;\n\n            var parsed = text.parseName(name),\n                nonStripName = parsed.moduleName +\n                    (parsed.ext ? '.' + parsed.ext : ''),\n                url = req.toUrl(nonStripName),\n                useXhr = (masterConfig.useXhr) ||\n                         text.useXhr;\n\n            //Load the text. Use XHR if possible and in a browser.\n            if (!hasLocation || useXhr(url, defaultProtocol, defaultHostName, defaultPort)) {\n                text.get(url, function (content) {\n                    text.finishLoad(name, parsed.strip, content, onLoad);\n                }, function (err) {\n                    if (onLoad.error) {\n                        onLoad.error(err);\n                    }\n                });\n            } else {\n                //Need to fetch the resource across domains. Assume\n                //the resource has been optimized into a JS module. Fetch\n                //by the module name + extension, but do not include the\n                //!strip part to avoid file system issues.\n                req([nonStripName], function (content) {\n                    text.finishLoad(parsed.moduleName + '.' + parsed.ext,\n                                    parsed.strip, content, onLoad);\n                });\n            }\n        },\n\n        write: function (pluginName, moduleName, write, config) {\n            if (buildMap.hasOwnProperty(moduleName)) {\n                var content = text.jsEscape(buildMap[moduleName]);\n                write.asModule(pluginName + \"!\" + moduleName,\n                               \"define(function () { return '\" +\n                                   content +\n                               \"';});\\n\");\n            }\n        },\n\n        writeFile: function (pluginName, moduleName, req, write, config) {\n            var parsed = text.parseName(moduleName),\n                extPart = parsed.ext ? '.' + parsed.ext : '',\n                nonStripName = parsed.moduleName + extPart,\n                //Use a '.js' file name so that it indicates it is a\n                //script that can be loaded across domains.\n                fileName = req.toUrl(parsed.moduleName + extPart) + '.js';\n\n            //Leverage own load() method to load plugin value, but only\n            //write out values that do not have the strip argument,\n            //to avoid any potential issues with ! in file names.\n            text.load(nonStripName, req, function (value) {\n                //Use own write() method to construct full module value.\n                //But need to create shell that translates writeFile's\n                //write() to the right interface.\n                var textWrite = function (contents) {\n                    return write(fileName, contents);\n                };\n                textWrite.asModule = function (moduleName, contents) {\n                    return write.asModule(moduleName, fileName, contents);\n                };\n\n                text.write(pluginName, nonStripName, textWrite, config);\n            }, config);\n        }\n    };\n\n    if (masterConfig.env === 'node' || (!masterConfig.env &&\n            typeof process !== \"undefined\" &&\n            process.versions &&\n            !!process.versions.node)) {\n        //Using special require.nodeRequire, something added by r.js.\n        fs = require.nodeRequire('fs');\n\n        text.get = function (url, callback) {\n            var file = fs.readFileSync(url, 'utf8');\n            //Remove BOM (Byte Mark Order) from utf8 files if it is there.\n            if (file.indexOf('\\uFEFF') === 0) {\n                file = file.substring(1);\n            }\n            callback(file);\n        };\n    } else if (masterConfig.env === 'xhr' || (!masterConfig.env &&\n            text.createXhr())) {\n        text.get = function (url, callback, errback, headers) {\n            var xhr = text.createXhr(), header;\n            xhr.open('GET', url, true);\n\n            //Allow plugins direct access to xhr headers\n            if (headers) {\n                for (header in headers) {\n                    if (headers.hasOwnProperty(header)) {\n                        xhr.setRequestHeader(header.toLowerCase(), headers[header]);\n                    }\n                }\n            }\n\n            //Allow overrides specified in config\n            if (masterConfig.onXhr) {\n                masterConfig.onXhr(xhr, url);\n            }\n\n            xhr.onreadystatechange = function (evt) {\n                var status, err;\n                //Do not explicitly handle errors, those should be\n                //visible via console output in the browser.\n                if (xhr.readyState === 4) {\n                    status = xhr.status;\n                    if (status > 399 && status < 600) {\n                        //An http 4xx or 5xx error. Signal an error.\n                        err = new Error(url + ' HTTP status: ' + status);\n                        err.xhr = xhr;\n                        errback(err);\n                    } else {\n                        callback(xhr.responseText);\n                    }\n                }\n            };\n            xhr.send(null);\n        };\n    } else if (masterConfig.env === 'rhino' || (!masterConfig.env &&\n            typeof Packages !== 'undefined' && typeof java !== 'undefined')) {\n        //Why Java, why is this so awkward?\n        text.get = function (url, callback) {\n            var stringBuffer, line,\n                encoding = \"utf-8\",\n                file = new java.io.File(url),\n                lineSeparator = java.lang.System.getProperty(\"line.separator\"),\n                input = new java.io.BufferedReader(new java.io.InputStreamReader(new java.io.FileInputStream(file), encoding)),\n                content = '';\n            try {\n                stringBuffer = new java.lang.StringBuffer();\n                line = input.readLine();\n\n                // Byte Order Mark (BOM) - The Unicode Standard, version 3.0, page 324\n                // http://www.unicode.org/faq/utf_bom.html\n\n                // Note that when we use utf-8, the BOM should appear as \"EF BB BF\", but it doesn't due to this bug in the JDK:\n                // http://bugs.sun.com/bugdatabase/view_bug.do?bug_id=4508058\n                if (line && line.length() && line.charAt(0) === 0xfeff) {\n                    // Eat the BOM, since we've already found the encoding on this file,\n                    // and we plan to concatenating this buffer with others; the BOM should\n                    // only appear at the top of a file.\n                    line = line.substring(1);\n                }\n\n                stringBuffer.append(line);\n\n                while ((line = input.readLine()) !== null) {\n                    stringBuffer.append(lineSeparator);\n                    stringBuffer.append(line);\n                }\n                //Make sure we return a JavaScript string and not a Java string.\n                content = String(stringBuffer.toString()); //String\n            } finally {\n                input.close();\n            }\n            callback(content);\n        };\n    }\n\n    return text;\n});\n"}